ARM GAS  /tmp/cca2F75Y.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"sensors.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.bss.s,"aw",%nobits
  16              		.align	2
  19              	s:
  20 0000 00000000 		.space	4
  21              		.section	.text.get_flex_data,"ax",%progbits
  22              		.align	1
  23              		.global	get_flex_data
  24              		.arch armv6s-m
  25              		.syntax unified
  26              		.code	16
  27              		.thumb_func
  28              		.fpu softvfp
  30              	get_flex_data:
  31              	.LFB3:
  32              		.file 1 "sensors.c"
   1:sensors.c     **** #include "sensors.h"
   2:sensors.c     **** 
   3:sensors.c     **** #include "adc.h"
   4:sensors.c     **** #include "ble_uart.h"
   5:sensors.c     **** #include "common.h"
   6:sensors.c     **** #include "logger.h"
   7:sensors.c     **** 
   8:sensors.c     **** #include <stdlib.h>
   9:sensors.c     **** 
  10:sensors.c     **** #define FLEX_SENSOR_CNT      1
  11:sensors.c     **** #define PROCESS_PERIOD_MS    1000
  12:sensors.c     **** 
  13:sensors.c     **** typedef struct {
  14:sensors.c     ****   uint16_t sensor_data[FLEX_SENSOR_CNT];
  15:sensors.c     **** } flex_data_t;
  16:sensors.c     **** 
  17:sensors.c     **** typedef struct {
  18:sensors.c     ****   uint32_t last_ticks;
  19:sensors.c     **** } state_t;
  20:sensors.c     **** 
  21:sensors.c     **** static state_t s;
  22:sensors.c     **** 
  23:sensors.c     **** int get_flex_data(flex_data_t *data)
  24:sensors.c     **** {
  33              		.loc 1 24 1
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 16
  36              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cca2F75Y.s 			page 2


  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 84B0     		sub	sp, sp, #16
  42              		.cfi_def_cfa_offset 24
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  45 0006 7860     		str	r0, [r7, #4]
  46              	.LBB2:
  25:sensors.c     ****   for (int i = 0; i < FLEX_SENSOR_CNT; i++) {
  47              		.loc 1 25 12
  48 0008 0023     		movs	r3, #0
  49 000a FB60     		str	r3, [r7, #12]
  50              		.loc 1 25 3
  51 000c 0EE0     		b	.L2
  52              	.L3:
  26:sensors.c     ****     adc_enable();
  53              		.loc 1 26 5 discriminator 3
  54 000e FFF7FEFF 		bl	adc_enable
  27:sensors.c     ****     data->sensor_data[i] = adc_read();
  55              		.loc 1 27 28 discriminator 3
  56 0012 FFF7FEFF 		bl	adc_read
  57 0016 0300     		movs	r3, r0
  58 0018 1900     		movs	r1, r3
  59              		.loc 1 27 26 discriminator 3
  60 001a 7B68     		ldr	r3, [r7, #4]
  61 001c FA68     		ldr	r2, [r7, #12]
  62 001e 5200     		lsls	r2, r2, #1
  63 0020 D152     		strh	r1, [r2, r3]
  28:sensors.c     ****     adc_disable();
  64              		.loc 1 28 5 discriminator 3
  65 0022 FFF7FEFF 		bl	adc_disable
  25:sensors.c     ****     adc_enable();
  66              		.loc 1 25 41 discriminator 3
  67 0026 FB68     		ldr	r3, [r7, #12]
  68 0028 0133     		adds	r3, r3, #1
  69 002a FB60     		str	r3, [r7, #12]
  70              	.L2:
  25:sensors.c     ****     adc_enable();
  71              		.loc 1 25 3 discriminator 1
  72 002c FB68     		ldr	r3, [r7, #12]
  73 002e 002B     		cmp	r3, #0
  74 0030 EDDD     		ble	.L3
  75              	.LBE2:
  29:sensors.c     ****   }
  30:sensors.c     ****   return RET_OK;
  76              		.loc 1 30 10
  77 0032 0023     		movs	r3, #0
  31:sensors.c     **** }
  78              		.loc 1 31 1
  79 0034 1800     		movs	r0, r3
  80 0036 BD46     		mov	sp, r7
  81 0038 04B0     		add	sp, sp, #16
  82              		@ sp needed
  83 003a 80BD     		pop	{r7, pc}
  84              		.cfi_endproc
ARM GAS  /tmp/cca2F75Y.s 			page 3


  85              	.LFE3:
  87              		.section	.rodata
  88              		.align	2
  89              	.LC0:
  90 0000 52656164 		.ascii	"Reading: %hu\012\015\000"
  90      696E673A 
  90      20256875 
  90      0A0D00
  91              		.section	.text.tx_flex_data,"ax",%progbits
  92              		.align	1
  93              		.global	tx_flex_data
  94              		.syntax unified
  95              		.code	16
  96              		.thumb_func
  97              		.fpu softvfp
  99              	tx_flex_data:
 100              	.LFB4:
  32:sensors.c     **** 
  33:sensors.c     **** void tx_flex_data(flex_data_t *data)
  34:sensors.c     **** {
 101              		.loc 1 34 1
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 272
 104              		@ frame_needed = 1, uses_anonymous_args = 0
 105 0000 B0B5     		push	{r4, r5, r7, lr}
 106              		.cfi_def_cfa_offset 16
 107              		.cfi_offset 4, -16
 108              		.cfi_offset 5, -12
 109              		.cfi_offset 7, -8
 110              		.cfi_offset 14, -4
 111 0002 C4B0     		sub	sp, sp, #272
 112              		.cfi_def_cfa_offset 288
 113 0004 00AF     		add	r7, sp, #0
 114              		.cfi_def_cfa_register 7
 115 0006 7860     		str	r0, [r7, #4]
 116              	.LBB3:
  35:sensors.c     ****   for (int i = 0; i < FLEX_SENSOR_CNT; i++) {
 117              		.loc 1 35 12
 118 0008 0023     		movs	r3, #0
 119 000a 8622     		movs	r2, #134
 120 000c 5200     		lsls	r2, r2, #1
 121 000e BA18     		adds	r2, r7, r2
 122 0010 1360     		str	r3, [r2]
 123              		.loc 1 35 3
 124 0012 16E0     		b	.L6
 125              	.L7:
 126              	.LBB4:
  36:sensors.c     ****     LOG_INFO("Reading: %hu\n\r", data->sensor_data[i]);
 127              		.loc 1 36 5 discriminator 3
 128 0014 7B68     		ldr	r3, [r7, #4]
 129 0016 8624     		movs	r4, #134
 130 0018 6400     		lsls	r4, r4, #1
 131 001a 3A19     		adds	r2, r7, r4
 132 001c 1268     		ldr	r2, [r2]
 133 001e 5200     		lsls	r2, r2, #1
 134 0020 D35A     		ldrh	r3, [r2, r3]
 135 0022 1A00     		movs	r2, r3
ARM GAS  /tmp/cca2F75Y.s 			page 4


 136 0024 0C49     		ldr	r1, .L8
 137 0026 0C25     		movs	r5, #12
 138 0028 7B19     		adds	r3, r7, r5
 139 002a 1800     		movs	r0, r3
 140 002c FFF7FEFF 		bl	sprintf
 141 0030 7B19     		adds	r3, r7, r5
 142 0032 1800     		movs	r0, r3
 143 0034 FFF7FEFF 		bl	logger_write
 144              	.LBE4:
  35:sensors.c     ****   for (int i = 0; i < FLEX_SENSOR_CNT; i++) {
 145              		.loc 1 35 41 discriminator 3
 146 0038 3B19     		adds	r3, r7, r4
 147 003a 1B68     		ldr	r3, [r3]
 148 003c 0133     		adds	r3, r3, #1
 149 003e 3A19     		adds	r2, r7, r4
 150 0040 1360     		str	r3, [r2]
 151              	.L6:
  35:sensors.c     ****   for (int i = 0; i < FLEX_SENSOR_CNT; i++) {
 152              		.loc 1 35 3 discriminator 1
 153 0042 8623     		movs	r3, #134
 154 0044 5B00     		lsls	r3, r3, #1
 155 0046 FB18     		adds	r3, r7, r3
 156 0048 1B68     		ldr	r3, [r3]
 157 004a 002B     		cmp	r3, #0
 158 004c E2DD     		ble	.L7
 159              	.LBE3:
  37:sensors.c     ****   }
  38:sensors.c     **** }
 160              		.loc 1 38 1
 161 004e C046     		nop
 162 0050 C046     		nop
 163 0052 BD46     		mov	sp, r7
 164 0054 44B0     		add	sp, sp, #272
 165              		@ sp needed
 166 0056 B0BD     		pop	{r4, r5, r7, pc}
 167              	.L9:
 168              		.align	2
 169              	.L8:
 170 0058 00000000 		.word	.LC0
 171              		.cfi_endproc
 172              	.LFE4:
 174              		.section	.text.sensors_init,"ax",%progbits
 175              		.align	1
 176              		.global	sensors_init
 177              		.syntax unified
 178              		.code	16
 179              		.thumb_func
 180              		.fpu softvfp
 182              	sensors_init:
 183              	.LFB5:
  39:sensors.c     **** 
  40:sensors.c     **** void sensors_init(void)
  41:sensors.c     **** {
 184              		.loc 1 41 1
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cca2F75Y.s 			page 5


 188 0000 80B5     		push	{r7, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 7, -8
 191              		.cfi_offset 14, -4
 192 0002 00AF     		add	r7, sp, #0
 193              		.cfi_def_cfa_register 7
  42:sensors.c     ****   s.last_ticks = system_time_get();
 194              		.loc 1 42 18
 195 0004 FFF7FEFF 		bl	system_time_get
 196 0008 0200     		movs	r2, r0
 197              		.loc 1 42 16
 198 000a 024B     		ldr	r3, .L11
 199 000c 1A60     		str	r2, [r3]
  43:sensors.c     **** }
 200              		.loc 1 43 1
 201 000e C046     		nop
 202 0010 BD46     		mov	sp, r7
 203              		@ sp needed
 204 0012 80BD     		pop	{r7, pc}
 205              	.L12:
 206              		.align	2
 207              	.L11:
 208 0014 00000000 		.word	s
 209              		.cfi_endproc
 210              	.LFE5:
 212              		.section	.text.sensors_process,"ax",%progbits
 213              		.align	1
 214              		.global	sensors_process
 215              		.syntax unified
 216              		.code	16
 217              		.thumb_func
 218              		.fpu softvfp
 220              	sensors_process:
 221              	.LFB6:
  44:sensors.c     **** 
  45:sensors.c     **** void sensors_process(void)
  46:sensors.c     **** {
 222              		.loc 1 46 1
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 16
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226 0000 80B5     		push	{r7, lr}
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 7, -8
 229              		.cfi_offset 14, -4
 230 0002 84B0     		sub	sp, sp, #16
 231              		.cfi_def_cfa_offset 24
 232 0004 00AF     		add	r7, sp, #0
 233              		.cfi_def_cfa_register 7
  47:sensors.c     ****   uint32_t time = system_time_get();
 234              		.loc 1 47 19
 235 0006 FFF7FEFF 		bl	system_time_get
 236 000a 0300     		movs	r3, r0
 237 000c FB60     		str	r3, [r7, #12]
  48:sensors.c     **** 
  49:sensors.c     ****   if (system_time_cmp_ms(s.last_ticks, time) < PROCESS_PERIOD_MS) {
 238              		.loc 1 49 7
ARM GAS  /tmp/cca2F75Y.s 			page 6


 239 000e 114B     		ldr	r3, .L18
 240 0010 1B68     		ldr	r3, [r3]
 241 0012 FA68     		ldr	r2, [r7, #12]
 242 0014 1100     		movs	r1, r2
 243 0016 1800     		movs	r0, r3
 244 0018 FFF7FEFF 		bl	system_time_cmp_ms
 245 001c 0200     		movs	r2, r0
 246              		.loc 1 49 6
 247 001e FA23     		movs	r3, #250
 248 0020 9B00     		lsls	r3, r3, #2
 249 0022 9A42     		cmp	r2, r3
 250 0024 12D3     		bcc	.L17
  50:sensors.c     ****     return;
  51:sensors.c     ****   }
  52:sensors.c     ****   s.last_ticks = time;
 251              		.loc 1 52 16
 252 0026 0B4B     		ldr	r3, .L18
 253 0028 FA68     		ldr	r2, [r7, #12]
 254 002a 1A60     		str	r2, [r3]
 255              	.LBB5:
  53:sensors.c     **** 
  54:sensors.c     ****   flex_data_t flex_data;
  55:sensors.c     ****   ERR_CHECK(get_flex_data(&flex_data));
 256              		.loc 1 55 3
 257 002c 3B1D     		adds	r3, r7, #4
 258 002e 1800     		movs	r0, r3
 259 0030 FFF7FEFF 		bl	get_flex_data
 260 0034 0300     		movs	r3, r0
 261 0036 BB60     		str	r3, [r7, #8]
 262 0038 BB68     		ldr	r3, [r7, #8]
 263 003a 002B     		cmp	r3, #0
 264 003c 01D0     		beq	.L16
 265              		.loc 1 55 3 is_stmt 0 discriminator 1
 266 003e FFF7FEFF 		bl	error_handler
 267              	.L16:
 268              	.LBE5:
  56:sensors.c     **** 
  57:sensors.c     ****   tx_flex_data(&flex_data);
 269              		.loc 1 57 3 is_stmt 1
 270 0042 3B1D     		adds	r3, r7, #4
 271 0044 1800     		movs	r0, r3
 272 0046 FFF7FEFF 		bl	tx_flex_data
 273 004a 00E0     		b	.L13
 274              	.L17:
  50:sensors.c     ****   }
 275              		.loc 1 50 5
 276 004c C046     		nop
 277              	.L13:
  58:sensors.c     **** }
 278              		.loc 1 58 1
 279 004e BD46     		mov	sp, r7
 280 0050 04B0     		add	sp, sp, #16
 281              		@ sp needed
 282 0052 80BD     		pop	{r7, pc}
 283              	.L19:
 284              		.align	2
 285              	.L18:
ARM GAS  /tmp/cca2F75Y.s 			page 7


 286 0054 00000000 		.word	s
 287              		.cfi_endproc
 288              	.LFE6:
 290              		.text
 291              	.Letext0:
 292              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 293              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 294              		.file 4 "/usr/include/newlib/sys/_types.h"
 295              		.file 5 "/usr/include/newlib/sys/reent.h"
 296              		.file 6 "/usr/include/newlib/sys/lock.h"
 297              		.file 7 "/usr/include/newlib/stdlib.h"
ARM GAS  /tmp/cca2F75Y.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sensors.c
     /tmp/cca2F75Y.s:16     .bss.s:0000000000000000 $d
     /tmp/cca2F75Y.s:19     .bss.s:0000000000000000 s
     /tmp/cca2F75Y.s:22     .text.get_flex_data:0000000000000000 $t
     /tmp/cca2F75Y.s:30     .text.get_flex_data:0000000000000000 get_flex_data
     /tmp/cca2F75Y.s:88     .rodata:0000000000000000 $d
     /tmp/cca2F75Y.s:92     .text.tx_flex_data:0000000000000000 $t
     /tmp/cca2F75Y.s:99     .text.tx_flex_data:0000000000000000 tx_flex_data
     /tmp/cca2F75Y.s:170    .text.tx_flex_data:0000000000000058 $d
     /tmp/cca2F75Y.s:175    .text.sensors_init:0000000000000000 $t
     /tmp/cca2F75Y.s:182    .text.sensors_init:0000000000000000 sensors_init
     /tmp/cca2F75Y.s:208    .text.sensors_init:0000000000000014 $d
     /tmp/cca2F75Y.s:213    .text.sensors_process:0000000000000000 $t
     /tmp/cca2F75Y.s:220    .text.sensors_process:0000000000000000 sensors_process
     /tmp/cca2F75Y.s:286    .text.sensors_process:0000000000000054 $d
                           .group:0000000000000000 wm4.0.0ccbabe563133fc225e2d8e0f610ba9f
                           .group:0000000000000000 wm4.stdint.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.ble_uart.h.7.0b32560d3dbdc3997dde02505c6c1d29
                           .group:0000000000000000 wm4.common.h.9.9862d16395f6d712cb62bb1aea663ff0
                           .group:0000000000000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:0000000000000000 wm4.newlib.h.21.1ae2897bc09bbe4bc80ffb801fb02432
                           .group:0000000000000000 wm4.ieeefp.h.77.f33a4dce62116f6f5175ff8bae57a54c
                           .group:0000000000000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:0000000000000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:0000000000000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:0000000000000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:0000000000000000 wm4.stddef.h.181.c3f52a3b0f4c288bddb5dda1562858e2
                           .group:0000000000000000 wm4.cdefs.h.49.6260d97adb8d27534cbdc0f868b8ea87
                           .group:0000000000000000 wm4.stddef.h.39.b727a6c3269d9d6ef9fc646b721a8287
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:0000000000000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:0000000000000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:0000000000000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:0000000000000000 wm4.lock.h.2.c0958401bd0ce484d507ee19aacab817
                           .group:0000000000000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:0000000000000000 wm4.types.h.40.8b6acba56cefbb11746718204edc8f5e
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:0000000000000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:0000000000000000 wm4._timeval.h.32.bec3221fa7a9bb0bdde696c9c57e47d2
                           .group:0000000000000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:0000000000000000 wm4.select.h.19.97ca6fd0c752a0f3b6719fd314d361e6
                           .group:0000000000000000 wm4.types.h.51.5571ec98f267d17d3c670b7a3ba33afa
                           .group:0000000000000000 wm4.sched.h.22.c60982713a5c428609783c78f9c78d95
                           .group:0000000000000000 wm4._pthreadtypes.h.36.fcee9961c35163dde6267ef772ad1972
                           .group:0000000000000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:0000000000000000 wm4.stdio.h.81.932d0c162786b883f622b8d05c120c78
                           .group:0000000000000000 wm4.logger.h.8.8a6564f2814be69da4236f440d33cbee
                           .group:0000000000000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:0000000000000000 wm4.stdlib.h.56.f4862cfbf4363a1db01842d5bdf72c18

ARM GAS  /tmp/cca2F75Y.s 			page 9


UNDEFINED SYMBOLS
adc_enable
adc_read
adc_disable
sprintf
logger_write
system_time_get
system_time_cmp_ms
error_handler
