ARM GAS  /tmp/ccpZN1QB.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"ble_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.__NVIC_EnableIRQ,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	__NVIC_EnableIRQ:
  24              	.LFB25:
  25              		.file 1 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h"
   1:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**************************************************************************//**
   2:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * @file     core_cm0plus.h
   3:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * @brief    CMSIS Cortex-M0+ Core Peripheral Access Layer Header File
   4:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * @version  V5.0.6
   5:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * @date     28. May 2018
   6:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
   7:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*
   8:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *
  10:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *
  12:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * not use this file except in compliance with the License.
  14:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * You may obtain a copy of the License at
  15:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *
  16:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *
  18:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * See the License for the specific language governing permissions and
  22:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * limitations under the License.
  23:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
  24:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  25:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if   defined ( __ICCARM__ )
  26:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined (__clang__)
  28:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
  30:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  31:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_GENERIC
  32:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_GENERIC
  33:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/ccpZN1QB.s 			page 2


  34:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #include <stdint.h>
  35:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  36:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
  37:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  extern "C" {
  38:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
  39:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  40:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
  41:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  44:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  47:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****      Unions are used for effective representation of core registers.
  49:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  50:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****      Function-like macros are used to allow more efficient code.
  52:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
  53:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  54:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  55:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
  56:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *                 CMSIS definitions
  57:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
  58:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
  59:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup Cortex-M0+
  60:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
  61:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
  62:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  63:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #include "cmsis_version.h"
  64:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  
  65:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*  CMSIS CM0+ definitions */
  66:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_MAIN (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [3
  67:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_SUB  (__CM_CMSIS_VERSION_SUB)                   /*!< \deprecated [1
  68:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION      ((__CM0PLUS_CMSIS_VERSION_MAIN << 16U) | \
  69:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****                                        __CM0PLUS_CMSIS_VERSION_SUB           )  /*!< \deprecated CM
  70:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  71:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORTEX_M                   (0U)                                       /*!< Cortex-M Core 
  72:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  73:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     This core does not support an FPU at all
  75:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
  76:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __FPU_USED       0U
  77:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  78:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined ( __CC_ARM )
  79:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __TARGET_FPU_VFP
  80:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  82:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  83:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __ARM_PCS_VFP
  85:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  87:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  88:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __GNUC__ )
  89:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
ARM GAS  /tmp/ccpZN1QB.s 			page 3


  91:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  92:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  93:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __ICCARM__ )
  94:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __ARMVFP__
  95:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  97:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  98:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TI_ARM__ )
  99:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __TI_VFP_SUPPORT__
 100:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 102:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 103:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TASKING__ )
 104:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __FPU_VFP__
 105:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 107:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 108:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __CSMC__ )
 109:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if ( __CSMC__ & 0x400U)
 110:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 112:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 113:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 114:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 115:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 117:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 118:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 119:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 120:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 121:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 122:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif /* __CORE_CM0PLUS_H_GENERIC */
 123:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 124:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CMSIS_GENERIC
 125:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 126:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_DEPENDANT
 127:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_DEPENDANT
 128:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 129:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 130:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  extern "C" {
 131:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 132:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 133:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* check device defines and use defaults */
 134:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined __CHECK_DEVICE_DEFINES
 135:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __CM0PLUS_REV
 136:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __CM0PLUS_REV             0x0000U
 137:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__CM0PLUS_REV not defined in device header file; using default!"
 138:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 139:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 140:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __MPU_PRESENT
 141:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __MPU_PRESENT             0U
 142:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 143:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 144:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 145:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __VTOR_PRESENT
 146:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __VTOR_PRESENT            0U
 147:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
ARM GAS  /tmp/ccpZN1QB.s 			page 4


 148:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 149:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 150:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __NVIC_PRIO_BITS
 151:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __NVIC_PRIO_BITS          2U
 152:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 153:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 154:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 155:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __Vendor_SysTickConfig
 156:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __Vendor_SysTickConfig    0U
 157:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 158:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 159:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 160:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 161:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* IO definitions (access restrictions to peripheral registers) */
 162:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 163:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 164:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 165:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     <strong>IO Type Qualifiers</strong> are used
 166:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     \li to specify the access to peripheral variables.
 167:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     \li for automatic generation of peripheral register debug information.
 168:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 169:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 170:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 171:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #else
 172:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 173:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 174:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 175:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 176:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 177:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* following defines should be used for structure members */
 178:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 179:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 180:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 181:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 182:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group Cortex-M0+ */
 183:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 184:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 185:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 186:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 187:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *                 Register Abstraction
 188:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   Core Register contain:
 189:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core Register
 190:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Register
 191:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SCB Register
 192:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Register
 193:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core MPU Register
 194:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 195:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 196:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 197:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 198:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 199:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 200:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 201:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 202:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 203:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Core Register type definitions.
 204:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
ARM GAS  /tmp/ccpZN1QB.s 			page 5


 205:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 206:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 207:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 208:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 209:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 210:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 211:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 212:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 213:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 214:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 215:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 216:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 217:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 218:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 219:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 220:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 221:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } APSR_Type;
 222:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 223:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* APSR Register Definitions */
 224:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 225:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 226:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 227:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 228:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 229:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 230:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 231:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 232:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 233:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 234:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 235:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 236:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 237:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 238:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 239:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 240:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 241:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 242:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 243:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 244:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 245:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 246:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 247:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 248:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } IPSR_Type;
 249:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 250:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* IPSR Register Definitions */
 251:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 252:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 253:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 254:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 255:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 256:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 257:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 258:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 259:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 260:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 261:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
ARM GAS  /tmp/ccpZN1QB.s 			page 6


 262:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 263:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 264:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 265:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 266:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 267:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 268:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 269:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 270:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 271:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 272:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } xPSR_Type;
 273:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 274:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* xPSR Register Definitions */
 275:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 276:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 277:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 278:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 279:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 280:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 281:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 282:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 283:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 284:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 285:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 286:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 287:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 288:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 289:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 290:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 291:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 292:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 293:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 294:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 295:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Control Registers (CONTROL).
 296:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 297:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 298:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 299:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 300:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 301:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 302:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 303:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 304:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 305:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } CONTROL_Type;
 307:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 308:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* CONTROL Register Definitions */
 309:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 310:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 311:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 312:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 313:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 314:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 315:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CORE */
 316:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 317:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 318:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
ARM GAS  /tmp/ccpZN1QB.s 			page 7


 319:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 320:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 321:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Type definitions for the NVIC Registers
 322:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 323:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 324:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 325:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 326:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 327:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 328:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 329:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 330:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 331:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0[31U];
 332:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 333:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RSERVED1[31U];
 334:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 335:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED2[31U];
 336:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 337:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED3[31U];
 338:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED4[64U];
 339:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 340:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }  NVIC_Type;
 341:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 342:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_NVIC */
 343:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 344:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 345:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 346:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 347:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 348:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Control Block Registers
 349:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 350:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 351:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 352:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 353:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Control Block (SCB).
 354:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 355:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 356:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 357:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 358:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 359:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 360:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 361:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #else
 362:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0;
 363:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 364:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 365:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 366:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 367:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED1;
 368:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 369:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 370:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } SCB_Type;
 371:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 372:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB CPUID Register Definitions */
 373:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 374:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 375:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/ccpZN1QB.s 			page 8


 376:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 377:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 378:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 379:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 380:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 381:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 382:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 383:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 384:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 385:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 386:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 387:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 388:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 389:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 390:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 391:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 392:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 393:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 394:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 395:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 396:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 397:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 398:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 399:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 400:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 401:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 402:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 403:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 404:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 405:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 406:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 407:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 408:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 409:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 410:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 411:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 412:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 413:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 414:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 415:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 416:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 417:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 418:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Pos                 8U                                            /*!< SCB 
 419:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Msk                (0xFFFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 420:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 421:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 422:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 423:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 424:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 425:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 426:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 427:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 428:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 429:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 430:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 431:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 432:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
ARM GAS  /tmp/ccpZN1QB.s 			page 9


 433:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 434:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 435:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 436:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 437:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 438:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB System Control Register Definitions */
 439:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 440:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 441:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 442:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 443:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 444:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 445:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 446:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 447:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 448:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Configuration Control Register Definitions */
 449:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 450:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 451:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 452:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 453:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 454:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 455:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB System Handler Control and State Register Definitions */
 456:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 457:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 458:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 459:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SCB */
 460:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 461:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 462:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 463:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 464:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 465:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Timer Registers.
 466:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 467:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 468:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 469:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 470:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Timer (SysTick).
 471:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 472:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 473:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 474:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 475:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 476:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 477:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 478:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } SysTick_Type;
 479:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 480:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Control / Status Register Definitions */
 481:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 482:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 483:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 484:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 485:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 486:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 487:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 488:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 489:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/ccpZN1QB.s 			page 10


 490:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 491:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 492:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 493:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Reload Register Definitions */
 494:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 495:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 496:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 497:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Current Register Definitions */
 498:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 499:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 500:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 501:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Calibration Register Definitions */
 502:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 503:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 504:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 505:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 506:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 507:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 508:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 509:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 510:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 511:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SysTick */
 512:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 513:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 514:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 515:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 516:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
 517:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
 518:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 519:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 520:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 521:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 522:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
 523:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 524:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 525:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 526:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
 527:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
 528:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
 529:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 530:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 531:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } MPU_Type;
 532:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 533:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_RALIASES                  1U
 534:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 535:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Type Register Definitions */
 536:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
 537:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 538:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 539:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
 540:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 541:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 542:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
 543:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
 544:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 545:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Control Register Definitions */
 546:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
ARM GAS  /tmp/ccpZN1QB.s 			page 11


 547:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 548:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 549:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
 550:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 551:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 552:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
 553:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
 554:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 555:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Number Register Definitions */
 556:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
 557:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
 558:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 559:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Base Address Register Definitions */
 560:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Pos                   8U                                            /*!< MPU 
 561:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Msk                  (0xFFFFFFUL << MPU_RBAR_ADDR_Pos)              /*!< MPU 
 562:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 563:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
 564:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 565:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 566:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
 567:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
 568:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 569:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Attribute and Size Register Definitions */
 570:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
 571:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
 572:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 573:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
 574:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
 575:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 576:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
 577:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
 578:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 579:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
 580:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
 581:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 582:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
 583:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
 584:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 585:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
 586:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
 587:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 588:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
 589:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
 590:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 591:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
 592:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 593:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 594:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
 595:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 596:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 597:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
 598:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
 599:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 600:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_MPU */
 601:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 602:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 603:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/ccpZN1QB.s 			page 12


 604:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 605:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 606:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 607:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Cortex-M0+ Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ov
 608:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****             Therefore they are not covered by the Cortex-M0+ header file.
 609:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 610:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 611:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CoreDebug */
 612:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 613:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 614:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 615:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 616:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 617:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 618:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 619:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 620:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 621:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 622:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 623:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 624:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 625:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted value.
 626:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 627:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 628:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 629:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 630:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 631:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 632:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 633:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted bit field value.
 634:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 635:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 636:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 637:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_core_bitfield */
 638:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 639:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 640:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 641:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 642:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_base     Core Definitions
 643:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Definitions for base addresses, unions, and structures.
 644:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 645:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 646:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 647:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* Memory mapping of Core Hardware */
 648:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 649:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 650:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 651:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 652:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 653:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 654:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 655:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 656:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 657:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 658:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
 659:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
 660:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
ARM GAS  /tmp/ccpZN1QB.s 			page 13


 661:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 662:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} */
 663:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 664:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 665:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 666:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 667:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *                Hardware Abstraction Layer
 668:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   Core Function Interface contains:
 669:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Functions
 670:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Functions
 671:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core Register Access Functions
 672:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 673:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 674:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 675:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 676:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 677:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 678:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 679:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* ##########################   NVIC functions  #################################### */
 680:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 681:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_Core_FunctionInterface
 682:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 683:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 684:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 685:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 686:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 687:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef CMSIS_NVIC_VIRTUAL
 688:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 689:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 690:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 691:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 692:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #else
 693:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 694:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 695:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 696:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 697:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 698:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 699:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 700:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 701:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0+ */
 702:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 703:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 704:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 705:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 706:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 707:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 708:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 709:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 710:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 711:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 712:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #else
 713:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetVector              __NVIC_SetVector
 714:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetVector              __NVIC_GetVector
 715:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 716:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 717:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC_USER_IRQ_OFFSET          16
ARM GAS  /tmp/ccpZN1QB.s 			page 14


 718:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 719:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 720:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 721:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 722:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 723:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 724:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 725:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 726:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 727:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* The following MACROS handle generation of the register offset and byte masks */
 728:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 729:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 730:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 731:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 732:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 733:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 734:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 735:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 736:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Enable Interrupt
 737:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 738:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 739:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 740:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 741:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 742:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
  26              		.loc 1 742 1
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 82B0     		sub	sp, sp, #8
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 0200     		movs	r2, r0
  39 0008 FB1D     		adds	r3, r7, #7
  40 000a 1A70     		strb	r2, [r3]
 743:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
  41              		.loc 1 743 6
  42 000c FB1D     		adds	r3, r7, #7
  43 000e 1B78     		ldrb	r3, [r3]
  44 0010 7F2B     		cmp	r3, #127
  45 0012 09D8     		bhi	.L3
 744:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 745:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  46              		.loc 1 745 58
  47 0014 FB1D     		adds	r3, r7, #7
  48 0016 1B78     		ldrb	r3, [r3]
  49 0018 1A00     		movs	r2, r3
  50 001a 1F23     		movs	r3, #31
  51 001c 1A40     		ands	r2, r3
  52              		.loc 1 745 9
  53 001e 044B     		ldr	r3, .L4
  54              		.loc 1 745 22
ARM GAS  /tmp/ccpZN1QB.s 			page 15


  55 0020 0121     		movs	r1, #1
  56 0022 9140     		lsls	r1, r1, r2
  57 0024 0A00     		movs	r2, r1
  58              		.loc 1 745 20
  59 0026 1A60     		str	r2, [r3]
  60              	.L3:
 746:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 747:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
  61              		.loc 1 747 1
  62 0028 C046     		nop
  63 002a BD46     		mov	sp, r7
  64 002c 02B0     		add	sp, sp, #8
  65              		@ sp needed
  66 002e 80BD     		pop	{r7, pc}
  67              	.L5:
  68              		.align	2
  69              	.L4:
  70 0030 00E100E0 		.word	-536813312
  71              		.cfi_endproc
  72              	.LFE25:
  74              		.section	.text.__NVIC_SetPriority,"ax",%progbits
  75              		.align	1
  76              		.syntax unified
  77              		.code	16
  78              		.thumb_func
  79              		.fpu softvfp
  81              	__NVIC_SetPriority:
  82              	.LFB31:
 748:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 749:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 750:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 751:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Get Interrupt Enable status
 752:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 753:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 754:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return             0  Interrupt is not enabled.
 755:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return             1  Interrupt is enabled.
 756:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 757:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 758:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 759:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 760:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 761:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 762:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 763:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 764:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   else
 765:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 766:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     return(0U);
 767:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 768:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 769:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 770:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 771:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 772:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Disable Interrupt
 773:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 774:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 775:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 776:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
ARM GAS  /tmp/ccpZN1QB.s 			page 16


 777:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 778:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 779:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 780:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 781:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 782:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     __DSB();
 783:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     __ISB();
 784:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 785:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 786:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 787:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 788:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 789:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Get Pending Interrupt
 790:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 791:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 792:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return             0  Interrupt status is not pending.
 793:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return             1  Interrupt status is pending.
 794:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 795:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 796:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 797:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 798:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 799:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 800:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 801:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 802:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   else
 803:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 804:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     return(0U);
 805:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 806:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 807:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 808:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 809:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 810:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Set Pending Interrupt
 811:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
 812:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 813:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 814:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 815:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 816:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 817:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 818:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 819:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 820:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 821:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 822:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 823:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 824:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 825:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Clear Pending Interrupt
 826:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 827:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 828:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 829:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 830:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 831:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 832:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 833:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
ARM GAS  /tmp/ccpZN1QB.s 			page 17


 834:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 835:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 836:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 837:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 838:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 839:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 840:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Set Interrupt Priority
 841:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
 842:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****            The interrupt number can be positive to specify a device specific interrupt,
 843:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****            or negative to specify a processor exception.
 844:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Interrupt number.
 845:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]  priority  Priority to set.
 846:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    The priority cannot be set for every processor exception.
 847:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 848:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 849:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
  83              		.loc 1 849 1
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 8
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87 0000 90B5     		push	{r4, r7, lr}
  88              		.cfi_def_cfa_offset 12
  89              		.cfi_offset 4, -12
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 83B0     		sub	sp, sp, #12
  93              		.cfi_def_cfa_offset 24
  94 0004 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
  96 0006 0200     		movs	r2, r0
  97 0008 3960     		str	r1, [r7]
  98 000a FB1D     		adds	r3, r7, #7
  99 000c 1A70     		strb	r2, [r3]
 850:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 100              		.loc 1 850 6
 101 000e FB1D     		adds	r3, r7, #7
 102 0010 1B78     		ldrb	r3, [r3]
 103 0012 7F2B     		cmp	r3, #127
 104 0014 28D8     		bhi	.L7
 851:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 105              		.loc 1 852 48
 106 0016 2F4A     		ldr	r2, .L10
 107              		.loc 1 852 53
 108 0018 FB1D     		adds	r3, r7, #7
 109 001a 1B78     		ldrb	r3, [r3]
 110 001c 5BB2     		sxtb	r3, r3
 111 001e 9B08     		lsrs	r3, r3, #2
 112              		.loc 1 852 52
 113 0020 C033     		adds	r3, r3, #192
 114 0022 9B00     		lsls	r3, r3, #2
 115 0024 9B58     		ldr	r3, [r3, r2]
 116              		.loc 1 852 83
 117 0026 FA1D     		adds	r2, r7, #7
 118 0028 1278     		ldrb	r2, [r2]
 119 002a 1100     		movs	r1, r2
 120 002c 0322     		movs	r2, #3
ARM GAS  /tmp/ccpZN1QB.s 			page 18


 121 002e 0A40     		ands	r2, r1
 122 0030 D200     		lsls	r2, r2, #3
 123              		.loc 1 852 80
 124 0032 FF21     		movs	r1, #255
 125 0034 9140     		lsls	r1, r1, r2
 126 0036 0A00     		movs	r2, r1
 127              		.loc 1 852 71
 128 0038 D243     		mvns	r2, r2
 129              		.loc 1 852 33
 130 003a 1A40     		ands	r2, r3
 131 003c 1100     		movs	r1, r2
 853:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 132              		.loc 1 853 20
 133 003e 3B68     		ldr	r3, [r7]
 134 0040 9B01     		lsls	r3, r3, #6
 135              		.loc 1 853 48
 136 0042 FF22     		movs	r2, #255
 137 0044 1A40     		ands	r2, r3
 138              		.loc 1 853 71
 139 0046 FB1D     		adds	r3, r7, #7
 140 0048 1B78     		ldrb	r3, [r3]
 141 004a 1800     		movs	r0, r3
 142 004c 0323     		movs	r3, #3
 143 004e 0340     		ands	r3, r0
 144 0050 DB00     		lsls	r3, r3, #3
 145              		.loc 1 853 68
 146 0052 9A40     		lsls	r2, r2, r3
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 147              		.loc 1 852 9
 148 0054 1F48     		ldr	r0, .L10
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 149              		.loc 1 852 14
 150 0056 FB1D     		adds	r3, r7, #7
 151 0058 1B78     		ldrb	r3, [r3]
 152 005a 5BB2     		sxtb	r3, r3
 153 005c 9B08     		lsrs	r3, r3, #2
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 154              		.loc 1 852 102
 155 005e 0A43     		orrs	r2, r1
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 156              		.loc 1 852 30
 157 0060 C033     		adds	r3, r3, #192
 158 0062 9B00     		lsls	r3, r3, #2
 159 0064 1A50     		str	r2, [r3, r0]
 854:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 855:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   else
 856:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 859:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 860:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 160              		.loc 1 860 1
 161 0066 31E0     		b	.L9
 162              	.L7:
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 163              		.loc 1 857 47
 164 0068 1B4A     		ldr	r2, .L10+4
ARM GAS  /tmp/ccpZN1QB.s 			page 19


 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 165              		.loc 1 857 53
 166 006a FB1D     		adds	r3, r7, #7
 167 006c 1B78     		ldrb	r3, [r3]
 168 006e 1900     		movs	r1, r3
 169 0070 0F23     		movs	r3, #15
 170 0072 0B40     		ands	r3, r1
 171 0074 083B     		subs	r3, r3, #8
 172 0076 9B08     		lsrs	r3, r3, #2
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 173              		.loc 1 857 52
 174 0078 0633     		adds	r3, r3, #6
 175 007a 9B00     		lsls	r3, r3, #2
 176 007c D318     		adds	r3, r2, r3
 177 007e 0433     		adds	r3, r3, #4
 178 0080 1B68     		ldr	r3, [r3]
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 179              		.loc 1 857 83
 180 0082 FA1D     		adds	r2, r7, #7
 181 0084 1278     		ldrb	r2, [r2]
 182 0086 1100     		movs	r1, r2
 183 0088 0322     		movs	r2, #3
 184 008a 0A40     		ands	r2, r1
 185 008c D200     		lsls	r2, r2, #3
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 186              		.loc 1 857 80
 187 008e FF21     		movs	r1, #255
 188 0090 9140     		lsls	r1, r1, r2
 189 0092 0A00     		movs	r2, r1
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 190              		.loc 1 857 71
 191 0094 D243     		mvns	r2, r2
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 192              		.loc 1 857 33
 193 0096 1A40     		ands	r2, r3
 194 0098 1100     		movs	r1, r2
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 195              		.loc 1 858 20
 196 009a 3B68     		ldr	r3, [r7]
 197 009c 9B01     		lsls	r3, r3, #6
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 198              		.loc 1 858 48
 199 009e FF22     		movs	r2, #255
 200 00a0 1A40     		ands	r2, r3
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 201              		.loc 1 858 71
 202 00a2 FB1D     		adds	r3, r7, #7
 203 00a4 1B78     		ldrb	r3, [r3]
 204 00a6 1800     		movs	r0, r3
 205 00a8 0323     		movs	r3, #3
 206 00aa 0340     		ands	r3, r0
 207 00ac DB00     		lsls	r3, r3, #3
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 208              		.loc 1 858 68
 209 00ae 9A40     		lsls	r2, r2, r3
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 210              		.loc 1 857 8
ARM GAS  /tmp/ccpZN1QB.s 			page 20


 211 00b0 0948     		ldr	r0, .L10+4
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 212              		.loc 1 857 14
 213 00b2 FB1D     		adds	r3, r7, #7
 214 00b4 1B78     		ldrb	r3, [r3]
 215 00b6 1C00     		movs	r4, r3
 216 00b8 0F23     		movs	r3, #15
 217 00ba 2340     		ands	r3, r4
 218 00bc 083B     		subs	r3, r3, #8
 219 00be 9B08     		lsrs	r3, r3, #2
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 220              		.loc 1 857 102
 221 00c0 0A43     		orrs	r2, r1
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 222              		.loc 1 857 30
 223 00c2 0633     		adds	r3, r3, #6
 224 00c4 9B00     		lsls	r3, r3, #2
 225 00c6 C318     		adds	r3, r0, r3
 226 00c8 0433     		adds	r3, r3, #4
 227 00ca 1A60     		str	r2, [r3]
 228              	.L9:
 229              		.loc 1 860 1
 230 00cc C046     		nop
 231 00ce BD46     		mov	sp, r7
 232 00d0 03B0     		add	sp, sp, #12
 233              		@ sp needed
 234 00d2 90BD     		pop	{r4, r7, pc}
 235              	.L11:
 236              		.align	2
 237              	.L10:
 238 00d4 00E100E0 		.word	-536813312
 239 00d8 00ED00E0 		.word	-536810240
 240              		.cfi_endproc
 241              	.LFE31:
 243              		.section	.text.LL_APB1_GRP1_EnableClock,"ax",%progbits
 244              		.align	1
 245              		.syntax unified
 246              		.code	16
 247              		.thumb_func
 248              		.fpu softvfp
 250              	LL_APB1_GRP1_EnableClock:
 251              	.LFB157:
 252              		.file 2 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h"
   1:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
   2:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
   3:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @file    stm32l0xx_ll_bus.h
   4:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @author  MCD Application Team
   5:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
   7:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   @verbatim
   8:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ==============================================================================
  10:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****     [..]
  11:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       from/to registers.
  14:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
ARM GAS  /tmp/ccpZN1QB.s 			page 21


  15:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  17:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****     [..]
  18:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       Workarounds:
  19:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  22:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   @endverbatim
  23:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
  24:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @attention
  25:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  26:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * <h2><center>&copy; Copyright(c) 2016 STMicroelectronics.
  27:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  29:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  34:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
  35:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  36:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  37:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #ifndef __STM32L0xx_LL_BUS_H
  39:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define __STM32L0xx_LL_BUS_H
  40:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  41:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #ifdef __cplusplus
  42:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** extern "C" {
  43:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
  44:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  45:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #include "stm32l0xx.h"
  47:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  48:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @addtogroup STM32L0xx_LL_Driver
  49:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  50:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  51:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  52:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(RCC)
  53:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  54:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  56:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  57:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  58:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  61:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  63:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  64:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  65:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  66:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  69:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  70:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  71:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
ARM GAS  /tmp/ccpZN1QB.s 			page 22


  72:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  73:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  74:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  75:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN      /*!< DMA1 clock enable */
  76:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_MIF            RCC_AHBENR_MIFEN       /*!< MIF clock enable */
  77:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBSMENR_SRAMSMEN  /*!< Sleep Mode SRAM clock enable
  78:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN       /*!< CRC clock enable */
  79:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TSC)
  80:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHBENR_TSCEN       /*!< TSC clock enable */
  81:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*TSC*/
  82:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(RNG)
  83:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_RNG            RCC_AHBENR_RNGEN       /*!< RNG clock enable */
  84:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*RNG*/
  85:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(AES)
  86:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRYP           RCC_AHBENR_CRYPEN      /*!< CRYP clock enable */
  87:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*AES*/
  88:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
  89:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
  90:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  91:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  92:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  93:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
  94:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  95:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  96:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  97:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN     /*!< TIM2 clock enable */
  98:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM3)
  99:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN     /*!< TIM3 clock enable */
 100:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 101:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM6)
 102:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN     /*!< TIM6 clock enable */
 103:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 104:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM7)
 105:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN     /*!< TIM7 clock enable */
 106:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 107:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(LCD)
 108:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LCD            RCC_APB1ENR_LCDEN      /*!< LCD clock enable */
 109:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*LCD*/
 110:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN     /*!< WWDG clock enable */
 111:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(SPI2)
 112:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN     /*!< SPI2 clock enable */
 113:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 114:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN   /*!< USART2 clock enable */
 115:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPUART1        RCC_APB1ENR_LPUART1EN  /*!< LPUART1 clock enable */
 116:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART4)
 117:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APB1ENR_USART4EN   /*!< USART4 clock enable */
 118:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 119:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART5)
 120:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART5         RCC_APB1ENR_USART5EN   /*!< USART5 clock enable */
 121:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 122:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN     /*!< I2C1 clock enable */
 123:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(I2C2)
 124:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN     /*!< I2C2 clock enable */
 125:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 126:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USB)
 127:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN      /*!< USB clock enable */
 128:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*USB*/
ARM GAS  /tmp/ccpZN1QB.s 			page 23


 129:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(CRS)
 130:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR_CRSEN      /*!< CRS clock enable */
 131:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*CRS*/
 132:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN      /*!< PWR clock enable */
 133:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(DAC)
 134:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN      /*!< DAC clock enable */
 135:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 136:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(I2C3)
 137:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR_I2C3EN     /*!< I2C3 clock enable */
 138:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 139:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR_LPTIM1EN   /*!< LPTIM1 clock enable */
 140:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 141:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 142:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 143:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 144:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 145:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 146:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 147:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 148:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 149:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 150:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 151:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN  /*!< SYSCFG clock enable */
 152:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM21          RCC_APB2ENR_TIM21EN   /*!< TIM21 clock enable */
 153:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM22)
 154:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM22          RCC_APB2ENR_TIM22EN   /*!< TIM22 clock enable */
 155:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 156:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_FW             RCC_APB2ENR_FWEN      /*!< FireWall clock enable */
 157:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC1           RCC_APB2ENR_ADC1EN    /*!< ADC1 clock enable */
 158:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN    /*!< SPI1 clock enable */
 159:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART1)
 160:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN  /*!< USART1 clock enable */
 161:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 162:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DBGMCU         RCC_APB2ENR_DBGMCUEN  /*!< DBGMCU clock enable */
 163:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 164:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 165:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 166:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 167:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 168:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 169:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 170:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_IOP_GRP1_PERIPH  IOP GRP1 PERIPH
 171:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 172:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 173:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_ALL             0xFFFFFFFFU
 174:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOA           RCC_IOPENR_GPIOAEN    /*!< GPIO port A control */
 175:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOB           RCC_IOPENR_GPIOBEN    /*!< GPIO port B control */
 176:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOC           RCC_IOPENR_GPIOCEN    /*!< GPIO port C control */
 177:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOD)
 178:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOD           RCC_IOPENR_GPIODEN    /*!< GPIO port D control */
 179:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOD*/
 180:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOE)
 181:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOE           RCC_IOPENR_GPIOEEN    /*!< GPIO port H control */
 182:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOE*/
 183:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOH)
 184:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOH           RCC_IOPENR_GPIOHEN    /*!< GPIO port H control */
 185:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOH*/
ARM GAS  /tmp/ccpZN1QB.s 			page 24


 186:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 187:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 188:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 189:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 190:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 191:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 192:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 193:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 194:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 195:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 196:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 197:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 198:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 199:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 200:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 201:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 202:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 203:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 204:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 205:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 206:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 207:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_EnableClock\n
 208:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_EnableClock\n
 209:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_EnableClock\n
 210:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_EnableClock\n
 211:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_EnableClock\n
 212:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_EnableClock
 213:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 214:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 215:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 216:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 217:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 218:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 219:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 220:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 221:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 222:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 223:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 224:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 225:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 226:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 227:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 228:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 229:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 230:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 231:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 232:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 233:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 234:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 235:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_IsEnabledClock\n
 236:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_IsEnabledClock\n
 237:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_IsEnabledClock\n
 238:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_IsEnabledClock\n
 239:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_IsEnabledClock\n
 240:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_IsEnabledClock
 241:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 242:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
ARM GAS  /tmp/ccpZN1QB.s 			page 25


 243:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 244:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 245:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 246:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 247:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 248:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 249:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 250:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 251:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 252:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 253:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 254:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->AHBENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 255:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 256:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 257:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 258:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 259:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_DisableClock\n
 260:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_DisableClock\n
 261:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_DisableClock\n
 262:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_DisableClock\n
 263:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_DisableClock\n
 264:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_DisableClock
 265:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 266:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 267:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 268:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 269:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 270:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 271:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 272:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 273:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 274:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 275:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 276:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 277:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 278:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 279:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 280:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 281:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 282:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 283:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMARST        LL_AHB1_GRP1_ForceReset\n
 284:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      MIFRST        LL_AHB1_GRP1_ForceReset\n
 285:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ForceReset\n
 286:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ForceReset\n
 287:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ForceReset\n
 288:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRYPRST       LL_AHB1_GRP1_ForceReset
 289:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 290:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 291:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 292:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 293:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 294:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 295:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 296:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 297:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 298:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 299:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
ARM GAS  /tmp/ccpZN1QB.s 			page 26


 300:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 301:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 302:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 303:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 304:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 305:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 306:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 307:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 308:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMARST        LL_AHB1_GRP1_ReleaseReset\n
 309:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      MIFRST        LL_AHB1_GRP1_ReleaseReset\n
 310:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 311:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ReleaseReset\n
 312:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ReleaseReset\n
 313:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRYPRST       LL_AHB1_GRP1_ReleaseReset
 314:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 315:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 316:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 317:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 318:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 319:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 320:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 321:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 322:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 323:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 324:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 325:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 326:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 327:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 328:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 329:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 330:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 331:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 332:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock during Low Power (Sleep) mode.
 333:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMASMEN       LL_AHB1_GRP1_EnableClockSleep\n
 334:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     MIFSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 335:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_EnableClockSleep\n
 336:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 337:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     TSCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 338:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 339:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRYPSMEN      LL_AHB1_GRP1_EnableClockSleep
 340:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 341:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 342:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 343:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 344:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 345:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 346:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 347:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 348:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 349:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 350:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 351:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 352:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockSleep(uint32_t Periphs)
 353:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 354:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 355:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBSMENR, Periphs);
 356:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
ARM GAS  /tmp/ccpZN1QB.s 			page 27


 357:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBSMENR, Periphs);
 358:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 359:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 360:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 361:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 362:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock during Low Power (Sleep) mode.
 363:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMASMEN       LL_AHB1_GRP1_DisableClockSleep\n
 364:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     MIFSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 365:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_DisableClockSleep\n
 366:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 367:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     TSCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 368:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 369:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRYPSMEN      LL_AHB1_GRP1_DisableClockSleep
 370:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 371:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 372:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 373:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 374:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 375:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 376:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 377:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 378:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 379:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 380:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 381:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 382:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockSleep(uint32_t Periphs)
 383:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 384:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBSMENR, Periphs);
 385:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 386:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 387:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 388:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 389:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 390:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 391:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 392:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 393:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 394:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 395:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 396:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 397:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_EnableClock\n
 398:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_EnableClock\n
 399:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_EnableClock\n
 400:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_EnableClock\n
 401:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_EnableClock\n
 402:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_EnableClock\n
 403:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_EnableClock\n
 404:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_EnableClock\n
 405:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_EnableClock\n
 406:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_EnableClock\n
 407:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_EnableClock\n
 408:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_EnableClock\n
 409:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_EnableClock\n
 410:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_EnableClock\n
 411:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_EnableClock\n
 412:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_EnableClock\n
 413:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_EnableClock\n
ARM GAS  /tmp/ccpZN1QB.s 			page 28


 414:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_EnableClock\n
 415:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_EnableClock
 416:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 417:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 418:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 419:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 420:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 421:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 422:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 423:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 424:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 425:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 426:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 427:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 428:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 429:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 430:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 431:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 432:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 433:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 434:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 435:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 436:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 437:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 438:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 439:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 440:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 441:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 253              		.loc 2 441 1
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 16
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 80B5     		push	{r7, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 84B0     		sub	sp, sp, #16
 262              		.cfi_def_cfa_offset 24
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
 265 0006 7860     		str	r0, [r7, #4]
 442:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 443:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 266              		.loc 2 443 3
 267 0008 074B     		ldr	r3, .L13
 268 000a 996B     		ldr	r1, [r3, #56]
 269 000c 064B     		ldr	r3, .L13
 270 000e 7A68     		ldr	r2, [r7, #4]
 271 0010 0A43     		orrs	r2, r1
 272 0012 9A63     		str	r2, [r3, #56]
 444:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 445:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 273              		.loc 2 445 12
 274 0014 044B     		ldr	r3, .L13
 275 0016 9B6B     		ldr	r3, [r3, #56]
 276 0018 7A68     		ldr	r2, [r7, #4]
 277 001a 1340     		ands	r3, r2
ARM GAS  /tmp/ccpZN1QB.s 			page 29


 278              		.loc 2 445 10
 279 001c FB60     		str	r3, [r7, #12]
 446:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 280              		.loc 2 446 3
 281 001e FB68     		ldr	r3, [r7, #12]
 447:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 282              		.loc 2 447 1
 283 0020 C046     		nop
 284 0022 BD46     		mov	sp, r7
 285 0024 04B0     		add	sp, sp, #16
 286              		@ sp needed
 287 0026 80BD     		pop	{r7, pc}
 288              	.L14:
 289              		.align	2
 290              	.L13:
 291 0028 00100240 		.word	1073876992
 292              		.cfi_endproc
 293              	.LFE157:
 295              		.section	.text.LL_IOP_GRP1_EnableClock,"ax",%progbits
 296              		.align	1
 297              		.syntax unified
 298              		.code	16
 299              		.thumb_func
 300              		.fpu softvfp
 302              	LL_IOP_GRP1_EnableClock:
 303              	.LFB171:
 448:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 449:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 450:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 451:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 452:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 453:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 454:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 455:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_IsEnabledClock\n
 456:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 457:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 458:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 459:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_IsEnabledClock\n
 460:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 461:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_IsEnabledClock\n
 462:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 463:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 464:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_IsEnabledClock\n
 465:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_IsEnabledClock\n
 466:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_IsEnabledClock\n
 467:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_IsEnabledClock\n
 468:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_IsEnabledClock\n
 469:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_IsEnabledClock
 470:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 471:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 472:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 473:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 474:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 475:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 476:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 477:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 478:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
ARM GAS  /tmp/ccpZN1QB.s 			page 30


 479:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 480:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 481:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 482:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 483:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 484:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 485:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 486:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 487:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 488:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 489:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 490:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 491:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 492:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 493:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 494:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 495:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 496:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 497:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 498:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 499:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 500:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 501:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_DisableClock\n
 502:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_DisableClock\n
 503:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_DisableClock\n
 504:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_DisableClock\n
 505:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_DisableClock\n
 506:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_DisableClock\n
 507:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_DisableClock\n
 508:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_DisableClock\n
 509:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_DisableClock\n
 510:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_DisableClock\n
 511:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_DisableClock\n
 512:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_DisableClock\n
 513:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_DisableClock\n
 514:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_DisableClock\n
 515:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_DisableClock\n
 516:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_DisableClock\n
 517:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_DisableClock\n
 518:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_DisableClock\n
 519:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_DisableClock
 520:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 521:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 522:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 523:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 524:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 525:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 526:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 527:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 528:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 529:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 530:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 531:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 532:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 533:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 534:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 535:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
ARM GAS  /tmp/ccpZN1QB.s 			page 31


 536:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 537:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 538:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 539:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 540:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 541:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 542:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 543:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 544:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 545:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 546:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 547:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 548:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 549:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 550:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
 551:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ForceReset\n
 552:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ForceReset\n
 553:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ForceReset\n
 554:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ForceReset\n
 555:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LCDRST         LL_APB1_GRP1_ForceReset\n
 556:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ForceReset\n
 557:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ForceReset\n
 558:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ForceReset\n
 559:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPUART1RST     LL_APB1_GRP1_ForceReset\n
 560:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART4RST      LL_APB1_GRP1_ForceReset\n
 561:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART5RST      LL_APB1_GRP1_ForceReset\n
 562:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ForceReset\n
 563:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ForceReset\n
 564:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USBRST         LL_APB1_GRP1_ForceReset\n
 565:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     CRSRST         LL_APB1_GRP1_ForceReset\n
 566:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ForceReset\n
 567:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ForceReset\n
 568:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ForceReset\n
 569:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ForceReset
 570:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 571:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 572:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 573:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 574:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 575:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 576:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 577:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 578:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 579:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 580:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 581:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 582:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 583:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 584:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 585:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 586:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 587:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 588:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 589:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 590:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 591:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 592:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
ARM GAS  /tmp/ccpZN1QB.s 			page 32


 593:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 594:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 595:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 596:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 597:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 598:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 599:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 600:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 601:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
 602:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ReleaseReset\n
 603:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ReleaseReset\n
 604:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ReleaseReset\n
 605:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ReleaseReset\n
 606:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LCDRST         LL_APB1_GRP1_ReleaseReset\n
 607:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ReleaseReset\n
 608:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ReleaseReset\n
 609:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ReleaseReset\n
 610:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPUART1RST     LL_APB1_GRP1_ReleaseReset\n
 611:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART4RST      LL_APB1_GRP1_ReleaseReset\n
 612:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART5RST      LL_APB1_GRP1_ReleaseReset\n
 613:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ReleaseReset\n
 614:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ReleaseReset\n
 615:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USBRST         LL_APB1_GRP1_ReleaseReset\n
 616:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     CRSRST         LL_APB1_GRP1_ReleaseReset\n
 617:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ReleaseReset\n
 618:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ReleaseReset\n
 619:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ReleaseReset\n
 620:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ReleaseReset
 621:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 622:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 623:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 624:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 625:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 626:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 627:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 628:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 629:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 630:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 631:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 632:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 633:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 634:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 635:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 636:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 637:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 638:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 639:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 640:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 641:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 642:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 643:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 644:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 645:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 646:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 647:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 648:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 649:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
ARM GAS  /tmp/ccpZN1QB.s 			page 33


 650:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 651:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 652:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock during Low Power (Sleep) mode.
 653:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1SMENR    TIM2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 654:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM3SMEN      LL_APB1_GRP1_EnableClockSleep\n
 655:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM6SMEN      LL_APB1_GRP1_EnableClockSleep\n
 656:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM7SMEN      LL_APB1_GRP1_EnableClockSleep\n
 657:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LCDSMEN       LL_APB1_GRP1_EnableClockSleep\n
 658:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    WWDGSMEN      LL_APB1_GRP1_EnableClockSleep\n
 659:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    SPI2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 660:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART2SMEN    LL_APB1_GRP1_EnableClockSleep\n
 661:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPUART1SMEN   LL_APB1_GRP1_EnableClockSleep\n
 662:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART4SMEN    LL_APB1_GRP1_EnableClockSleep\n
 663:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART5SMEN    LL_APB1_GRP1_EnableClockSleep\n
 664:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C1SMEN      LL_APB1_GRP1_EnableClockSleep\n
 665:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 666:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USBSMEN       LL_APB1_GRP1_EnableClockSleep\n
 667:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    CRSSMEN       LL_APB1_GRP1_EnableClockSleep\n
 668:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    PWRSMEN       LL_APB1_GRP1_EnableClockSleep\n
 669:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    DACSMEN       LL_APB1_GRP1_EnableClockSleep\n
 670:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C3SMEN      LL_APB1_GRP1_EnableClockSleep\n
 671:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPTIM1SMEN    LL_APB1_GRP1_EnableClockSleep
 672:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 673:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 674:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 675:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 676:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 677:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 678:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 679:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 680:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 681:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 682:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 683:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 684:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 685:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 686:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 687:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 688:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 689:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 690:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 691:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 692:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 693:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 694:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 695:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 696:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockSleep(uint32_t Periphs)
 697:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 698:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 699:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1SMENR, Periphs);
 700:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 701:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1SMENR, Periphs);
 702:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 703:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 704:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 705:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 706:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock during Low Power (Sleep) mode.
ARM GAS  /tmp/ccpZN1QB.s 			page 34


 707:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1SMENR    TIM2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 708:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM3SMEN      LL_APB1_GRP1_DisableClockSleep\n
 709:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM6SMEN      LL_APB1_GRP1_DisableClockSleep\n
 710:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM7SMEN      LL_APB1_GRP1_DisableClockSleep\n
 711:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LCDSMEN       LL_APB1_GRP1_DisableClockSleep\n
 712:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    WWDGSMEN      LL_APB1_GRP1_DisableClockSleep\n
 713:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    SPI2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 714:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART2SMEN    LL_APB1_GRP1_DisableClockSleep\n
 715:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPUART1SMEN   LL_APB1_GRP1_DisableClockSleep\n
 716:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART4SMEN    LL_APB1_GRP1_DisableClockSleep\n
 717:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART5SMEN    LL_APB1_GRP1_DisableClockSleep\n
 718:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C1SMEN      LL_APB1_GRP1_DisableClockSleep\n
 719:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 720:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USBSMEN       LL_APB1_GRP1_DisableClockSleep\n
 721:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    CRSSMEN       LL_APB1_GRP1_DisableClockSleep\n
 722:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    PWRSMEN       LL_APB1_GRP1_DisableClockSleep\n
 723:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    DACSMEN       LL_APB1_GRP1_DisableClockSleep\n
 724:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C3SMEN      LL_APB1_GRP1_DisableClockSleep\n
 725:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPTIM1SMEN    LL_APB1_GRP1_DisableClockSleep
 726:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 727:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 728:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 729:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 730:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 731:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 732:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 733:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 734:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 735:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 736:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 737:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 738:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 739:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 740:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 741:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 742:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 743:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 744:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 745:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 746:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 747:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 748:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 749:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 750:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockSleep(uint32_t Periphs)
 751:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 752:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1SMENR, Periphs);
 753:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 754:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 755:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 756:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 757:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 758:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 759:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
 760:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 761:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 762:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 763:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
ARM GAS  /tmp/ccpZN1QB.s 			page 35


 764:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
 765:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_EnableClock\n
 766:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_EnableClock\n
 767:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_EnableClock\n
 768:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_EnableClock\n
 769:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_EnableClock\n
 770:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_EnableClock\n
 771:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_EnableClock\n
 772:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_EnableClock
 773:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 774:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 775:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 776:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 777:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 778:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 779:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 780:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 781:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 782:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 783:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 784:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 785:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 786:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 787:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 788:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 789:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 790:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 791:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 792:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 793:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 794:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 795:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 796:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if APB2 peripheral clock is enabled or not
 797:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_IsEnabledClock\n
 798:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_IsEnabledClock\n
 799:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_IsEnabledClock\n
 800:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_IsEnabledClock\n
 801:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_IsEnabledClock\n
 802:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_IsEnabledClock\n
 803:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_IsEnabledClock\n
 804:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_IsEnabledClock
 805:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 806:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 807:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 808:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 809:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 810:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 811:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 812:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 813:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 814:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 815:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 816:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 817:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 818:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB2_GRP1_IsEnabledClock(uint32_t Periphs)
 819:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 820:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->APB2ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
ARM GAS  /tmp/ccpZN1QB.s 			page 36


 821:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 822:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 823:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 824:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock.
 825:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_DisableClock\n
 826:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_DisableClock\n
 827:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_DisableClock\n
 828:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_DisableClock\n
 829:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_DisableClock\n
 830:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_DisableClock\n
 831:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_DisableClock\n
 832:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_DisableClock
 833:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 834:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 835:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 836:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 837:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 838:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 839:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 840:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 841:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 842:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 843:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 844:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 845:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 846:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClock(uint32_t Periphs)
 847:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 848:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2ENR, Periphs);
 849:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 850:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 851:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 852:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force APB2 peripherals reset.
 853:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB2_GRP1_ForceReset\n
 854:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM21RST      LL_APB2_GRP1_ForceReset\n
 855:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM22RST      LL_APB2_GRP1_ForceReset\n
 856:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     ADCRST        LL_APB2_GRP1_ForceReset\n
 857:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ForceReset\n
 858:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ForceReset\n
 859:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     DBGRST        LL_APB2_GRP1_ForceReset
 860:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 861:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 862:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 863:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 864:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 865:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 866:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 867:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 868:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 869:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 870:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 871:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 872:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 873:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ForceReset(uint32_t Periphs)
 874:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 875:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2RSTR, Periphs);
 876:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 877:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
ARM GAS  /tmp/ccpZN1QB.s 			page 37


 878:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 879:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release APB2 peripherals reset.
 880:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB2_GRP1_ReleaseReset\n
 881:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM21RST      LL_APB2_GRP1_ReleaseReset\n
 882:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM22RST      LL_APB2_GRP1_ReleaseReset\n
 883:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     ADCRST        LL_APB2_GRP1_ReleaseReset\n
 884:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ReleaseReset\n
 885:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ReleaseReset\n
 886:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     DBGRST        LL_APB2_GRP1_ReleaseReset
 887:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 888:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 889:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 890:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 891:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 892:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 893:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 894:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 895:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 896:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 897:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 898:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 899:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 900:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ReleaseReset(uint32_t Periphs)
 901:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 902:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2RSTR, Periphs);
 903:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 904:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 905:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 906:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock during Low Power (Sleep) mode.
 907:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2SMENR    SYSCFGSMEN    LL_APB2_GRP1_EnableClockSleep\n
 908:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM21SMEN     LL_APB2_GRP1_EnableClockSleep\n
 909:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM22SMEN     LL_APB2_GRP1_EnableClockSleep\n
 910:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    ADCSMEN       LL_APB2_GRP1_EnableClockSleep\n
 911:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    SPI1SMEN      LL_APB2_GRP1_EnableClockSleep\n
 912:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    USART1SMEN    LL_APB2_GRP1_EnableClockSleep\n
 913:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    DBGSMEN       LL_APB2_GRP1_EnableClockSleep
 914:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 915:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 916:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 917:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 918:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 919:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 920:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 921:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 922:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 923:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 924:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 925:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 926:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClockSleep(uint32_t Periphs)
 927:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 928:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 929:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2SMENR, Periphs);
 930:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 931:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2SMENR, Periphs);
 932:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 933:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 934:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
ARM GAS  /tmp/ccpZN1QB.s 			page 38


 935:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 936:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock during Low Power (Sleep) mode.
 937:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2SMENR    SYSCFGSMEN    LL_APB2_GRP1_DisableClockSleep\n
 938:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM21SMEN     LL_APB2_GRP1_DisableClockSleep\n
 939:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM22SMEN     LL_APB2_GRP1_DisableClockSleep\n
 940:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    ADCSMEN       LL_APB2_GRP1_DisableClockSleep\n
 941:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    SPI1SMEN      LL_APB2_GRP1_DisableClockSleep\n
 942:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    USART1SMEN    LL_APB2_GRP1_DisableClockSleep\n
 943:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    DBGSMEN       LL_APB2_GRP1_DisableClockSleep
 944:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 945:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 946:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 947:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 948:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 949:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 950:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 951:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 952:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 953:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 954:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 955:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 956:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClockSleep(uint32_t Periphs)
 957:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 958:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2SMENR, Periphs);
 959:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 960:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 961:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 962:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 963:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 964:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_IOP IOP
 965:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 966:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 967:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 968:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 969:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable IOP peripherals clock.
 970:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll IOPENR       GPIOAEN       LL_IOP_GRP1_EnableClock\n
 971:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOBEN       LL_IOP_GRP1_EnableClock\n
 972:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOCEN       LL_IOP_GRP1_EnableClock\n
 973:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIODEN       LL_IOP_GRP1_EnableClock\n
 974:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOEEN       LL_IOP_GRP1_EnableClock\n
 975:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOHEN       LL_IOP_GRP1_EnableClock
 976:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 977:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOA
 978:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOB
 979:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOC
 980:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOD (*)
 981:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOE (*)
 982:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOH (*)
 983:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 984:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 985:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 986:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 987:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_IOP_GRP1_EnableClock(uint32_t Periphs)
 988:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 304              		.loc 2 988 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccpZN1QB.s 			page 39


 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 80B5     		push	{r7, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0002 84B0     		sub	sp, sp, #16
 313              		.cfi_def_cfa_offset 24
 314 0004 00AF     		add	r7, sp, #0
 315              		.cfi_def_cfa_register 7
 316 0006 7860     		str	r0, [r7, #4]
 989:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 990:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->IOPENR, Periphs);
 317              		.loc 2 990 3
 318 0008 074B     		ldr	r3, .L16
 319 000a D96A     		ldr	r1, [r3, #44]
 320 000c 064B     		ldr	r3, .L16
 321 000e 7A68     		ldr	r2, [r7, #4]
 322 0010 0A43     		orrs	r2, r1
 323 0012 DA62     		str	r2, [r3, #44]
 991:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 992:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->IOPENR, Periphs);
 324              		.loc 2 992 12
 325 0014 044B     		ldr	r3, .L16
 326 0016 DB6A     		ldr	r3, [r3, #44]
 327 0018 7A68     		ldr	r2, [r7, #4]
 328 001a 1340     		ands	r3, r2
 329              		.loc 2 992 10
 330 001c FB60     		str	r3, [r7, #12]
 993:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 331              		.loc 2 993 3
 332 001e FB68     		ldr	r3, [r7, #12]
 994:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 333              		.loc 2 994 1
 334 0020 C046     		nop
 335 0022 BD46     		mov	sp, r7
 336 0024 04B0     		add	sp, sp, #16
 337              		@ sp needed
 338 0026 80BD     		pop	{r7, pc}
 339              	.L17:
 340              		.align	2
 341              	.L16:
 342 0028 00100240 		.word	1073876992
 343              		.cfi_endproc
 344              	.LFE171:
 346              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
 347              		.align	2
 350              	CHANNEL_OFFSET_TAB:
 351 0000 081C3044 		.ascii	"\010\0340DXl\200"
 351      586C80
 352              		.section	.text.LL_LPUART_Enable,"ax",%progbits
 353              		.align	1
 354              		.syntax unified
 355              		.code	16
 356              		.thumb_func
 357              		.fpu softvfp
 359              	LL_LPUART_Enable:
 360              	.LFB470:
ARM GAS  /tmp/ccpZN1QB.s 			page 40


 361              		.file 3 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h"
   1:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
   2:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ******************************************************************************
   3:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @file    stm32l0xx_ll_lpuart.h
   4:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @author  MCD Application Team
   5:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief   Header file of LPUART LL module.
   6:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ******************************************************************************
   7:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @attention
   8:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *
   9:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * All rights reserved.</center></h2>
  11:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *
  12:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * the "License"; You may not use this file except in compliance with the
  14:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * License. You may obtain a copy of the License at:
  15:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *
  17:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ******************************************************************************
  18:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
  19:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  20:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #ifndef STM32L0xx_LL_LPUART_H
  22:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define STM32L0xx_LL_LPUART_H
  23:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  24:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #ifdef __cplusplus
  25:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** extern "C" {
  26:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #endif
  27:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  28:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /* Includes ------------------------------------------------------------------*/
  29:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #include "stm32l0xx.h"
  30:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  31:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @addtogroup STM32L0xx_LL_Driver
  32:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
  33:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
  34:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  35:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #if defined (LPUART1)
  36:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  37:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL LPUART
  38:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
  39:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
  40:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  41:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /* Private types -------------------------------------------------------------*/
  42:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /* Private variables ---------------------------------------------------------*/
  43:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  44:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /* Private constants ---------------------------------------------------------*/
  45:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_Private_Constants LPUART Private Constants
  46:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
  47:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
  48:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /* Defines used in Baud Rate related macros and corresponding register setting computation */
  49:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LPUART_LPUARTDIV_FREQ_MUL     256U
  50:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LPUART_BRR_MASK               0x000FFFFFU
  51:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LPUART_BRR_MIN_VALUE          0x00000300U
  52:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
  53:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
  54:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
  55:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  56:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
ARM GAS  /tmp/ccpZN1QB.s 			page 41


  57:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /* Private macros ------------------------------------------------------------*/
  58:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #if defined(USE_FULL_LL_DRIVER)
  59:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_Private_Macros LPUART Private Macros
  60:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
  61:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
  62:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
  63:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
  64:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
  65:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #endif /*USE_FULL_LL_DRIVER*/
  66:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  67:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /* Exported types ------------------------------------------------------------*/
  68:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #if defined(USE_FULL_LL_DRIVER)
  69:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_ES_INIT LPUART Exported Init structures
  70:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
  71:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
  72:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  73:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
  74:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief LL LPUART Init Structure definition
  75:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
  76:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** typedef struct
  77:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
  78:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   uint32_t BaudRate;                  /*!< This field defines expected LPUART communication baud ra
  79:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  80:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            This feature can be modified afterwards using unitary
  81:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            function @ref LL_LPUART_SetBaudRate().*/
  82:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  83:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
  84:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            This parameter can be a value of @ref LPUART_LL_EC_DATAW
  85:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  86:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            This feature can be modified afterwards using unitary
  87:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            function @ref LL_LPUART_SetDataWidth().*/
  88:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  89:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
  90:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            This parameter can be a value of @ref LPUART_LL_EC_STOPB
  91:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  92:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            This feature can be modified afterwards using unitary
  93:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            function @ref LL_LPUART_SetStopBitsLength().*/
  94:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  95:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
  96:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            This parameter can be a value of @ref LPUART_LL_EC_PARIT
  97:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
  98:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            This feature can be modified afterwards using unitary
  99:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            function @ref LL_LPUART_SetParity().*/
 100:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 101:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
 102:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            This parameter can be a value of @ref LPUART_LL_EC_DIREC
 103:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 104:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            This feature can be modified afterwards using unitary
 105:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            function @ref LL_LPUART_SetTransferDirection().*/
 106:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 107:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 108:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            This parameter can be a value of @ref LPUART_LL_EC_HWCON
 109:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 110:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            This feature can be modified afterwards using unitary
 111:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                            function @ref LL_LPUART_SetHWFlowCtrl().*/
 112:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 113:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** } LL_LPUART_InitTypeDef;
ARM GAS  /tmp/ccpZN1QB.s 			page 42


 114:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 115:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 116:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 117:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 118:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #endif /* USE_FULL_LL_DRIVER */
 119:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 120:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /* Exported constants --------------------------------------------------------*/
 121:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_Exported_Constants LPUART Exported Constants
 122:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 123:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 124:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 125:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_CLEAR_FLAG Clear Flags Defines
 126:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief    Flags defines which can be used with LL_LPUART_WriteReg function
 127:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 128:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 129:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ICR_PECF                 USART_ICR_PECF                /*!< Parity error clear fl
 130:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ICR_FECF                 USART_ICR_FECF                /*!< Framing error clear f
 131:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ICR_NCF                  USART_ICR_NCF                 /*!< Noise error detected 
 132:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ICR_ORECF                USART_ICR_ORECF               /*!< Overrun error clear f
 133:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ICR_IDLECF               USART_ICR_IDLECF              /*!< Idle line detected cl
 134:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ICR_TCCF                 USART_ICR_TCCF                /*!< Transmission complete
 135:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ICR_CTSCF                USART_ICR_CTSCF               /*!< CTS clear flag */
 136:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ICR_CMCF                 USART_ICR_CMCF                /*!< Character match clear
 137:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ICR_WUCF                 USART_ICR_WUCF                /*!< Wakeup from Stop mode
 138:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 139:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 140:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 141:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 142:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_GET_FLAG Get Flags Defines
 143:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief    Flags defines which can be used with LL_LPUART_ReadReg function
 144:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 145:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 146:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_PE               USART_ISR_PE         /*!< Parity error flag */
 147:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_FE               USART_ISR_FE         /*!< Framing error flag */
 148:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_NE               USART_ISR_NE         /*!< Noise detected flag */
 149:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_ORE              USART_ISR_ORE        /*!< Overrun error flag */
 150:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_IDLE             USART_ISR_IDLE       /*!< Idle line detected flag */
 151:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_RXNE             USART_ISR_RXNE       /*!< Read data register not empty flag 
 152:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_TC               USART_ISR_TC         /*!< Transmission complete flag */
 153:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_TXE              USART_ISR_TXE        /*!< Transmit data register empty flag 
 154:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_CTSIF            USART_ISR_CTSIF      /*!< CTS interrupt flag */
 155:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_CTS              USART_ISR_CTS        /*!< CTS flag */
 156:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_BUSY             USART_ISR_BUSY       /*!< Busy flag */
 157:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_CMF              USART_ISR_CMF        /*!< Character match flag */
 158:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_SBKF             USART_ISR_SBKF       /*!< Send break flag */
 159:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_RWU              USART_ISR_RWU        /*!< Receiver wakeup from Mute mode fla
 160:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_WUF              USART_ISR_WUF        /*!< Wakeup from Stop mode flag */
 161:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_TEACK            USART_ISR_TEACK      /*!< Transmit enable acknowledge flag *
 162:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ISR_REACK            USART_ISR_REACK      /*!< Receive enable acknowledge flag */
 163:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 164:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 165:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 166:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 167:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_IT IT Defines
 168:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief    IT defines which can be used with LL_LPUART_ReadReg and  LL_LPUART_WriteReg functions
 169:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 170:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
ARM GAS  /tmp/ccpZN1QB.s 			page 43


 171:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_CR1_IDLEIE         USART_CR1_IDLEIE         /*!< IDLE interrupt enable */
 172:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_CR1_RXNEIE         USART_CR1_RXNEIE         /*!< Read data register not empty int
 173:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_CR1_TCIE           USART_CR1_TCIE           /*!< Transmission complete interrupt 
 174:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_CR1_TXEIE          USART_CR1_TXEIE          /*!< Transmit data register empty int
 175:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_CR1_PEIE           USART_CR1_PEIE           /*!< Parity error */
 176:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_CR1_CMIE           USART_CR1_CMIE           /*!< Character match interrupt enable
 177:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_CR3_EIE            USART_CR3_EIE            /*!< Error interrupt enable */
 178:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_CR3_CTSIE          USART_CR3_CTSIE          /*!< CTS interrupt enable */
 179:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_CR3_WUFIE          USART_CR3_WUFIE          /*!< Wakeup from Stop mode interrupt 
 180:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 181:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 182:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 183:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 184:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_DIRECTION Direction
 185:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 186:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 187:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_DIRECTION_NONE  0x00000000U                  /*!< Transmitter and Receiver are di
 188:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_DIRECTION_RX    USART_CR1_RE                 /*!< Transmitter is disabled and Rec
 189:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_DIRECTION_TX    USART_CR1_TE                 /*!< Transmitter is enabled and Rece
 190:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_DIRECTION_TX_RX (USART_CR1_TE |USART_CR1_RE) /*!< Transmitter and Receiver are en
 191:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 192:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 193:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 194:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 195:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_PARITY Parity Control
 196:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 197:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 198:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_PARITY_NONE 0x00000000U                    /*!< Parity control disabled          
 199:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_PARITY_EVEN USART_CR1_PCE                  /*!< Parity control enabled and Even P
 200:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_PARITY_ODD  (USART_CR1_PCE | USART_CR1_PS) /*!< Parity control enabled and Odd Pa
 201:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 202:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 203:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 204:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 205:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_WAKEUP Wakeup
 206:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 207:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 208:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_WAKEUP_IDLELINE    0x00000000U    /*!<  LPUART wake up from Mute mode on Idle Lin
 209:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_WAKEUP_ADDRESSMARK USART_CR1_WAKE /*!<  LPUART wake up from Mute mode on Address 
 210:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 211:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 212:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 213:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 214:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_DATAWIDTH Datawidth
 215:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 216:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 217:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_DATAWIDTH_7B USART_CR1_M1 /*!< 7 bits word length : Start bit, 7 data bits, n sto
 218:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_DATAWIDTH_8B 0x00000000U  /*!< 8 bits word length : Start bit, 8 data bits, n sto
 219:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_DATAWIDTH_9B USART_CR1_M0 /*!< 9 bits word length : Start bit, 9 data bits, n sto
 220:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 221:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 222:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 223:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 224:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_STOPBITS Stop Bits
 225:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 226:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 227:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_STOPBITS_1         0x00000000U             /*!< 1 stop bit */
ARM GAS  /tmp/ccpZN1QB.s 			page 44


 228:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_STOPBITS_2         USART_CR2_STOP_1        /*!< 2 stop bits */
 229:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 230:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 231:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 232:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 233:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_TXRX TX RX Pins Swap
 234:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 235:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 236:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_TXRX_STANDARD      0x00000000U        /*!< TX/RX pins are used as defined in stan
 237:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_TXRX_SWAPPED       (USART_CR2_SWAP)   /*!< TX and RX pins functions are swapped. 
 238:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 239:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 240:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 241:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 242:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_RXPIN_LEVEL RX Pin Active Level Inversion
 243:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 244:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 245:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_RXPIN_LEVEL_STANDARD   0x00000000U       /*!< RX pin signal works using the stand
 246:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_RXPIN_LEVEL_INVERTED   (USART_CR2_RXINV) /*!< RX pin signal values are inverted. 
 247:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 248:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 249:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 250:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 251:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_TXPIN_LEVEL TX Pin Active Level Inversion
 252:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 253:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 254:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_TXPIN_LEVEL_STANDARD  0x00000000U       /*!< TX pin signal works using the standa
 255:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_TXPIN_LEVEL_INVERTED  (USART_CR2_TXINV) /*!< TX pin signal values are inverted.  
 256:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 257:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 258:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 259:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 260:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_BINARY_LOGIC Binary Data Inversion
 261:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 262:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 263:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_BINARY_LOGIC_POSITIVE 0x00000000U       /*!< Logical data from the data register 
 264:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                                                in positive/direct logic. (1=H, 0=L)
 265:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_BINARY_LOGIC_NEGATIVE USART_CR2_DATAINV /*!< Logical data from the data register 
 266:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                                                in negative/inverse logic. (1=L, 0=H
 267:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                                                The parity bit is also inverted.    
 268:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 269:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 270:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 271:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 272:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_BITORDER Bit Order
 273:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 274:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 275:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_BITORDER_LSBFIRST 0x00000000U        /*!< data is transmitted/received with data 
 276:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                                             following the start bit */
 277:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_BITORDER_MSBFIRST USART_CR2_MSBFIRST /*!< data is transmitted/received with the M
 278:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                                             following the start bit */
 279:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 280:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 281:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 282:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 283:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_ADDRESS_DETECT Address Length Detection
 284:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
ARM GAS  /tmp/ccpZN1QB.s 			page 45


 285:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 286:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ADDRESS_DETECT_4B 0x00000000U     /*!< 4-bit address detection method selected */
 287:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ADDRESS_DETECT_7B USART_CR2_ADDM7 /*!< 7-bit address detection (in 8-bit data mod
 288:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 289:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 290:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 291:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 292:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_HWCONTROL Hardware Control
 293:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 294:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 295:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_HWCONTROL_NONE    0x00000000U                       /*!< CTS and RTS hardware flo
 296:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_HWCONTROL_RTS     USART_CR3_RTSE                    /*!< RTS output enabled, data
 297:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                                                            when there is space in t
 298:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_HWCONTROL_CTS     USART_CR3_CTSE                    /*!< CTS mode enabled, data i
 299:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                                                            when the nCTS input is a
 300:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_HWCONTROL_RTS_CTS (USART_CR3_RTSE | USART_CR3_CTSE) /*!< CTS and RTS hardware flo
 301:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 302:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 303:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 304:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 305:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_WAKEUP_ON Wakeup Activation
 306:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 307:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 308:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_WAKEUP_ON_ADDRESS   0x00000000U                          /*!< Wake up active on a
 309:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_WAKEUP_ON_STARTBIT  USART_CR3_WUS_1                      /*!< Wake up active on S
 310:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_WAKEUP_ON_RXNE      (USART_CR3_WUS_0 | USART_CR3_WUS_1)  /*!< Wake up active on R
 311:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 312:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 313:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 314:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 315:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_DE_POLARITY Driver Enable Polarity
 316:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 317:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 318:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_DE_POLARITY_HIGH         0x00000000U    /*!< DE signal is active high */
 319:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_DE_POLARITY_LOW          USART_CR3_DEP  /*!< DE signal is active low */
 320:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 321:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 322:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 323:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 324:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_DMA_REG_DATA DMA Register Data
 325:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 326:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 327:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_DMA_REG_DATA_TRANSMIT    0x00000000U    /*!< Get address of data register used fo
 328:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_DMA_REG_DATA_RECEIVE     0x00000001U    /*!< Get address of data register used fo
 329:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 330:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 331:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 332:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 333:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 334:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 335:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 336:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 337:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /* Exported macro ------------------------------------------------------------*/
 338:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_Exported_Macros LPUART Exported Macros
 339:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 340:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 341:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
ARM GAS  /tmp/ccpZN1QB.s 			page 46


 342:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EM_WRITE_READ Common Write and read registers Macros
 343:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 344:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 345:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 346:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 347:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Write a value in LPUART register
 348:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  __INSTANCE__ LPUART Instance
 349:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  __REG__ Register to be written
 350:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  __VALUE__ Value to be written in the register
 351:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 352:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 353:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VA
 354:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 355:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 356:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Read a value in LPUART register
 357:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  __INSTANCE__ LPUART Instance
 358:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  __REG__ Register to be read
 359:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Register value
 360:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 361:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define LL_LPUART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 362:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 363:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 364:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 365:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 366:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EM_Exported_Macros_Helper Helper Macros
 367:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 368:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 369:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 370:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 371:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Compute LPUARTDIV value according to Peripheral Clock and
 372:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         expected Baud Rate (20-bit value of LPUARTDIV is returned)
 373:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for LPUART Instance
 374:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  __BAUDRATE__ Baud Rate value to achieve
 375:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval LPUARTDIV value to be used for BRR register filling
 376:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 377:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** #define __LL_LPUART_DIV(__PERIPHCLK__, __BAUDRATE__) (uint32_t)(((((uint64_t)(__PERIPHCLK__)*LPUART
 378:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                                                 & LPUART_BRR_MASK)
 379:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 380:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 381:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 382:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 383:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 384:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 385:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
 386:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 387:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 388:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /* Exported functions --------------------------------------------------------*/
 389:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_Exported_Functions LPUART Exported Functions
 390:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 391:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 392:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 393:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EF_Configuration Configuration functions
 394:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
 395:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 396:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 397:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 398:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  LPUART Enable
ARM GAS  /tmp/ccpZN1QB.s 			page 47


 399:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          UE            LL_LPUART_Enable
 400:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 401:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 402:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 403:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_Enable(USART_TypeDef *LPUARTx)
 404:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 362              		.loc 3 404 1
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 8
 365              		@ frame_needed = 1, uses_anonymous_args = 0
 366 0000 80B5     		push	{r7, lr}
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 7, -8
 369              		.cfi_offset 14, -4
 370 0002 82B0     		sub	sp, sp, #8
 371              		.cfi_def_cfa_offset 16
 372 0004 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
 374 0006 7860     		str	r0, [r7, #4]
 405:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_UE);
 375              		.loc 3 405 3
 376 0008 7B68     		ldr	r3, [r7, #4]
 377 000a 1B68     		ldr	r3, [r3]
 378 000c 0122     		movs	r2, #1
 379 000e 1A43     		orrs	r2, r3
 380 0010 7B68     		ldr	r3, [r7, #4]
 381 0012 1A60     		str	r2, [r3]
 406:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 382              		.loc 3 406 1
 383 0014 C046     		nop
 384 0016 BD46     		mov	sp, r7
 385 0018 02B0     		add	sp, sp, #8
 386              		@ sp needed
 387 001a 80BD     		pop	{r7, pc}
 388              		.cfi_endproc
 389              	.LFE470:
 391              		.section	.text.LL_LPUART_IsActiveFlag_RXNE,"ax",%progbits
 392              		.align	1
 393              		.syntax unified
 394              		.code	16
 395              		.thumb_func
 396              		.fpu softvfp
 398              	LL_LPUART_IsActiveFlag_RXNE:
 399              	.LFB540:
 407:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 408:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 409:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  LPUART Disable
 410:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   When LPUART is disabled, LPUART prescalers and outputs are stopped immediately,
 411:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         and current operations are discarded. The configuration of the LPUART is kept, but all 
 412:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         flags, in the LPUARTx_ISR are set to their default values.
 413:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   In order to go into low-power mode without generating errors on the line,
 414:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         the TE bit must be reset before and the software must wait
 415:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         for the TC bit in the LPUART_ISR to be set before resetting the UE bit.
 416:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         The DMA requests are also reset when UE = 0 so the DMA channel must
 417:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         be disabled before resetting the UE bit.
 418:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          UE            LL_LPUART_Disable
 419:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
ARM GAS  /tmp/ccpZN1QB.s 			page 48


 420:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 421:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 422:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_Disable(USART_TypeDef *LPUARTx)
 423:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 424:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_UE);
 425:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 426:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 427:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 428:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Indicate if LPUART is enabled
 429:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          UE            LL_LPUART_IsEnabled
 430:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 431:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
 432:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 433:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabled(USART_TypeDef *LPUARTx)
 434:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 435:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_UE) == (USART_CR1_UE)) ? 1UL : 0UL);
 436:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 437:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 438:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 439:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 440:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  LPUART enabled in STOP Mode
 441:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   When this function is enabled, LPUART is able to wake up the MCU from Stop mode, provid
 442:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         LPUART clock selection is HSI or LSE in RCC.
 443:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          UESM          LL_LPUART_EnableInStopMode
 444:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 445:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 446:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 447:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableInStopMode(USART_TypeDef *LPUARTx)
 448:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 449:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR1, USART_CR1_UESM);
 450:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 451:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 452:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 453:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  LPUART disabled in STOP Mode
 454:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   When this function is disabled, LPUART is not able to wake up the MCU from Stop mode
 455:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          UESM          LL_LPUART_DisableInStopMode
 456:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 457:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 458:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 459:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableInStopMode(USART_TypeDef *LPUARTx)
 460:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 461:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR1, USART_CR1_UESM);
 462:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 463:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 464:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 465:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Indicate if LPUART is enabled in STOP Mode
 466:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         (able to wake up MCU from Stop mode or not)
 467:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          UESM          LL_LPUART_IsEnabledInStopMode
 468:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 469:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
 470:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 471:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledInStopMode(USART_TypeDef *LPUARTx)
 472:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 473:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_UESM) == (USART_CR1_UESM)) ? 1UL : 0UL);
 474:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 475:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 476:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
ARM GAS  /tmp/ccpZN1QB.s 			page 49


 477:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  LPUART Clock enabled in STOP Mode
 478:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   When this function is called, LPUART Clock is enabled while in STOP mode
 479:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          UCESM         LL_LPUART_EnableClockInStopMode
 480:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 481:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 482:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 483:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableClockInStopMode(USART_TypeDef *LPUARTx)
 484:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 485:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR3, USART_CR3_UCESM);
 486:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 487:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 488:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 489:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  LPUART clock disabled in STOP Mode
 490:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   When this function is called, LPUART Clock is disabled while in STOP mode
 491:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          UCESM         LL_LPUART_DisableClockInStopMode
 492:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 493:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 494:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 495:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableClockInStopMode(USART_TypeDef *LPUARTx)
 496:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 497:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR3, USART_CR3_UCESM);
 498:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 499:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 500:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 501:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Indicate if LPUART clock is enabled in STOP Mode
 502:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          UCESM         LL_LPUART_IsClockEnabledInStopMode
 503:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 504:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
 505:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 506:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsClockEnabledInStopMode(USART_TypeDef *LPUARTx)
 507:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 508:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_UCESM) == (USART_CR3_UCESM)) ? 1UL : 0UL);
 509:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 510:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 511:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 512:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 513:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          RE            LL_LPUART_EnableDirectionRx
 514:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 515:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 516:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 517:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableDirectionRx(USART_TypeDef *LPUARTx)
 518:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 519:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR1, USART_CR1_RE);
 520:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 521:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 522:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 523:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Receiver Disable
 524:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          RE            LL_LPUART_DisableDirectionRx
 525:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 526:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 527:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 528:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableDirectionRx(USART_TypeDef *LPUARTx)
 529:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 530:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR1, USART_CR1_RE);
 531:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 532:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 533:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
ARM GAS  /tmp/ccpZN1QB.s 			page 50


 534:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Transmitter Enable
 535:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          TE            LL_LPUART_EnableDirectionTx
 536:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 537:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 538:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 539:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableDirectionTx(USART_TypeDef *LPUARTx)
 540:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 541:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR1, USART_CR1_TE);
 542:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 543:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 544:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 545:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Transmitter Disable
 546:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          TE            LL_LPUART_DisableDirectionTx
 547:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 548:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 549:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 550:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableDirectionTx(USART_TypeDef *LPUARTx)
 551:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 552:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR1, USART_CR1_TE);
 553:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 554:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 555:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 556:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Configure simultaneously enabled/disabled states
 557:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         of Transmitter and Receiver
 558:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          RE            LL_LPUART_SetTransferDirection\n
 559:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         CR1          TE            LL_LPUART_SetTransferDirection
 560:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 561:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 562:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_NONE
 563:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_RX
 564:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_TX
 565:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_TX_RX
 566:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 567:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 568:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetTransferDirection(USART_TypeDef *LPUARTx, uint32_t TransferDirect
 569:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 570:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_MODIFY_REG(LPUARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 571:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 572:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 573:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 574:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 575:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          RE            LL_LPUART_GetTransferDirection\n
 576:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         CR1          TE            LL_LPUART_GetTransferDirection
 577:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 578:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 579:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_NONE
 580:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_RX
 581:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_TX
 582:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_TX_RX
 583:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 584:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetTransferDirection(USART_TypeDef *LPUARTx)
 585:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 586:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 587:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 588:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 589:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 590:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled)
ARM GAS  /tmp/ccpZN1QB.s 			page 51


 591:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 592:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 593:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         (depending on data width) and parity is checked on the received data.
 594:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          PS            LL_LPUART_SetParity\n
 595:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         CR1          PCE           LL_LPUART_SetParity
 596:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 597:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  Parity This parameter can be one of the following values:
 598:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_NONE
 599:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_EVEN
 600:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_ODD
 601:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 602:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 603:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetParity(USART_TypeDef *LPUARTx, uint32_t Parity)
 604:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 605:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 606:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 607:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 608:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 609:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 610:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          PS            LL_LPUART_GetParity\n
 611:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         CR1          PCE           LL_LPUART_GetParity
 612:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 613:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 614:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_NONE
 615:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_EVEN
 616:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_ODD
 617:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 618:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetParity(USART_TypeDef *LPUARTx)
 619:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 620:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 621:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 622:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 623:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 624:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 625:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          WAKE          LL_LPUART_SetWakeUpMethod
 626:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 627:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  Method This parameter can be one of the following values:
 628:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_IDLELINE
 629:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ADDRESSMARK
 630:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 631:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 632:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetWakeUpMethod(USART_TypeDef *LPUARTx, uint32_t Method)
 633:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 634:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR1, USART_CR1_WAKE, Method);
 635:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 636:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 637:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 638:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 639:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          WAKE          LL_LPUART_GetWakeUpMethod
 640:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 641:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 642:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_IDLELINE
 643:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ADDRESSMARK
 644:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 645:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetWakeUpMethod(USART_TypeDef *LPUARTx)
 646:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 647:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR1, USART_CR1_WAKE));
ARM GAS  /tmp/ccpZN1QB.s 			page 52


 648:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 649:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 650:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 651:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Set Word length (nb of data bits, excluding start and stop bits)
 652:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          M             LL_LPUART_SetDataWidth
 653:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 654:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  DataWidth This parameter can be one of the following values:
 655:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_7B
 656:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_8B
 657:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_9B
 658:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 659:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 660:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetDataWidth(USART_TypeDef *LPUARTx, uint32_t DataWidth)
 661:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 662:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR1, USART_CR1_M, DataWidth);
 663:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 664:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 665:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 666:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 667:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          M             LL_LPUART_GetDataWidth
 668:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 669:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 670:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_7B
 671:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_8B
 672:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_9B
 673:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 674:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetDataWidth(USART_TypeDef *LPUARTx)
 675:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 676:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR1, USART_CR1_M));
 677:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 678:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 679:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 680:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Allow switch between Mute Mode and Active mode
 681:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          MME           LL_LPUART_EnableMuteMode
 682:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 683:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 684:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 685:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableMuteMode(USART_TypeDef *LPUARTx)
 686:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 687:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR1, USART_CR1_MME);
 688:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 689:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 690:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 691:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Prevent Mute Mode use. Set Receiver in active mode permanently.
 692:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          MME           LL_LPUART_DisableMuteMode
 693:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 694:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 695:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 696:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableMuteMode(USART_TypeDef *LPUARTx)
 697:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 698:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR1, USART_CR1_MME);
 699:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 700:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 701:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 702:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Indicate if switch between Mute Mode and Active mode is allowed
 703:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          MME           LL_LPUART_IsEnabledMuteMode
 704:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
ARM GAS  /tmp/ccpZN1QB.s 			page 53


 705:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
 706:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 707:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledMuteMode(USART_TypeDef *LPUARTx)
 708:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 709:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_MME) == (USART_CR1_MME)) ? 1UL : 0UL);
 710:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 711:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 712:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 713:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 714:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Set the length of the stop bits
 715:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          STOP          LL_LPUART_SetStopBitsLength
 716:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 717:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  StopBits This parameter can be one of the following values:
 718:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_STOPBITS_1
 719:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_STOPBITS_2
 720:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 721:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 722:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetStopBitsLength(USART_TypeDef *LPUARTx, uint32_t StopBits)
 723:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 724:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_STOP, StopBits);
 725:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 726:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 727:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 728:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Retrieve the length of the stop bits
 729:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          STOP          LL_LPUART_GetStopBitsLength
 730:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 731:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 732:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_STOPBITS_1
 733:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_STOPBITS_2
 734:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 735:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetStopBitsLength(USART_TypeDef *LPUARTx)
 736:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 737:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_STOP));
 738:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 739:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 740:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 741:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
 742:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 743:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         - Data Width configuration using @ref LL_LPUART_SetDataWidth() function
 744:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         - Parity Control and mode configuration using @ref LL_LPUART_SetParity() function
 745:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         - Stop bits configuration using @ref LL_LPUART_SetStopBitsLength() function
 746:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          PS            LL_LPUART_ConfigCharacter\n
 747:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         CR1          PCE           LL_LPUART_ConfigCharacter\n
 748:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         CR1          M             LL_LPUART_ConfigCharacter\n
 749:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         CR2          STOP          LL_LPUART_ConfigCharacter
 750:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 751:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  DataWidth This parameter can be one of the following values:
 752:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_7B
 753:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_8B
 754:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_9B
 755:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  Parity This parameter can be one of the following values:
 756:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_NONE
 757:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_EVEN
 758:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_ODD
 759:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  StopBits This parameter can be one of the following values:
 760:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_STOPBITS_1
 761:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_STOPBITS_2
ARM GAS  /tmp/ccpZN1QB.s 			page 54


 762:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 763:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 764:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ConfigCharacter(USART_TypeDef *LPUARTx, uint32_t DataWidth, uint32_t
 765:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****                                                uint32_t StopBits)
 766:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 767:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
 768:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_STOP, StopBits);
 769:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 770:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 771:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 772:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Configure TX/RX pins swapping setting.
 773:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          SWAP          LL_LPUART_SetTXRXSwap
 774:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 775:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  SwapConfig This parameter can be one of the following values:
 776:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXRX_STANDARD
 777:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXRX_SWAPPED
 778:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 779:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 780:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetTXRXSwap(USART_TypeDef *LPUARTx, uint32_t SwapConfig)
 781:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 782:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_SWAP, SwapConfig);
 783:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 784:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 785:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 786:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Retrieve TX/RX pins swapping configuration.
 787:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          SWAP          LL_LPUART_GetTXRXSwap
 788:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 789:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 790:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXRX_STANDARD
 791:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXRX_SWAPPED
 792:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 793:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetTXRXSwap(USART_TypeDef *LPUARTx)
 794:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 795:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_SWAP));
 796:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 797:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 798:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 799:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Configure RX pin active level logic
 800:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          RXINV         LL_LPUART_SetRXPinLevel
 801:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 802:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
 803:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_RXPIN_LEVEL_STANDARD
 804:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_RXPIN_LEVEL_INVERTED
 805:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 806:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 807:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetRXPinLevel(USART_TypeDef *LPUARTx, uint32_t PinInvMethod)
 808:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 809:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_RXINV, PinInvMethod);
 810:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 811:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 812:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 813:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Retrieve RX pin active level logic configuration
 814:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          RXINV         LL_LPUART_GetRXPinLevel
 815:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 816:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 817:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_RXPIN_LEVEL_STANDARD
 818:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_RXPIN_LEVEL_INVERTED
ARM GAS  /tmp/ccpZN1QB.s 			page 55


 819:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 820:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetRXPinLevel(USART_TypeDef *LPUARTx)
 821:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 822:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_RXINV));
 823:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 824:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 825:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 826:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Configure TX pin active level logic
 827:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          TXINV         LL_LPUART_SetTXPinLevel
 828:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 829:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
 830:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXPIN_LEVEL_STANDARD
 831:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXPIN_LEVEL_INVERTED
 832:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 833:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 834:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetTXPinLevel(USART_TypeDef *LPUARTx, uint32_t PinInvMethod)
 835:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 836:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_TXINV, PinInvMethod);
 837:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 838:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 839:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 840:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Retrieve TX pin active level logic configuration
 841:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          TXINV         LL_LPUART_GetTXPinLevel
 842:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 843:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 844:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXPIN_LEVEL_STANDARD
 845:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXPIN_LEVEL_INVERTED
 846:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 847:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetTXPinLevel(USART_TypeDef *LPUARTx)
 848:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 849:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_TXINV));
 850:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 851:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 852:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 853:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Configure Binary data logic.
 854:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *
 855:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   Allow to define how Logical data from the data register are send/received :
 856:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         either in positive/direct logic (1=H, 0=L) or in negative/inverse logic (1=L, 0=H)
 857:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          DATAINV       LL_LPUART_SetBinaryDataLogic
 858:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 859:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  DataLogic This parameter can be one of the following values:
 860:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BINARY_LOGIC_POSITIVE
 861:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BINARY_LOGIC_NEGATIVE
 862:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 863:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 864:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetBinaryDataLogic(USART_TypeDef *LPUARTx, uint32_t DataLogic)
 865:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 866:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_DATAINV, DataLogic);
 867:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 868:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 869:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 870:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Retrieve Binary data configuration
 871:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          DATAINV       LL_LPUART_GetBinaryDataLogic
 872:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 873:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 874:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BINARY_LOGIC_POSITIVE
 875:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BINARY_LOGIC_NEGATIVE
ARM GAS  /tmp/ccpZN1QB.s 			page 56


 876:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 877:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetBinaryDataLogic(USART_TypeDef *LPUARTx)
 878:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 879:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_DATAINV));
 880:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 881:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 882:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 883:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Configure transfer bit order (either Less or Most Significant Bit First)
 884:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
 885:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
 886:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          MSBFIRST      LL_LPUART_SetTransferBitOrder
 887:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 888:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  BitOrder This parameter can be one of the following values:
 889:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BITORDER_LSBFIRST
 890:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BITORDER_MSBFIRST
 891:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 892:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 893:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetTransferBitOrder(USART_TypeDef *LPUARTx, uint32_t BitOrder)
 894:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 895:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_MSBFIRST, BitOrder);
 896:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 897:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 898:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 899:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Return transfer bit order (either Less or Most Significant Bit First)
 900:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
 901:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
 902:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          MSBFIRST      LL_LPUART_GetTransferBitOrder
 903:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 904:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 905:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BITORDER_LSBFIRST
 906:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BITORDER_MSBFIRST
 907:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 908:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetTransferBitOrder(USART_TypeDef *LPUARTx)
 909:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 910:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_MSBFIRST));
 911:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 912:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 913:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 914:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Set Address of the LPUART node.
 915:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
 916:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         for wake up with address mark detection.
 917:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   4bits address node is used when 4-bit Address Detection is selected in ADDM7.
 918:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         (b7-b4 should be set to 0)
 919:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         8bits address node is used when 7-bit Address Detection is selected in ADDM7.
 920:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         (This is used in multiprocessor communication during Mute mode or Stop mode,
 921:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         for wake up with 7-bit address mark detection.
 922:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         The MSB of the character sent by the transmitter should be equal to 1.
 923:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         It may also be used for character detection during normal reception,
 924:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         Mute mode inactive (for example, end of block detection in ModBus protocol).
 925:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         In this case, the whole received character (8-bit) is compared to the ADD[7:0]
 926:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         value and CMF flag is set on match)
 927:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          ADD           LL_LPUART_ConfigNodeAddress\n
 928:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         CR2          ADDM7         LL_LPUART_ConfigNodeAddress
 929:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 930:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  AddressLen This parameter can be one of the following values:
 931:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_ADDRESS_DETECT_4B
 932:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_ADDRESS_DETECT_7B
ARM GAS  /tmp/ccpZN1QB.s 			page 57


 933:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  NodeAddress 4 or 7 bit Address of the LPUART node.
 934:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 935:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 936:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ConfigNodeAddress(USART_TypeDef *LPUARTx, uint32_t AddressLen, uint3
 937:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 938:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_ADD | USART_CR2_ADDM7,
 939:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****              (uint32_t)(AddressLen | (NodeAddress << USART_CR2_ADD_Pos)));
 940:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 941:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 942:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 943:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Return 8 bit Address of the LPUART node as set in ADD field of CR2.
 944:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   If 4-bit Address Detection is selected in ADDM7,
 945:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
 946:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         If 7-bit Address Detection is selected in ADDM7,
 947:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         only 8bits (b7-b0) of returned value are relevant (b31-b8 are not relevant)
 948:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          ADD           LL_LPUART_GetNodeAddress
 949:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 950:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Address of the LPUART node (Value between Min_Data=0 and Max_Data=255)
 951:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 952:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetNodeAddress(USART_TypeDef *LPUARTx)
 953:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 954:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_ADD) >> USART_CR2_ADD_Pos);
 955:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 956:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 957:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 958:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Return Length of Node Address used in Address Detection mode (7-bit or 4-bit)
 959:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR2          ADDM7         LL_LPUART_GetNodeAddressLen
 960:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 961:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 962:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_ADDRESS_DETECT_4B
 963:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_ADDRESS_DETECT_7B
 964:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 965:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetNodeAddressLen(USART_TypeDef *LPUARTx)
 966:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 967:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_ADDM7));
 968:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 969:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 970:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 971:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable RTS HW Flow Control
 972:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          RTSE          LL_LPUART_EnableRTSHWFlowCtrl
 973:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 974:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 975:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 976:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableRTSHWFlowCtrl(USART_TypeDef *LPUARTx)
 977:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 978:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_RTSE);
 979:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 980:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 981:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 982:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable RTS HW Flow Control
 983:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          RTSE          LL_LPUART_DisableRTSHWFlowCtrl
 984:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 985:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 986:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 987:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableRTSHWFlowCtrl(USART_TypeDef *LPUARTx)
 988:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 989:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_RTSE);
ARM GAS  /tmp/ccpZN1QB.s 			page 58


 990:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 991:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
 992:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
 993:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable CTS HW Flow Control
 994:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          CTSE          LL_LPUART_EnableCTSHWFlowCtrl
 995:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 996:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
 997:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
 998:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableCTSHWFlowCtrl(USART_TypeDef *LPUARTx)
 999:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1000:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_CTSE);
1001:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1002:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1003:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1004:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable CTS HW Flow Control
1005:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          CTSE          LL_LPUART_DisableCTSHWFlowCtrl
1006:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1007:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1008:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1009:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableCTSHWFlowCtrl(USART_TypeDef *LPUARTx)
1010:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1011:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_CTSE);
1012:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1013:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1014:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1015:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
1016:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          RTSE          LL_LPUART_SetHWFlowCtrl\n
1017:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         CR3          CTSE          LL_LPUART_SetHWFlowCtrl
1018:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1019:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
1020:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_NONE
1021:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_RTS
1022:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_CTS
1023:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_RTS_CTS
1024:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1025:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1026:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetHWFlowCtrl(USART_TypeDef *LPUARTx, uint32_t HardwareFlowControl)
1027:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1028:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
1029:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1030:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1031:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1032:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
1033:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          RTSE          LL_LPUART_GetHWFlowCtrl\n
1034:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         CR3          CTSE          LL_LPUART_GetHWFlowCtrl
1035:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1036:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
1037:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_NONE
1038:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_RTS
1039:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_CTS
1040:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_RTS_CTS
1041:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1042:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetHWFlowCtrl(USART_TypeDef *LPUARTx)
1043:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1044:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
1045:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1046:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
ARM GAS  /tmp/ccpZN1QB.s 			page 59


1047:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1048:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable Overrun detection
1049:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          OVRDIS        LL_LPUART_EnableOverrunDetect
1050:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1051:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1052:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1053:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableOverrunDetect(USART_TypeDef *LPUARTx)
1054:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1055:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_OVRDIS);
1056:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1057:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1058:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1059:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable Overrun detection
1060:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          OVRDIS        LL_LPUART_DisableOverrunDetect
1061:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1062:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1063:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1064:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableOverrunDetect(USART_TypeDef *LPUARTx)
1065:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1066:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_OVRDIS);
1067:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1068:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1069:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1070:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Indicate if Overrun detection is enabled
1071:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          OVRDIS        LL_LPUART_IsEnabledOverrunDetect
1072:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1073:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1074:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1075:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledOverrunDetect(USART_TypeDef *LPUARTx)
1076:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1077:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_OVRDIS) != USART_CR3_OVRDIS) ? 1UL : 0UL);
1078:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1079:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1080:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1081:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Select event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1082:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          WUS           LL_LPUART_SetWKUPType
1083:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1084:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  Type This parameter can be one of the following values:
1085:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ON_ADDRESS
1086:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ON_STARTBIT
1087:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ON_RXNE
1088:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1089:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1090:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetWKUPType(USART_TypeDef *LPUARTx, uint32_t Type)
1091:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1092:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR3, USART_CR3_WUS, Type);
1093:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1094:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1095:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1096:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Return event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1097:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          WUS           LL_LPUART_GetWKUPType
1098:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1099:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
1100:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ON_ADDRESS
1101:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ON_STARTBIT
1102:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ON_RXNE
1103:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
ARM GAS  /tmp/ccpZN1QB.s 			page 60


1104:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetWKUPType(USART_TypeDef *LPUARTx)
1105:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1106:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR3, USART_CR3_WUS));
1107:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1108:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1109:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1110:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Configure LPUART BRR register for achieving expected Baud Rate value.
1111:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *
1112:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   Compute and set LPUARTDIV value in BRR Register (full BRR content)
1113:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         according to used Peripheral Clock and expected Baud Rate values
1114:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   Peripheral clock and Baud Rate values provided as function parameters should be valid
1115:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         (Baud rate value != 0).
1116:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   Provided that LPUARTx_BRR must be > = 0x300 and LPUART_BRR is 20-bit,
1117:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         a care should be taken when generating high baud rates using high PeriphClk
1118:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         values. PeriphClk must be in the range [3 x BaudRate, 4096 x BaudRate].
1119:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll BRR          BRR           LL_LPUART_SetBaudRate
1120:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1121:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  PeriphClk Peripheral Clock
1122:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  BaudRate Baud Rate
1123:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1124:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1125:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetBaudRate(USART_TypeDef *LPUARTx, uint32_t PeriphClk, uint32_t Bau
1126:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1127:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   if (BaudRate != 0U)
1128:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   {
1129:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****     LPUARTx->BRR = __LL_LPUART_DIV(PeriphClk, BaudRate);
1130:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   }
1131:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1132:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1133:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1134:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Return current Baud Rate value, according to LPUARTDIV present in BRR register
1135:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         (full BRR content), and to used Peripheral Clock values
1136:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1137:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll BRR          BRR           LL_LPUART_GetBaudRate
1138:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1139:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  PeriphClk Peripheral Clock
1140:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Baud Rate
1141:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1142:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetBaudRate(USART_TypeDef *LPUARTx, uint32_t PeriphClk)
1143:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1144:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   uint32_t lpuartdiv;
1145:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   uint32_t brrresult;
1146:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1147:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   lpuartdiv = LPUARTx->BRR & LPUART_BRR_MASK;
1148:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1149:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   if (lpuartdiv >= LPUART_BRR_MIN_VALUE)
1150:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   {
1151:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****     brrresult = (uint32_t)(((uint64_t)(PeriphClk) * LPUART_LPUARTDIV_FREQ_MUL) / lpuartdiv);
1152:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   }
1153:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   else
1154:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   {
1155:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****     brrresult = 0x0UL;
1156:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   }
1157:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1158:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (brrresult);
1159:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1160:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
ARM GAS  /tmp/ccpZN1QB.s 			page 61


1161:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1162:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
1163:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1164:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1165:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex 
1166:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
1167:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1168:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1169:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1170:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable Single Wire Half-Duplex mode
1171:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          HDSEL         LL_LPUART_EnableHalfDuplex
1172:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1173:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1174:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1175:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableHalfDuplex(USART_TypeDef *LPUARTx)
1176:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1177:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_HDSEL);
1178:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1179:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1180:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1181:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable Single Wire Half-Duplex mode
1182:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          HDSEL         LL_LPUART_DisableHalfDuplex
1183:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1184:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1185:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1186:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableHalfDuplex(USART_TypeDef *LPUARTx)
1187:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1188:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_HDSEL);
1189:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1190:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1191:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1192:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
1193:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          HDSEL         LL_LPUART_IsEnabledHalfDuplex
1194:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1195:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1196:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1197:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledHalfDuplex(USART_TypeDef *LPUARTx)
1198:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1199:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL)) ? 1UL : 0UL);
1200:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1201:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1202:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1203:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
1204:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1205:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1206:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EF_Configuration_DE Configuration functions related to Driver Enable featur
1207:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
1208:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1209:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1210:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1211:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Set DEDT (Driver Enable De-Assertion Time), Time value expressed on 5 bits ([4:0] bits)
1212:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          DEDT          LL_LPUART_SetDEDeassertionTime
1213:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1214:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
1215:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1216:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1217:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetDEDeassertionTime(USART_TypeDef *LPUARTx, uint32_t Time)
ARM GAS  /tmp/ccpZN1QB.s 			page 62


1218:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1219:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR1, USART_CR1_DEDT, Time << USART_CR1_DEDT_Pos);
1220:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1221:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1222:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1223:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Return DEDT (Driver Enable De-Assertion Time)
1224:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          DEDT          LL_LPUART_GetDEDeassertionTime
1225:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1226:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : c
1227:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1228:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetDEDeassertionTime(USART_TypeDef *LPUARTx)
1229:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1230:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR1, USART_CR1_DEDT) >> USART_CR1_DEDT_Pos);
1231:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1232:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1233:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1234:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Set DEAT (Driver Enable Assertion Time), Time value expressed on 5 bits ([4:0] bits).
1235:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          DEAT          LL_LPUART_SetDEAssertionTime
1236:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1237:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
1238:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1239:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1240:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetDEAssertionTime(USART_TypeDef *LPUARTx, uint32_t Time)
1241:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1242:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR1, USART_CR1_DEAT, Time << USART_CR1_DEAT_Pos);
1243:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1244:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1245:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1246:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Return DEAT (Driver Enable Assertion Time)
1247:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          DEAT          LL_LPUART_GetDEAssertionTime
1248:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1249:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Time Value between Min_Data=0 and Max_Dat
1250:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1251:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetDEAssertionTime(USART_TypeDef *LPUARTx)
1252:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1253:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR1, USART_CR1_DEAT) >> USART_CR1_DEAT_Pos);
1254:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1255:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1256:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1257:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable Driver Enable (DE) Mode
1258:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          DEM           LL_LPUART_EnableDEMode
1259:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1260:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1261:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1262:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableDEMode(USART_TypeDef *LPUARTx)
1263:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1264:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_DEM);
1265:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1266:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1267:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1268:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable Driver Enable (DE) Mode
1269:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          DEM           LL_LPUART_DisableDEMode
1270:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1271:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1272:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1273:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableDEMode(USART_TypeDef *LPUARTx)
1274:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
ARM GAS  /tmp/ccpZN1QB.s 			page 63


1275:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_DEM);
1276:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1277:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1278:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1279:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Indicate if Driver Enable (DE) Mode is enabled
1280:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          DEM           LL_LPUART_IsEnabledDEMode
1281:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1282:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1283:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1284:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledDEMode(USART_TypeDef *LPUARTx)
1285:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1286:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_DEM) == (USART_CR3_DEM)) ? 1UL : 0UL);
1287:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1288:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1289:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1290:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Select Driver Enable Polarity
1291:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          DEP           LL_LPUART_SetDESignalPolarity
1292:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1293:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  Polarity This parameter can be one of the following values:
1294:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DE_POLARITY_HIGH
1295:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DE_POLARITY_LOW
1296:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1297:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1298:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetDESignalPolarity(USART_TypeDef *LPUARTx, uint32_t Polarity)
1299:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1300:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR3, USART_CR3_DEP, Polarity);
1301:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1302:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1303:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1304:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Return Driver Enable Polarity
1305:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          DEP           LL_LPUART_GetDESignalPolarity
1306:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1307:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
1308:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DE_POLARITY_HIGH
1309:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DE_POLARITY_LOW
1310:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1311:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetDESignalPolarity(USART_TypeDef *LPUARTx)
1312:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1313:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR3, USART_CR3_DEP));
1314:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1315:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1316:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1317:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
1318:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1319:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1320:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EF_FLAG_Management FLAG_Management
1321:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
1322:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1323:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1324:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1325:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Parity Error Flag is set or not
1326:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          PE            LL_LPUART_IsActiveFlag_PE
1327:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1328:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1329:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1330:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_PE(USART_TypeDef *LPUARTx)
1331:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
ARM GAS  /tmp/ccpZN1QB.s 			page 64


1332:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_PE) == (USART_ISR_PE)) ? 1UL : 0UL);
1333:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1334:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1335:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1336:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Framing Error Flag is set or not
1337:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          FE            LL_LPUART_IsActiveFlag_FE
1338:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1339:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1340:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1341:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_FE(USART_TypeDef *LPUARTx)
1342:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1343:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_FE) == (USART_ISR_FE)) ? 1UL : 0UL);
1344:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1345:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1346:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1347:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Noise error detected Flag is set or not
1348:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          NE            LL_LPUART_IsActiveFlag_NE
1349:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1350:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1351:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1352:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_NE(USART_TypeDef *LPUARTx)
1353:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1354:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_NE) == (USART_ISR_NE)) ? 1UL : 0UL);
1355:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1356:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1357:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1358:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART OverRun Error Flag is set or not
1359:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          ORE           LL_LPUART_IsActiveFlag_ORE
1360:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1361:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1362:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1363:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_ORE(USART_TypeDef *LPUARTx)
1364:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1365:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_ORE) == (USART_ISR_ORE)) ? 1UL : 0UL);
1366:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1367:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1368:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1369:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART IDLE line detected Flag is set or not
1370:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          IDLE          LL_LPUART_IsActiveFlag_IDLE
1371:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1372:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1373:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1374:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_IDLE(USART_TypeDef *LPUARTx)
1375:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1376:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_IDLE) == (USART_ISR_IDLE)) ? 1UL : 0UL);
1377:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1378:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1379:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1380:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Read Data Register Not Empty Flag is set or not
1381:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          RXNE          LL_LPUART_IsActiveFlag_RXNE
1382:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1383:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1384:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1385:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_RXNE(USART_TypeDef *LPUARTx)
1386:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 400              		.loc 3 1386 1
 401              		.cfi_startproc
ARM GAS  /tmp/ccpZN1QB.s 			page 65


 402              		@ args = 0, pretend = 0, frame = 8
 403              		@ frame_needed = 1, uses_anonymous_args = 0
 404 0000 80B5     		push	{r7, lr}
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 7, -8
 407              		.cfi_offset 14, -4
 408 0002 82B0     		sub	sp, sp, #8
 409              		.cfi_def_cfa_offset 16
 410 0004 00AF     		add	r7, sp, #0
 411              		.cfi_def_cfa_register 7
 412 0006 7860     		str	r0, [r7, #4]
1387:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_RXNE) == (USART_ISR_RXNE)) ? 1UL : 0UL);
 413              		.loc 3 1387 12
 414 0008 7B68     		ldr	r3, [r7, #4]
 415 000a DB69     		ldr	r3, [r3, #28]
 416 000c 2022     		movs	r2, #32
 417 000e 1340     		ands	r3, r2
 418              		.loc 3 1387 78
 419 0010 202B     		cmp	r3, #32
 420 0012 01D1     		bne	.L20
 421              		.loc 3 1387 78 is_stmt 0 discriminator 1
 422 0014 0123     		movs	r3, #1
 423 0016 00E0     		b	.L22
 424              	.L20:
 425              		.loc 3 1387 78 discriminator 2
 426 0018 0023     		movs	r3, #0
 427              	.L22:
1388:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 428              		.loc 3 1388 1 is_stmt 1 discriminator 5
 429 001a 1800     		movs	r0, r3
 430 001c BD46     		mov	sp, r7
 431 001e 02B0     		add	sp, sp, #8
 432              		@ sp needed
 433 0020 80BD     		pop	{r7, pc}
 434              		.cfi_endproc
 435              	.LFE540:
 437              		.section	.text.LL_LPUART_IsActiveFlag_TC,"ax",%progbits
 438              		.align	1
 439              		.syntax unified
 440              		.code	16
 441              		.thumb_func
 442              		.fpu softvfp
 444              	LL_LPUART_IsActiveFlag_TC:
 445              	.LFB541:
1389:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1390:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1391:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Transmission Complete Flag is set or not
1392:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          TC            LL_LPUART_IsActiveFlag_TC
1393:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1394:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1395:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1396:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_TC(USART_TypeDef *LPUARTx)
1397:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 446              		.loc 3 1397 1
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 8
 449              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccpZN1QB.s 			page 66


 450 0000 80B5     		push	{r7, lr}
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 82B0     		sub	sp, sp, #8
 455              		.cfi_def_cfa_offset 16
 456 0004 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
1398:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_TC) == (USART_ISR_TC)) ? 1UL : 0UL);
 459              		.loc 3 1398 12
 460 0008 7B68     		ldr	r3, [r7, #4]
 461 000a DB69     		ldr	r3, [r3, #28]
 462 000c 4022     		movs	r2, #64
 463 000e 1340     		ands	r3, r2
 464              		.loc 3 1398 74
 465 0010 402B     		cmp	r3, #64
 466 0012 01D1     		bne	.L24
 467              		.loc 3 1398 74 is_stmt 0 discriminator 1
 468 0014 0123     		movs	r3, #1
 469 0016 00E0     		b	.L26
 470              	.L24:
 471              		.loc 3 1398 74 discriminator 2
 472 0018 0023     		movs	r3, #0
 473              	.L26:
1399:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 474              		.loc 3 1399 1 is_stmt 1 discriminator 5
 475 001a 1800     		movs	r0, r3
 476 001c BD46     		mov	sp, r7
 477 001e 02B0     		add	sp, sp, #8
 478              		@ sp needed
 479 0020 80BD     		pop	{r7, pc}
 480              		.cfi_endproc
 481              	.LFE541:
 483              		.section	.text.LL_LPUART_ClearFlag_NE,"ax",%progbits
 484              		.align	1
 485              		.syntax unified
 486              		.code	16
 487              		.thumb_func
 488              		.fpu softvfp
 490              	LL_LPUART_ClearFlag_NE:
 491              	.LFB554:
1400:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1401:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1402:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Transmit Data Register Empty Flag is set or not
1403:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          TXE           LL_LPUART_IsActiveFlag_TXE
1404:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1405:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1406:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1407:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_TXE(USART_TypeDef *LPUARTx)
1408:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1409:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_TXE) == (USART_ISR_TXE)) ? 1UL : 0UL);
1410:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1411:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1412:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1413:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART CTS interrupt Flag is set or not
1414:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          CTSIF         LL_LPUART_IsActiveFlag_nCTS
ARM GAS  /tmp/ccpZN1QB.s 			page 67


1415:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1416:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1417:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1418:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_nCTS(USART_TypeDef *LPUARTx)
1419:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1420:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_CTSIF) == (USART_ISR_CTSIF)) ? 1UL : 0UL);
1421:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1422:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1423:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1424:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART CTS Flag is set or not
1425:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          CTS           LL_LPUART_IsActiveFlag_CTS
1426:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1427:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1428:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1429:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_CTS(USART_TypeDef *LPUARTx)
1430:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1431:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_CTS) == (USART_ISR_CTS)) ? 1UL : 0UL);
1432:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1433:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1434:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1435:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Busy Flag is set or not
1436:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          BUSY          LL_LPUART_IsActiveFlag_BUSY
1437:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1438:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1439:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1440:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_BUSY(USART_TypeDef *LPUARTx)
1441:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1442:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_BUSY) == (USART_ISR_BUSY)) ? 1UL : 0UL);
1443:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1444:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1445:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1446:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Character Match Flag is set or not
1447:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          CMF           LL_LPUART_IsActiveFlag_CM
1448:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1449:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1450:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1451:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_CM(USART_TypeDef *LPUARTx)
1452:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1453:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_CMF) == (USART_ISR_CMF)) ? 1UL : 0UL);
1454:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1455:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1456:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1457:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Send Break Flag is set or not
1458:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          SBKF          LL_LPUART_IsActiveFlag_SBK
1459:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1460:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1461:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1462:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_SBK(USART_TypeDef *LPUARTx)
1463:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1464:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_SBKF) == (USART_ISR_SBKF)) ? 1UL : 0UL);
1465:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1466:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1467:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1468:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Receive Wake Up from mute mode Flag is set or not
1469:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          RWU           LL_LPUART_IsActiveFlag_RWU
1470:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1471:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
ARM GAS  /tmp/ccpZN1QB.s 			page 68


1472:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1473:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_RWU(USART_TypeDef *LPUARTx)
1474:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1475:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_RWU) == (USART_ISR_RWU)) ? 1UL : 0UL);
1476:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1477:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1478:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1479:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Wake Up from stop mode Flag is set or not
1480:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          WUF           LL_LPUART_IsActiveFlag_WKUP
1481:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1482:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1483:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1484:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_WKUP(USART_TypeDef *LPUARTx)
1485:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1486:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_WUF) == (USART_ISR_WUF)) ? 1UL : 0UL);
1487:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1488:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1489:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1490:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Transmit Enable Acknowledge Flag is set or not
1491:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          TEACK         LL_LPUART_IsActiveFlag_TEACK
1492:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1493:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1494:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1495:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_TEACK(USART_TypeDef *LPUARTx)
1496:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1497:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
1498:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1499:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1500:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1501:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Receive Enable Acknowledge Flag is set or not
1502:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ISR          REACK         LL_LPUART_IsActiveFlag_REACK
1503:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1504:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1505:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1506:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_REACK(USART_TypeDef *LPUARTx)
1507:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1508:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_REACK) == (USART_ISR_REACK)) ? 1UL : 0UL);
1509:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1510:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1511:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1512:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1513:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Clear Parity Error Flag
1514:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ICR          PECF          LL_LPUART_ClearFlag_PE
1515:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1516:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1517:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1518:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_PE(USART_TypeDef *LPUARTx)
1519:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1520:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_PECF);
1521:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1522:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1523:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1524:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Clear Framing Error Flag
1525:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ICR          FECF          LL_LPUART_ClearFlag_FE
1526:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1527:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1528:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
ARM GAS  /tmp/ccpZN1QB.s 			page 69


1529:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_FE(USART_TypeDef *LPUARTx)
1530:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1531:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_FECF);
1532:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1533:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1534:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1535:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Clear Noise detected Flag
1536:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ICR          NCF           LL_LPUART_ClearFlag_NE
1537:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1538:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1539:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1540:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_NE(USART_TypeDef *LPUARTx)
1541:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 492              		.loc 3 1541 1
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 8
 495              		@ frame_needed = 1, uses_anonymous_args = 0
 496 0000 80B5     		push	{r7, lr}
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 7, -8
 499              		.cfi_offset 14, -4
 500 0002 82B0     		sub	sp, sp, #8
 501              		.cfi_def_cfa_offset 16
 502 0004 00AF     		add	r7, sp, #0
 503              		.cfi_def_cfa_register 7
 504 0006 7860     		str	r0, [r7, #4]
1542:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_NCF);
 505              		.loc 3 1542 3
 506 0008 7B68     		ldr	r3, [r7, #4]
 507 000a 0422     		movs	r2, #4
 508 000c 1A62     		str	r2, [r3, #32]
1543:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 509              		.loc 3 1543 1
 510 000e C046     		nop
 511 0010 BD46     		mov	sp, r7
 512 0012 02B0     		add	sp, sp, #8
 513              		@ sp needed
 514 0014 80BD     		pop	{r7, pc}
 515              		.cfi_endproc
 516              	.LFE554:
 518              		.section	.text.LL_LPUART_ClearFlag_TC,"ax",%progbits
 519              		.align	1
 520              		.syntax unified
 521              		.code	16
 522              		.thumb_func
 523              		.fpu softvfp
 525              	LL_LPUART_ClearFlag_TC:
 526              	.LFB557:
1544:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1545:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1546:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Clear OverRun Error Flag
1547:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ICR          ORECF         LL_LPUART_ClearFlag_ORE
1548:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1549:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1550:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1551:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_ORE(USART_TypeDef *LPUARTx)
1552:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
ARM GAS  /tmp/ccpZN1QB.s 			page 70


1553:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_ORECF);
1554:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1555:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1556:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1557:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Clear IDLE line detected Flag
1558:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ICR          IDLECF        LL_LPUART_ClearFlag_IDLE
1559:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1560:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1561:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1562:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_IDLE(USART_TypeDef *LPUARTx)
1563:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1564:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_IDLECF);
1565:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1566:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1567:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1568:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1569:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Clear Transmission Complete Flag
1570:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ICR          TCCF          LL_LPUART_ClearFlag_TC
1571:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1572:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1573:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1574:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_TC(USART_TypeDef *LPUARTx)
1575:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 527              		.loc 3 1575 1
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 8
 530              		@ frame_needed = 1, uses_anonymous_args = 0
 531 0000 80B5     		push	{r7, lr}
 532              		.cfi_def_cfa_offset 8
 533              		.cfi_offset 7, -8
 534              		.cfi_offset 14, -4
 535 0002 82B0     		sub	sp, sp, #8
 536              		.cfi_def_cfa_offset 16
 537 0004 00AF     		add	r7, sp, #0
 538              		.cfi_def_cfa_register 7
 539 0006 7860     		str	r0, [r7, #4]
1576:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_TCCF);
 540              		.loc 3 1576 3
 541 0008 7B68     		ldr	r3, [r7, #4]
 542 000a 4022     		movs	r2, #64
 543 000c 1A62     		str	r2, [r3, #32]
1577:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 544              		.loc 3 1577 1
 545 000e C046     		nop
 546 0010 BD46     		mov	sp, r7
 547 0012 02B0     		add	sp, sp, #8
 548              		@ sp needed
 549 0014 80BD     		pop	{r7, pc}
 550              		.cfi_endproc
 551              	.LFE557:
 553              		.section	.text.LL_LPUART_EnableIT_RXNE,"ax",%progbits
 554              		.align	1
 555              		.syntax unified
 556              		.code	16
 557              		.thumb_func
 558              		.fpu softvfp
 560              	LL_LPUART_EnableIT_RXNE:
ARM GAS  /tmp/ccpZN1QB.s 			page 71


 561              	.LFB562:
1578:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1579:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1580:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Clear CTS Interrupt Flag
1581:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ICR          CTSCF         LL_LPUART_ClearFlag_nCTS
1582:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1583:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1584:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1585:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_nCTS(USART_TypeDef *LPUARTx)
1586:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1587:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_CTSCF);
1588:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1589:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1590:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1591:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Clear Character Match Flag
1592:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ICR          CMCF          LL_LPUART_ClearFlag_CM
1593:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1594:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1595:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1596:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_CM(USART_TypeDef *LPUARTx)
1597:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1598:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_CMCF);
1599:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1600:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1601:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1602:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Clear Wake Up from stop mode Flag
1603:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll ICR          WUCF          LL_LPUART_ClearFlag_WKUP
1604:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1605:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1606:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1607:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_WKUP(USART_TypeDef *LPUARTx)
1608:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1609:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_WUCF);
1610:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1611:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1612:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1613:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
1614:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1615:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1616:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EF_IT_Management IT_Management
1617:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
1618:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1619:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1620:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1621:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable IDLE Interrupt
1622:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          IDLEIE        LL_LPUART_EnableIT_IDLE
1623:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1624:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1625:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1626:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_IDLE(USART_TypeDef *LPUARTx)
1627:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1628:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR1, USART_CR1_IDLEIE);
1629:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1630:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1631:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1632:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1633:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable RX Not Empty Interrupt
ARM GAS  /tmp/ccpZN1QB.s 			page 72


1634:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          RXNEIE        LL_LPUART_EnableIT_RXNE
1635:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1636:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1637:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1638:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_RXNE(USART_TypeDef *LPUARTx)
1639:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 562              		.loc 3 1639 1
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 24
 565              		@ frame_needed = 1, uses_anonymous_args = 0
 566 0000 80B5     		push	{r7, lr}
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 7, -8
 569              		.cfi_offset 14, -4
 570 0002 86B0     		sub	sp, sp, #24
 571              		.cfi_def_cfa_offset 32
 572 0004 00AF     		add	r7, sp, #0
 573              		.cfi_def_cfa_register 7
 574 0006 7860     		str	r0, [r7, #4]
 575              	.LBB34:
 576              	.LBB35:
 577              	.LBB36:
 578              		.file 4 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
ARM GAS  /tmp/ccpZN1QB.s 			page 73


  35:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccpZN1QB.s 			page 74


  92:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
ARM GAS  /tmp/ccpZN1QB.s 			page 75


 149:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
ARM GAS  /tmp/ccpZN1QB.s 			page 76


 206:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
ARM GAS  /tmp/ccpZN1QB.s 			page 77


 263:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccpZN1QB.s 			page 78


 320:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccpZN1QB.s 			page 79


 377:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 579              		.loc 4 386 3
 580              		.syntax divided
 581              	@ 386 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 582 0008 EFF31083 		MRS r3, primask
 583              	@ 0 "" 2
 584              		.thumb
 585              		.syntax unified
 586 000c BB60     		str	r3, [r7, #8]
 387:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 587              		.loc 4 387 9
 588 000e BB68     		ldr	r3, [r7, #8]
 589              	.LBE36:
 590              	.LBE35:
1640:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR1, USART_CR1_RXNEIE);
 591              		.loc 3 1640 3
 592 0010 7B61     		str	r3, [r7, #20]
 593 0012 0123     		movs	r3, #1
 594 0014 FB60     		str	r3, [r7, #12]
 595              	.LBB37:
 596              	.LBB38:
 388:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
ARM GAS  /tmp/ccpZN1QB.s 			page 80


 597              		.loc 4 414 3
 598 0016 FB68     		ldr	r3, [r7, #12]
 599              		.syntax divided
 600              	@ 414 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 601 0018 83F31088 		MSR primask, r3
 602              	@ 0 "" 2
 415:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 603              		.loc 4 415 1
 604              		.thumb
 605              		.syntax unified
 606 001c C046     		nop
 607              	.LBE38:
 608              	.LBE37:
 609              		.loc 3 1640 3
 610 001e 7B68     		ldr	r3, [r7, #4]
 611 0020 1B68     		ldr	r3, [r3]
 612 0022 2022     		movs	r2, #32
 613 0024 1A43     		orrs	r2, r3
 614 0026 7B68     		ldr	r3, [r7, #4]
 615 0028 1A60     		str	r2, [r3]
 616 002a 7B69     		ldr	r3, [r7, #20]
 617 002c 3B61     		str	r3, [r7, #16]
 618              	.LBB39:
 619              	.LBB40:
 414:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 620              		.loc 4 414 3
 621 002e 3B69     		ldr	r3, [r7, #16]
 622              		.syntax divided
 623              	@ 414 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 624 0030 83F31088 		MSR primask, r3
 625              	@ 0 "" 2
 626              		.loc 4 415 1
 627              		.thumb
 628              		.syntax unified
 629 0034 C046     		nop
 630              	.LBE40:
 631              	.LBE39:
 632              	.LBE34:
1641:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 633              		.loc 3 1641 1
 634 0036 C046     		nop
 635 0038 BD46     		mov	sp, r7
 636 003a 06B0     		add	sp, sp, #24
 637              		@ sp needed
 638 003c 80BD     		pop	{r7, pc}
 639              		.cfi_endproc
 640              	.LFE562:
 642              		.section	.text.LL_LPUART_EnableIT_TC,"ax",%progbits
 643              		.align	1
 644              		.syntax unified
 645              		.code	16
 646              		.thumb_func
 647              		.fpu softvfp
 649              	LL_LPUART_EnableIT_TC:
 650              	.LFB563:
1642:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1643:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
ARM GAS  /tmp/ccpZN1QB.s 			page 81


1644:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable Transmission Complete Interrupt
1645:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          TCIE          LL_LPUART_EnableIT_TC
1646:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1647:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1648:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1649:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_TC(USART_TypeDef *LPUARTx)
1650:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 651              		.loc 3 1650 1
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 24
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655 0000 80B5     		push	{r7, lr}
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 7, -8
 658              		.cfi_offset 14, -4
 659 0002 86B0     		sub	sp, sp, #24
 660              		.cfi_def_cfa_offset 32
 661 0004 00AF     		add	r7, sp, #0
 662              		.cfi_def_cfa_register 7
 663 0006 7860     		str	r0, [r7, #4]
 664              	.LBB41:
 665              	.LBB42:
 666              	.LBB43:
 386:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 667              		.loc 4 386 3
 668              		.syntax divided
 669              	@ 386 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 670 0008 EFF31083 		MRS r3, primask
 671              	@ 0 "" 2
 672              		.thumb
 673              		.syntax unified
 674 000c BB60     		str	r3, [r7, #8]
 387:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 675              		.loc 4 387 9
 676 000e BB68     		ldr	r3, [r7, #8]
 677              	.LBE43:
 678              	.LBE42:
1651:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR1, USART_CR1_TCIE);
 679              		.loc 3 1651 3
 680 0010 7B61     		str	r3, [r7, #20]
 681 0012 0123     		movs	r3, #1
 682 0014 FB60     		str	r3, [r7, #12]
 683              	.LBB44:
 684              	.LBB45:
 414:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 685              		.loc 4 414 3
 686 0016 FB68     		ldr	r3, [r7, #12]
 687              		.syntax divided
 688              	@ 414 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 689 0018 83F31088 		MSR primask, r3
 690              	@ 0 "" 2
 691              		.loc 4 415 1
 692              		.thumb
 693              		.syntax unified
 694 001c C046     		nop
 695              	.LBE45:
 696              	.LBE44:
ARM GAS  /tmp/ccpZN1QB.s 			page 82


 697              		.loc 3 1651 3
 698 001e 7B68     		ldr	r3, [r7, #4]
 699 0020 1B68     		ldr	r3, [r3]
 700 0022 4022     		movs	r2, #64
 701 0024 1A43     		orrs	r2, r3
 702 0026 7B68     		ldr	r3, [r7, #4]
 703 0028 1A60     		str	r2, [r3]
 704 002a 7B69     		ldr	r3, [r7, #20]
 705 002c 3B61     		str	r3, [r7, #16]
 706              	.LBB46:
 707              	.LBB47:
 414:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 708              		.loc 4 414 3
 709 002e 3B69     		ldr	r3, [r7, #16]
 710              		.syntax divided
 711              	@ 414 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 712 0030 83F31088 		MSR primask, r3
 713              	@ 0 "" 2
 714              		.loc 4 415 1
 715              		.thumb
 716              		.syntax unified
 717 0034 C046     		nop
 718              	.LBE47:
 719              	.LBE46:
 720              	.LBE41:
1652:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 721              		.loc 3 1652 1
 722 0036 C046     		nop
 723 0038 BD46     		mov	sp, r7
 724 003a 06B0     		add	sp, sp, #24
 725              		@ sp needed
 726 003c 80BD     		pop	{r7, pc}
 727              		.cfi_endproc
 728              	.LFE563:
 730              		.section	.text.LL_LPUART_ReceiveData8,"ax",%progbits
 731              		.align	1
 732              		.syntax unified
 733              		.code	16
 734              		.thumb_func
 735              		.fpu softvfp
 737              	LL_LPUART_ReceiveData8:
 738              	.LFB598:
1653:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1654:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1655:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1656:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable TX Empty Interrupt
1657:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          TXEIE         LL_LPUART_EnableIT_TXE
1658:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1659:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1660:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1661:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_TXE(USART_TypeDef *LPUARTx)
1662:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1663:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR1, USART_CR1_TXEIE);
1664:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1665:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1666:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1667:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable Parity Error Interrupt
ARM GAS  /tmp/ccpZN1QB.s 			page 83


1668:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          PEIE          LL_LPUART_EnableIT_PE
1669:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1670:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1671:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1672:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_PE(USART_TypeDef *LPUARTx)
1673:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1674:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR1, USART_CR1_PEIE);
1675:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1676:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1677:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1678:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable Character Match Interrupt
1679:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          CMIE          LL_LPUART_EnableIT_CM
1680:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1681:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1682:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1683:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_CM(USART_TypeDef *LPUARTx)
1684:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1685:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR1, USART_CR1_CMIE);
1686:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1687:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1688:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1689:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1690:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable Error Interrupt
1691:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   When set, Error Interrupt Enable Bit is enabling interrupt generation in case of a fram
1692:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         error, overrun error or noise flag (FE=1 or ORE=1 or NF=1 in the LPUARTx_ISR register).
1693:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         - 0: Interrupt is inhibited
1694:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         - 1: An interrupt is generated when FE=1 or ORE=1 or NF=1 in the LPUARTx_ISR register.
1695:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          EIE           LL_LPUART_EnableIT_ERROR
1696:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1697:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1698:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1699:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_ERROR(USART_TypeDef *LPUARTx)
1700:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1701:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR3, USART_CR3_EIE);
1702:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1703:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1704:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1705:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable CTS Interrupt
1706:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          CTSIE         LL_LPUART_EnableIT_CTS
1707:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1708:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1709:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1710:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_CTS(USART_TypeDef *LPUARTx)
1711:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1712:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR3, USART_CR3_CTSIE);
1713:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1714:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1715:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1716:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable Wake Up from Stop Mode Interrupt
1717:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          WUFIE         LL_LPUART_EnableIT_WKUP
1718:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1719:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1720:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1721:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_WKUP(USART_TypeDef *LPUARTx)
1722:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1723:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR3, USART_CR3_WUFIE);
1724:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
ARM GAS  /tmp/ccpZN1QB.s 			page 84


1725:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1726:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1727:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1728:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable IDLE Interrupt
1729:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          IDLEIE        LL_LPUART_DisableIT_IDLE
1730:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1731:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1732:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1733:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_IDLE(USART_TypeDef *LPUARTx)
1734:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1735:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR1, USART_CR1_IDLEIE);
1736:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1737:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1738:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1739:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1740:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable RX Not Empty Interrupt
1741:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          RXNEIE        LL_LPUART_DisableIT_RXNE
1742:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1743:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1744:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1745:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_RXNE(USART_TypeDef *LPUARTx)
1746:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1747:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR1, USART_CR1_RXNEIE);
1748:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1749:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1750:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1751:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable Transmission Complete Interrupt
1752:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          TCIE          LL_LPUART_DisableIT_TC
1753:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1754:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1755:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1756:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_TC(USART_TypeDef *LPUARTx)
1757:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1758:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR1, USART_CR1_TCIE);
1759:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1760:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1761:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1762:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1763:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable TX Empty Interrupt
1764:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          TXEIE         LL_LPUART_DisableIT_TXE
1765:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1766:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1767:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1768:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_TXE(USART_TypeDef *LPUARTx)
1769:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1770:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR1, USART_CR1_TXEIE);
1771:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1772:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1773:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1774:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable Parity Error Interrupt
1775:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          PEIE          LL_LPUART_DisableIT_PE
1776:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1777:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1778:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1779:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_PE(USART_TypeDef *LPUARTx)
1780:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1781:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR1, USART_CR1_PEIE);
ARM GAS  /tmp/ccpZN1QB.s 			page 85


1782:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1783:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1784:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1785:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable Character Match Interrupt
1786:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          CMIE          LL_LPUART_DisableIT_CM
1787:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1788:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1789:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1790:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_CM(USART_TypeDef *LPUARTx)
1791:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1792:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR1, USART_CR1_CMIE);
1793:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1794:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1795:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1796:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1797:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable Error Interrupt
1798:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @note   When set, Error Interrupt Enable Bit is enabling interrupt generation in case of a fram
1799:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         error, overrun error or noise flag (FE=1 or ORE=1 or NF=1 in the LPUARTx_ISR register).
1800:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         - 0: Interrupt is inhibited
1801:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         - 1: An interrupt is generated when FE=1 or ORE=1 or NF=1 in the LPUARTx_ISR register.
1802:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          EIE           LL_LPUART_DisableIT_ERROR
1803:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1804:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1805:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1806:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_ERROR(USART_TypeDef *LPUARTx)
1807:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1808:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR3, USART_CR3_EIE);
1809:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1810:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1811:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1812:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable CTS Interrupt
1813:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          CTSIE         LL_LPUART_DisableIT_CTS
1814:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1815:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1816:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1817:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_CTS(USART_TypeDef *LPUARTx)
1818:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1819:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR3, USART_CR3_CTSIE);
1820:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1821:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1822:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1823:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable Wake Up from Stop Mode Interrupt
1824:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          WUFIE         LL_LPUART_DisableIT_WKUP
1825:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1826:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1827:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1828:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_WKUP(USART_TypeDef *LPUARTx)
1829:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1830:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR3, USART_CR3_WUFIE);
1831:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1832:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1833:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1834:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1835:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART IDLE Interrupt  source is enabled or disabled.
1836:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          IDLEIE        LL_LPUART_IsEnabledIT_IDLE
1837:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1838:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
ARM GAS  /tmp/ccpZN1QB.s 			page 86


1839:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1840:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_IDLE(USART_TypeDef *LPUARTx)
1841:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1842:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_IDLEIE) == (USART_CR1_IDLEIE)) ? 1UL : 0UL);
1843:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1844:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1845:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1846:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1847:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART RX Not Empty Interrupt is enabled or disabled.
1848:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          RXNEIE        LL_LPUART_IsEnabledIT_RXNE
1849:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1850:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1851:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1852:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_RXNE(USART_TypeDef *LPUARTx)
1853:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1854:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_RXNEIE) == (USART_CR1_RXNEIE)) ? 1UL : 0UL);
1855:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1856:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1857:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1858:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Transmission Complete Interrupt is enabled or disabled.
1859:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          TCIE          LL_LPUART_IsEnabledIT_TC
1860:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1861:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1862:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1863:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_TC(USART_TypeDef *LPUARTx)
1864:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1865:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_TCIE) == (USART_CR1_TCIE)) ? 1UL : 0UL);
1866:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1867:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1868:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1869:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1870:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART TX Empty Interrupt is enabled or disabled.
1871:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          TXEIE         LL_LPUART_IsEnabledIT_TXE
1872:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1873:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1874:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1875:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_TXE(USART_TypeDef *LPUARTx)
1876:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1877:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_TXEIE) == (USART_CR1_TXEIE)) ? 1UL : 0UL);
1878:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1879:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1880:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1881:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Parity Error Interrupt is enabled or disabled.
1882:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          PEIE          LL_LPUART_IsEnabledIT_PE
1883:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1884:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1885:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1886:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_PE(USART_TypeDef *LPUARTx)
1887:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1888:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_PEIE) == (USART_CR1_PEIE)) ? 1UL : 0UL);
1889:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1890:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1891:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1892:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Character Match Interrupt is enabled or disabled.
1893:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR1          CMIE          LL_LPUART_IsEnabledIT_CM
1894:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1895:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
ARM GAS  /tmp/ccpZN1QB.s 			page 87


1896:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1897:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_CM(USART_TypeDef *LPUARTx)
1898:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1899:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_CMIE) == (USART_CR1_CMIE)) ? 1UL : 0UL);
1900:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1901:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1902:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1903:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1904:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Error Interrupt is enabled or disabled.
1905:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          EIE           LL_LPUART_IsEnabledIT_ERROR
1906:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1907:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1908:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1909:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_ERROR(USART_TypeDef *LPUARTx)
1910:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1911:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_EIE) == (USART_CR3_EIE)) ? 1UL : 0UL);
1912:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1913:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1914:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1915:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART CTS Interrupt is enabled or disabled.
1916:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          CTSIE         LL_LPUART_IsEnabledIT_CTS
1917:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1918:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1919:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1920:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_CTS(USART_TypeDef *LPUARTx)
1921:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1922:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_CTSIE) == (USART_CR3_CTSIE)) ? 1UL : 0UL);
1923:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1924:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1925:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1926:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Wake Up from Stop Mode Interrupt is enabled or disabled.
1927:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          WUFIE         LL_LPUART_IsEnabledIT_WKUP
1928:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1929:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1930:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1931:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_WKUP(USART_TypeDef *LPUARTx)
1932:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1933:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_WUFIE) == (USART_CR3_WUFIE)) ? 1UL : 0UL);
1934:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1935:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1936:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1937:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1938:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
1939:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1940:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1941:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EF_DMA_Management DMA_Management
1942:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
1943:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1944:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1945:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1946:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable DMA Mode for reception
1947:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          DMAR          LL_LPUART_EnableDMAReq_RX
1948:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1949:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1950:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1951:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableDMAReq_RX(USART_TypeDef *LPUARTx)
1952:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
ARM GAS  /tmp/ccpZN1QB.s 			page 88


1953:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR3, USART_CR3_DMAR);
1954:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1955:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1956:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1957:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable DMA Mode for reception
1958:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          DMAR          LL_LPUART_DisableDMAReq_RX
1959:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1960:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1961:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1962:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableDMAReq_RX(USART_TypeDef *LPUARTx)
1963:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1964:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR3, USART_CR3_DMAR);
1965:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1966:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1967:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1968:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if DMA Mode is enabled for reception
1969:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          DMAR          LL_LPUART_IsEnabledDMAReq_RX
1970:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1971:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1972:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1973:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledDMAReq_RX(USART_TypeDef *LPUARTx)
1974:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1975:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_DMAR) == (USART_CR3_DMAR)) ? 1UL : 0UL);
1976:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1977:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1978:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1979:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable DMA Mode for transmission
1980:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          DMAT          LL_LPUART_EnableDMAReq_TX
1981:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1982:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1983:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1984:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableDMAReq_TX(USART_TypeDef *LPUARTx)
1985:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1986:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_SET_BIT(LPUARTx->CR3, USART_CR3_DMAT);
1987:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1988:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
1989:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
1990:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable DMA Mode for transmission
1991:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          DMAT          LL_LPUART_DisableDMAReq_TX
1992:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1993:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
1994:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
1995:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableDMAReq_TX(USART_TypeDef *LPUARTx)
1996:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
1997:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   ATOMIC_CLEAR_BIT(LPUARTx->CR3, USART_CR3_DMAT);
1998:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
1999:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
2000:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
2001:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Check if DMA Mode is enabled for transmission
2002:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          DMAT          LL_LPUART_IsEnabledDMAReq_TX
2003:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2004:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2005:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
2006:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledDMAReq_TX(USART_TypeDef *LPUARTx)
2007:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
2008:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_DMAT) == (USART_CR3_DMAT)) ? 1UL : 0UL);
2009:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
ARM GAS  /tmp/ccpZN1QB.s 			page 89


2010:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
2011:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
2012:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Enable DMA Disabling on Reception Error
2013:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          DDRE          LL_LPUART_EnableDMADeactOnRxErr
2014:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2015:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
2016:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
2017:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableDMADeactOnRxErr(USART_TypeDef *LPUARTx)
2018:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
2019:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_DDRE);
2020:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
2021:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
2022:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
2023:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Disable DMA Disabling on Reception Error
2024:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          DDRE          LL_LPUART_DisableDMADeactOnRxErr
2025:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2026:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
2027:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
2028:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableDMADeactOnRxErr(USART_TypeDef *LPUARTx)
2029:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
2030:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_DDRE);
2031:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
2032:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
2033:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
2034:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Indicate if DMA Disabling on Reception Error is disabled
2035:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll CR3          DDRE          LL_LPUART_IsEnabledDMADeactOnRxErr
2036:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2037:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2038:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
2039:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledDMADeactOnRxErr(USART_TypeDef *LPUARTx)
2040:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
2041:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_DDRE) == (USART_CR3_DDRE)) ? 1UL : 0UL);
2042:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
2043:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
2044:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
2045:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Get the LPUART data register address used for DMA transfer
2046:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll RDR          RDR           LL_LPUART_DMA_GetRegAddr\n
2047:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll TDR          TDR           LL_LPUART_DMA_GetRegAddr
2048:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2049:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  Direction This parameter can be one of the following values:
2050:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DMA_REG_DATA_TRANSMIT
2051:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DMA_REG_DATA_RECEIVE
2052:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Address of data register
2053:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
2054:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_DMA_GetRegAddr(USART_TypeDef *LPUARTx, uint32_t Direction)
2055:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
2056:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   uint32_t data_reg_addr;
2057:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
2058:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   if (Direction == LL_LPUART_DMA_REG_DATA_TRANSMIT)
2059:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   {
2060:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****     /* return address of TDR register */
2061:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****     data_reg_addr = (uint32_t) &(LPUARTx->TDR);
2062:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   }
2063:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   else
2064:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   {
2065:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****     /* return address of RDR register */
2066:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****     data_reg_addr = (uint32_t) &(LPUARTx->RDR);
ARM GAS  /tmp/ccpZN1QB.s 			page 90


2067:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   }
2068:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
2069:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return data_reg_addr;
2070:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
2071:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
2072:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
2073:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @}
2074:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
2075:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
2076:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EF_Data_Management Data_Management
2077:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @{
2078:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
2079:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
2080:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
2081:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Read Receiver Data register (Receive Data value, 8 bits)
2082:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll RDR          RDR           LL_LPUART_ReceiveData8
2083:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2084:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Time Value between Min_Data=0x00 and Max_Data=0xFF
2085:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
2086:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint8_t LL_LPUART_ReceiveData8(USART_TypeDef *LPUARTx)
2087:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 739              		.loc 3 2087 1
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 8
 742              		@ frame_needed = 1, uses_anonymous_args = 0
 743 0000 80B5     		push	{r7, lr}
 744              		.cfi_def_cfa_offset 8
 745              		.cfi_offset 7, -8
 746              		.cfi_offset 14, -4
 747 0002 82B0     		sub	sp, sp, #8
 748              		.cfi_def_cfa_offset 16
 749 0004 00AF     		add	r7, sp, #0
 750              		.cfi_def_cfa_register 7
 751 0006 7860     		str	r0, [r7, #4]
2088:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint8_t)(READ_BIT(LPUARTx->RDR, USART_RDR_RDR) & 0xFFU);
 752              		.loc 3 2088 20
 753 0008 7B68     		ldr	r3, [r7, #4]
 754 000a 5B6A     		ldr	r3, [r3, #36]
 755              		.loc 3 2088 10
 756 000c DBB2     		uxtb	r3, r3
2089:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 757              		.loc 3 2089 1
 758 000e 1800     		movs	r0, r3
 759 0010 BD46     		mov	sp, r7
 760 0012 02B0     		add	sp, sp, #8
 761              		@ sp needed
 762 0014 80BD     		pop	{r7, pc}
 763              		.cfi_endproc
 764              	.LFE598:
 766              		.section	.text.LL_LPUART_TransmitData8,"ax",%progbits
 767              		.align	1
 768              		.syntax unified
 769              		.code	16
 770              		.thumb_func
 771              		.fpu softvfp
 773              	LL_LPUART_TransmitData8:
 774              	.LFB600:
ARM GAS  /tmp/ccpZN1QB.s 			page 91


2090:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
2091:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
2092:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Read Receiver Data register (Receive Data value, 9 bits)
2093:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll RDR          RDR           LL_LPUART_ReceiveData9
2094:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2095:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval Time Value between Min_Data=0x00 and Max_Data=0x1FF
2096:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
2097:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE uint16_t LL_LPUART_ReceiveData9(USART_TypeDef *LPUARTx)
2098:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
2099:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   return (uint16_t)(READ_BIT(LPUARTx->RDR, USART_RDR_RDR));
2100:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
2101:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** 
2102:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** /**
2103:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @brief  Write in Transmitter Data Register (Transmit Data value, 8 bits)
2104:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @rmtoll TDR          TDR           LL_LPUART_TransmitData8
2105:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2106:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @param  Value between Min_Data=0x00 and Max_Data=0xFF
2107:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   * @retval None
2108:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   */
2109:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_TransmitData8(USART_TypeDef *LPUARTx, uint8_t Value)
2110:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** {
 775              		.loc 3 2110 1
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 8
 778              		@ frame_needed = 1, uses_anonymous_args = 0
 779 0000 80B5     		push	{r7, lr}
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 7, -8
 782              		.cfi_offset 14, -4
 783 0002 82B0     		sub	sp, sp, #8
 784              		.cfi_def_cfa_offset 16
 785 0004 00AF     		add	r7, sp, #0
 786              		.cfi_def_cfa_register 7
 787 0006 7860     		str	r0, [r7, #4]
 788 0008 0A00     		movs	r2, r1
 789 000a FB1C     		adds	r3, r7, #3
 790 000c 1A70     		strb	r2, [r3]
2111:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h ****   LPUARTx->TDR = Value;
 791              		.loc 3 2111 16
 792 000e FB1C     		adds	r3, r7, #3
 793 0010 1A78     		ldrb	r2, [r3]
 794 0012 7B68     		ldr	r3, [r7, #4]
 795 0014 9A62     		str	r2, [r3, #40]
2112:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_lpuart.h **** }
 796              		.loc 3 2112 1
 797 0016 C046     		nop
 798 0018 BD46     		mov	sp, r7
 799 001a 02B0     		add	sp, sp, #8
 800              		@ sp needed
 801 001c 80BD     		pop	{r7, pc}
 802              		.cfi_endproc
 803              	.LFE600:
 805              		.section	.rodata.OFFSET_TAB_CCMRx,"a"
 806              		.align	2
 809              	OFFSET_TAB_CCMRx:
 810 0000 00000000 		.ascii	"\000\000\000\000\004\000\004"
 810      040004
ARM GAS  /tmp/ccpZN1QB.s 			page 92


 811              		.section	.rodata.SHIFT_TAB_OCxx,"a"
 812              		.align	2
 815              	SHIFT_TAB_OCxx:
 816 0000 00000800 		.ascii	"\000\000\010\000\000\000\010"
 816      000008
 817              		.section	.rodata.SHIFT_TAB_ICxx,"a"
 818              		.align	2
 821              	SHIFT_TAB_ICxx:
 822 0000 00000800 		.ascii	"\000\000\010\000\000\000\010"
 822      000008
 823              		.section	.rodata.SHIFT_TAB_CCxP,"a"
 824              		.align	2
 827              	SHIFT_TAB_CCxP:
 828 0000 00000400 		.ascii	"\000\000\004\000\010\000\014"
 828      08000C
 829              		.section	.bss.rx_buffer,"aw",%nobits
 830              		.align	2
 833              	rx_buffer:
 834 0000 00000000 		.space	512
 834      00000000 
 834      00000000 
 834      00000000 
 834      00000000 
 835              		.section	.bss.tx_buffer,"aw",%nobits
 836              		.align	2
 839              	tx_buffer:
 840 0000 00000000 		.space	512
 840      00000000 
 840      00000000 
 840      00000000 
 840      00000000 
 841              		.section	.bss.rx_fifo,"aw",%nobits
 842              		.align	2
 845              	rx_fifo:
 846 0000 00000000 		.space	20
 846      00000000 
 846      00000000 
 846      00000000 
 846      00000000 
 847              		.section	.bss.tx_fifo,"aw",%nobits
 848              		.align	2
 851              	tx_fifo:
 852 0000 00000000 		.space	20
 852      00000000 
 852      00000000 
 852      00000000 
 852      00000000 
 853              		.section	.bss.writing,"aw",%nobits
 856              	writing:
 857 0000 00       		.space	1
 858              		.section	.text.uart_init,"ax",%progbits
 859              		.align	1
 860              		.syntax unified
 861              		.code	16
 862              		.thumb_func
 863              		.fpu softvfp
 865              	uart_init:
ARM GAS  /tmp/ccpZN1QB.s 			page 93


 866              	.LFB1186:
 867              		.file 5 "ble_uart.c"
   1:ble_uart.c    **** #include "ble_uart.h"
   2:ble_uart.c    **** 
   3:ble_uart.c    **** #include "board.h"
   4:ble_uart.c    **** #include "common.h"
   5:ble_uart.c    **** #include "fifo.h"
   6:ble_uart.c    **** 
   7:ble_uart.c    **** static uint8_t rx_buffer[BLE_UART_RX_BUFFER_SIZE];
   8:ble_uart.c    **** static uint8_t tx_buffer[BLE_UART_TX_BUFFER_SIZE];
   9:ble_uart.c    **** 
  10:ble_uart.c    **** static fifo_t rx_fifo;
  11:ble_uart.c    **** static fifo_t tx_fifo;
  12:ble_uart.c    **** 
  13:ble_uart.c    **** static bool writing = false;
  14:ble_uart.c    **** 
  15:ble_uart.c    **** static void uart_init(void)
  16:ble_uart.c    **** {
 868              		.loc 5 16 1
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 48
 871              		@ frame_needed = 1, uses_anonymous_args = 0
 872 0000 90B5     		push	{r4, r7, lr}
 873              		.cfi_def_cfa_offset 12
 874              		.cfi_offset 4, -12
 875              		.cfi_offset 7, -8
 876              		.cfi_offset 14, -4
 877 0002 8DB0     		sub	sp, sp, #52
 878              		.cfi_def_cfa_offset 64
 879 0004 00AF     		add	r7, sp, #0
 880              		.cfi_def_cfa_register 7
  17:ble_uart.c    ****   LL_GPIO_InitTypeDef gpio_config = { 0 };
 881              		.loc 5 17 23
 882 0006 1824     		movs	r4, #24
 883 0008 3B19     		adds	r3, r7, r4
 884 000a 1800     		movs	r0, r3
 885 000c 1823     		movs	r3, #24
 886 000e 1A00     		movs	r2, r3
 887 0010 0021     		movs	r1, #0
 888 0012 FFF7FEFF 		bl	memset
  18:ble_uart.c    ****   LL_LPUART_InitTypeDef uart_config = { 0 };
 889              		.loc 5 18 25
 890 0016 3B00     		movs	r3, r7
 891 0018 1800     		movs	r0, r3
 892 001a 1823     		movs	r3, #24
 893 001c 1A00     		movs	r2, r3
 894 001e 0021     		movs	r1, #0
 895 0020 FFF7FEFF 		bl	memset
  19:ble_uart.c    **** 
  20:ble_uart.c    ****   BLE_UART_CLK_EN();
 896              		.loc 5 20 3
 897 0024 8023     		movs	r3, #128
 898 0026 DB02     		lsls	r3, r3, #11
 899 0028 1800     		movs	r0, r3
 900 002a FFF7FEFF 		bl	LL_APB1_GRP1_EnableClock
  21:ble_uart.c    ****   BLE_UART_GPIO_CLK_EN();
 901              		.loc 5 21 3
ARM GAS  /tmp/ccpZN1QB.s 			page 94


 902 002e 0420     		movs	r0, #4
 903 0030 FFF7FEFF 		bl	LL_IOP_GRP1_EnableClock
  22:ble_uart.c    **** 
  23:ble_uart.c    ****   gpio_config.Pin = BLE_UART_RX_PIN | BLE_UART_TX_PIN;
 904              		.loc 5 23 19
 905 0034 2100     		movs	r1, r4
 906 0036 7B18     		adds	r3, r7, r1
 907 0038 3022     		movs	r2, #48
 908 003a 1A60     		str	r2, [r3]
  24:ble_uart.c    ****   gpio_config.Mode = LL_GPIO_MODE_ALTERNATE;
 909              		.loc 5 24 20
 910 003c 7B18     		adds	r3, r7, r1
 911 003e 0222     		movs	r2, #2
 912 0040 5A60     		str	r2, [r3, #4]
  25:ble_uart.c    ****   gpio_config.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 913              		.loc 5 25 21
 914 0042 7B18     		adds	r3, r7, r1
 915 0044 0322     		movs	r2, #3
 916 0046 9A60     		str	r2, [r3, #8]
  26:ble_uart.c    ****   gpio_config.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 917              		.loc 5 26 26
 918 0048 7B18     		adds	r3, r7, r1
 919 004a 0022     		movs	r2, #0
 920 004c DA60     		str	r2, [r3, #12]
  27:ble_uart.c    ****   gpio_config.Pull = LL_GPIO_PULL_NO;
 921              		.loc 5 27 20
 922 004e 7B18     		adds	r3, r7, r1
 923 0050 0022     		movs	r2, #0
 924 0052 1A61     		str	r2, [r3, #16]
  28:ble_uart.c    ****   gpio_config.Alternate = BLE_UART_GPIO_AF;
 925              		.loc 5 28 25
 926 0054 7B18     		adds	r3, r7, r1
 927 0056 0222     		movs	r2, #2
 928 0058 5A61     		str	r2, [r3, #20]
  29:ble_uart.c    ****   LL_GPIO_Init(BLE_UART_GPIO_PORT, &gpio_config);
 929              		.loc 5 29 3
 930 005a 7B18     		adds	r3, r7, r1
 931 005c 1A4A     		ldr	r2, .L37
 932 005e 1900     		movs	r1, r3
 933 0060 1000     		movs	r0, r2
 934 0062 FFF7FEFF 		bl	LL_GPIO_Init
  30:ble_uart.c    **** 
  31:ble_uart.c    ****   NVIC_SetPriority(BLE_UART_IRQn, BLE_UART_PRIORITY);
 935              		.loc 5 31 3
 936 0066 0921     		movs	r1, #9
 937 0068 1D20     		movs	r0, #29
 938 006a FFF7FEFF 		bl	__NVIC_SetPriority
  32:ble_uart.c    ****   NVIC_EnableIRQ(BLE_UART_IRQn);
 939              		.loc 5 32 3
 940 006e 1D20     		movs	r0, #29
 941 0070 FFF7FEFF 		bl	__NVIC_EnableIRQ
  33:ble_uart.c    **** 
  34:ble_uart.c    ****   uart_config.BaudRate = 9600;
 942              		.loc 5 34 24
 943 0074 3B00     		movs	r3, r7
 944 0076 9622     		movs	r2, #150
 945 0078 9201     		lsls	r2, r2, #6
ARM GAS  /tmp/ccpZN1QB.s 			page 95


 946 007a 1A60     		str	r2, [r3]
  35:ble_uart.c    ****   uart_config.DataWidth = LL_LPUART_DATAWIDTH_8B;
 947              		.loc 5 35 25
 948 007c 3B00     		movs	r3, r7
 949 007e 0022     		movs	r2, #0
 950 0080 5A60     		str	r2, [r3, #4]
  36:ble_uart.c    ****   uart_config.StopBits = LL_LPUART_STOPBITS_1;
 951              		.loc 5 36 24
 952 0082 3B00     		movs	r3, r7
 953 0084 0022     		movs	r2, #0
 954 0086 9A60     		str	r2, [r3, #8]
  37:ble_uart.c    ****   uart_config.Parity = LL_LPUART_PARITY_NONE;
 955              		.loc 5 37 22
 956 0088 3B00     		movs	r3, r7
 957 008a 0022     		movs	r2, #0
 958 008c DA60     		str	r2, [r3, #12]
  38:ble_uart.c    ****   uart_config.TransferDirection = LL_LPUART_DIRECTION_TX_RX;
 959              		.loc 5 38 33
 960 008e 3B00     		movs	r3, r7
 961 0090 0C22     		movs	r2, #12
 962 0092 1A61     		str	r2, [r3, #16]
  39:ble_uart.c    ****   uart_config.HardwareFlowControl = LL_LPUART_HWCONTROL_NONE;
 963              		.loc 5 39 35
 964 0094 3B00     		movs	r3, r7
 965 0096 0022     		movs	r2, #0
 966 0098 5A61     		str	r2, [r3, #20]
  40:ble_uart.c    ****   LL_LPUART_Init(BLE_UART, &uart_config);
 967              		.loc 5 40 3
 968 009a 3B00     		movs	r3, r7
 969 009c 0B4A     		ldr	r2, .L37+4
 970 009e 1900     		movs	r1, r3
 971 00a0 1000     		movs	r0, r2
 972 00a2 FFF7FEFF 		bl	LL_LPUART_Init
  41:ble_uart.c    ****   LL_LPUART_Enable(BLE_UART);
 973              		.loc 5 41 3
 974 00a6 094B     		ldr	r3, .L37+4
 975 00a8 1800     		movs	r0, r3
 976 00aa FFF7FEFF 		bl	LL_LPUART_Enable
  42:ble_uart.c    **** 
  43:ble_uart.c    ****   LL_LPUART_EnableIT_RXNE(BLE_UART);
 977              		.loc 5 43 3
 978 00ae 074B     		ldr	r3, .L37+4
 979 00b0 1800     		movs	r0, r3
 980 00b2 FFF7FEFF 		bl	LL_LPUART_EnableIT_RXNE
  44:ble_uart.c    ****   LL_LPUART_EnableIT_TC(BLE_UART);
 981              		.loc 5 44 3
 982 00b6 054B     		ldr	r3, .L37+4
 983 00b8 1800     		movs	r0, r3
 984 00ba FFF7FEFF 		bl	LL_LPUART_EnableIT_TC
  45:ble_uart.c    **** }
 985              		.loc 5 45 1
 986 00be C046     		nop
 987 00c0 BD46     		mov	sp, r7
 988 00c2 0DB0     		add	sp, sp, #52
 989              		@ sp needed
 990 00c4 90BD     		pop	{r4, r7, pc}
 991              	.L38:
ARM GAS  /tmp/ccpZN1QB.s 			page 96


 992 00c6 C046     		.align	2
 993              	.L37:
 994 00c8 00080050 		.word	1342179328
 995 00cc 00480040 		.word	1073760256
 996              		.cfi_endproc
 997              	.LFE1186:
 999              		.section	.text.tx,"ax",%progbits
 1000              		.align	1
 1001              		.syntax unified
 1002              		.code	16
 1003              		.thumb_func
 1004              		.fpu softvfp
 1006              	tx:
 1007              	.LFB1187:
  46:ble_uart.c    **** 
  47:ble_uart.c    **** static inline void tx(void)
  48:ble_uart.c    **** {
 1008              		.loc 5 48 1
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 8
 1011              		@ frame_needed = 1, uses_anonymous_args = 0
 1012 0000 80B5     		push	{r7, lr}
 1013              		.cfi_def_cfa_offset 8
 1014              		.cfi_offset 7, -8
 1015              		.cfi_offset 14, -4
 1016 0002 82B0     		sub	sp, sp, #8
 1017              		.cfi_def_cfa_offset 16
 1018 0004 00AF     		add	r7, sp, #0
 1019              		.cfi_def_cfa_register 7
  49:ble_uart.c    ****   uint8_t write_byte;
  50:ble_uart.c    **** 
  51:ble_uart.c    ****   if (fifo_pop(&tx_fifo, &write_byte, 1) == 1) {
 1020              		.loc 5 51 7
 1021 0006 F91D     		adds	r1, r7, #7
 1022 0008 0A4B     		ldr	r3, .L42
 1023 000a 0122     		movs	r2, #1
 1024 000c 1800     		movs	r0, r3
 1025 000e FFF7FEFF 		bl	fifo_pop
 1026 0012 0300     		movs	r3, r0
 1027              		.loc 5 51 6
 1028 0014 012B     		cmp	r3, #1
 1029 0016 09D1     		bne	.L41
  52:ble_uart.c    ****     LL_LPUART_TransmitData8(BLE_UART, write_byte);
 1030              		.loc 5 52 5
 1031 0018 FB1D     		adds	r3, r7, #7
 1032 001a 1B78     		ldrb	r3, [r3]
 1033 001c 064A     		ldr	r2, .L42+4
 1034 001e 1900     		movs	r1, r3
 1035 0020 1000     		movs	r0, r2
 1036 0022 FFF7FEFF 		bl	LL_LPUART_TransmitData8
  53:ble_uart.c    ****     writing = true;
 1037              		.loc 5 53 13
 1038 0026 054B     		ldr	r3, .L42+8
 1039 0028 0122     		movs	r2, #1
 1040 002a 1A70     		strb	r2, [r3]
 1041              	.L41:
  54:ble_uart.c    ****   }
ARM GAS  /tmp/ccpZN1QB.s 			page 97


  55:ble_uart.c    **** }
 1042              		.loc 5 55 1
 1043 002c C046     		nop
 1044 002e BD46     		mov	sp, r7
 1045 0030 02B0     		add	sp, sp, #8
 1046              		@ sp needed
 1047 0032 80BD     		pop	{r7, pc}
 1048              	.L43:
 1049              		.align	2
 1050              	.L42:
 1051 0034 00000000 		.word	tx_fifo
 1052 0038 00480040 		.word	1073760256
 1053 003c 00000000 		.word	writing
 1054              		.cfi_endproc
 1055              	.LFE1187:
 1057              		.section	.text.ble_uart_is_writing,"ax",%progbits
 1058              		.align	1
 1059              		.global	ble_uart_is_writing
 1060              		.syntax unified
 1061              		.code	16
 1062              		.thumb_func
 1063              		.fpu softvfp
 1065              	ble_uart_is_writing:
 1066              	.LFB1188:
  56:ble_uart.c    **** 
  57:ble_uart.c    **** bool ble_uart_is_writing(void)
  58:ble_uart.c    **** {
 1067              		.loc 5 58 1
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 1, uses_anonymous_args = 0
 1071 0000 80B5     		push	{r7, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 7, -8
 1074              		.cfi_offset 14, -4
 1075 0002 00AF     		add	r7, sp, #0
 1076              		.cfi_def_cfa_register 7
  59:ble_uart.c    ****   return writing;
 1077              		.loc 5 59 10
 1078 0004 024B     		ldr	r3, .L46
 1079 0006 1B78     		ldrb	r3, [r3]
  60:ble_uart.c    **** }
 1080              		.loc 5 60 1
 1081 0008 1800     		movs	r0, r3
 1082 000a BD46     		mov	sp, r7
 1083              		@ sp needed
 1084 000c 80BD     		pop	{r7, pc}
 1085              	.L47:
 1086 000e C046     		.align	2
 1087              	.L46:
 1088 0010 00000000 		.word	writing
 1089              		.cfi_endproc
 1090              	.LFE1188:
 1092              		.section	.text.ble_uart_write,"ax",%progbits
 1093              		.align	1
 1094              		.global	ble_uart_write
 1095              		.syntax unified
ARM GAS  /tmp/ccpZN1QB.s 			page 98


 1096              		.code	16
 1097              		.thumb_func
 1098              		.fpu softvfp
 1100              	ble_uart_write:
 1101              	.LFB1189:
  61:ble_uart.c    **** 
  62:ble_uart.c    **** void ble_uart_write(uint8_t *data, uint32_t length)
  63:ble_uart.c    **** {
 1102              		.loc 5 63 1
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 16
 1105              		@ frame_needed = 1, uses_anonymous_args = 0
 1106 0000 80B5     		push	{r7, lr}
 1107              		.cfi_def_cfa_offset 8
 1108              		.cfi_offset 7, -8
 1109              		.cfi_offset 14, -4
 1110 0002 84B0     		sub	sp, sp, #16
 1111              		.cfi_def_cfa_offset 24
 1112 0004 00AF     		add	r7, sp, #0
 1113              		.cfi_def_cfa_register 7
 1114 0006 7860     		str	r0, [r7, #4]
 1115 0008 3960     		str	r1, [r7]
 1116              	.LBB48:
 1117              	.LBB49:
 386:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1118              		.loc 4 386 3
 1119              		.syntax divided
 1120              	@ 386 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1121 000a EFF31083 		MRS r3, primask
 1122              	@ 0 "" 2
 1123              		.thumb
 1124              		.syntax unified
 1125 000e BB60     		str	r3, [r7, #8]
 387:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1126              		.loc 4 387 9
 1127 0010 BB68     		ldr	r3, [r7, #8]
 1128              	.LBE49:
 1129              	.LBE48:
  64:ble_uart.c    ****   DISABLE_IRQ();
 1130              		.loc 5 64 3
 1131 0012 FB60     		str	r3, [r7, #12]
 1132              	.LBB50:
 1133              	.LBB51:
 142:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1134              		.loc 4 142 3
 1135              		.syntax divided
 1136              	@ 142 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1137 0014 72B6     		cpsid i
 1138              	@ 0 "" 2
 143:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1139              		.loc 4 143 1
 1140              		.thumb
 1141              		.syntax unified
 1142 0016 C046     		nop
 1143              	.LBE51:
 1144              	.LBE50:
  65:ble_uart.c    ****   fifo_push(&tx_fifo, data, length);
ARM GAS  /tmp/ccpZN1QB.s 			page 99


 1145              		.loc 5 65 3
 1146 0018 3A68     		ldr	r2, [r7]
 1147 001a 7968     		ldr	r1, [r7, #4]
 1148 001c 0A4B     		ldr	r3, .L53
 1149 001e 1800     		movs	r0, r3
 1150 0020 FFF7FEFF 		bl	fifo_push
  66:ble_uart.c    ****   if (!writing) {
 1151              		.loc 5 66 7
 1152 0024 094B     		ldr	r3, .L53+4
 1153 0026 1B78     		ldrb	r3, [r3]
 1154 0028 0122     		movs	r2, #1
 1155 002a 5340     		eors	r3, r2
 1156 002c DBB2     		uxtb	r3, r3
 1157              		.loc 5 66 6
 1158 002e 002B     		cmp	r3, #0
 1159 0030 01D0     		beq	.L50
  67:ble_uart.c    ****     tx();
 1160              		.loc 5 67 5
 1161 0032 FFF7FEFF 		bl	tx
 1162              	.L50:
  68:ble_uart.c    ****   }
  69:ble_uart.c    ****   ENABLE_IRQ();
 1163              		.loc 5 69 3
 1164 0036 FB68     		ldr	r3, [r7, #12]
 1165 0038 002B     		cmp	r3, #0
 1166 003a 01D1     		bne	.L52
 1167              	.LBB52:
 1168              	.LBB53:
 131:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1169              		.loc 4 131 3
 1170              		.syntax divided
 1171              	@ 131 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1172 003c 62B6     		cpsie i
 1173              	@ 0 "" 2
 132:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1174              		.loc 4 132 1
 1175              		.thumb
 1176              		.syntax unified
 1177 003e C046     		nop
 1178              	.L52:
 1179              	.LBE53:
 1180              	.LBE52:
  70:ble_uart.c    **** }
 1181              		.loc 5 70 1
 1182 0040 C046     		nop
 1183 0042 BD46     		mov	sp, r7
 1184 0044 04B0     		add	sp, sp, #16
 1185              		@ sp needed
 1186 0046 80BD     		pop	{r7, pc}
 1187              	.L54:
 1188              		.align	2
 1189              	.L53:
 1190 0048 00000000 		.word	tx_fifo
 1191 004c 00000000 		.word	writing
 1192              		.cfi_endproc
 1193              	.LFE1189:
 1195              		.section	.text.ble_uart_read,"ax",%progbits
ARM GAS  /tmp/ccpZN1QB.s 			page 100


 1196              		.align	1
 1197              		.global	ble_uart_read
 1198              		.syntax unified
 1199              		.code	16
 1200              		.thumb_func
 1201              		.fpu softvfp
 1203              	ble_uart_read:
 1204              	.LFB1190:
  71:ble_uart.c    **** 
  72:ble_uart.c    **** int ble_uart_read(uint8_t *data, uint32_t length)
  73:ble_uart.c    **** {
 1205              		.loc 5 73 1
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 24
 1208              		@ frame_needed = 1, uses_anonymous_args = 0
 1209 0000 80B5     		push	{r7, lr}
 1210              		.cfi_def_cfa_offset 8
 1211              		.cfi_offset 7, -8
 1212              		.cfi_offset 14, -4
 1213 0002 86B0     		sub	sp, sp, #24
 1214              		.cfi_def_cfa_offset 32
 1215 0004 00AF     		add	r7, sp, #0
 1216              		.cfi_def_cfa_register 7
 1217 0006 7860     		str	r0, [r7, #4]
 1218 0008 3960     		str	r1, [r7]
 1219              	.LBB54:
 1220              	.LBB55:
 386:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1221              		.loc 4 386 3
 1222              		.syntax divided
 1223              	@ 386 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1224 000a EFF31083 		MRS r3, primask
 1225              	@ 0 "" 2
 1226              		.thumb
 1227              		.syntax unified
 1228 000e FB60     		str	r3, [r7, #12]
 387:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1229              		.loc 4 387 9
 1230 0010 FB68     		ldr	r3, [r7, #12]
 1231              	.LBE55:
 1232              	.LBE54:
  74:ble_uart.c    ****   DISABLE_IRQ();
 1233              		.loc 5 74 3
 1234 0012 7B61     		str	r3, [r7, #20]
 1235              	.LBB56:
 1236              	.LBB57:
 142:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1237              		.loc 4 142 3
 1238              		.syntax divided
 1239              	@ 142 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1240 0014 72B6     		cpsid i
 1241              	@ 0 "" 2
 143:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1242              		.loc 4 143 1
 1243              		.thumb
 1244              		.syntax unified
 1245 0016 C046     		nop
ARM GAS  /tmp/ccpZN1QB.s 			page 101


 1246              	.LBE57:
 1247              	.LBE56:
  75:ble_uart.c    ****   int ret = fifo_pop(&rx_fifo, data, length);
 1248              		.loc 5 75 13
 1249 0018 3A68     		ldr	r2, [r7]
 1250 001a 7968     		ldr	r1, [r7, #4]
 1251 001c 074B     		ldr	r3, .L59
 1252 001e 1800     		movs	r0, r3
 1253 0020 FFF7FEFF 		bl	fifo_pop
 1254 0024 0300     		movs	r3, r0
 1255 0026 3B61     		str	r3, [r7, #16]
  76:ble_uart.c    ****   ENABLE_IRQ();
 1256              		.loc 5 76 3
 1257 0028 7B69     		ldr	r3, [r7, #20]
 1258 002a 002B     		cmp	r3, #0
 1259 002c 01D1     		bne	.L57
 1260              	.LBB58:
 1261              	.LBB59:
 131:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1262              		.loc 4 131 3
 1263              		.syntax divided
 1264              	@ 131 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1265 002e 62B6     		cpsie i
 1266              	@ 0 "" 2
 132:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1267              		.loc 4 132 1
 1268              		.thumb
 1269              		.syntax unified
 1270 0030 C046     		nop
 1271              	.L57:
 1272              	.LBE59:
 1273              	.LBE58:
  77:ble_uart.c    ****   return ret;
 1274              		.loc 5 77 10
 1275 0032 3B69     		ldr	r3, [r7, #16]
  78:ble_uart.c    **** }
 1276              		.loc 5 78 1
 1277 0034 1800     		movs	r0, r3
 1278 0036 BD46     		mov	sp, r7
 1279 0038 06B0     		add	sp, sp, #24
 1280              		@ sp needed
 1281 003a 80BD     		pop	{r7, pc}
 1282              	.L60:
 1283              		.align	2
 1284              	.L59:
 1285 003c 00000000 		.word	rx_fifo
 1286              		.cfi_endproc
 1287              	.LFE1190:
 1289              		.section	.text.ble_uart_init,"ax",%progbits
 1290              		.align	1
 1291              		.global	ble_uart_init
 1292              		.syntax unified
 1293              		.code	16
 1294              		.thumb_func
 1295              		.fpu softvfp
 1297              	ble_uart_init:
 1298              	.LFB1191:
ARM GAS  /tmp/ccpZN1QB.s 			page 102


  79:ble_uart.c    **** 
  80:ble_uart.c    **** void ble_uart_init(void)
  81:ble_uart.c    **** {
 1299              		.loc 5 81 1
 1300              		.cfi_startproc
 1301              		@ args = 0, pretend = 0, frame = 0
 1302              		@ frame_needed = 1, uses_anonymous_args = 0
 1303 0000 80B5     		push	{r7, lr}
 1304              		.cfi_def_cfa_offset 8
 1305              		.cfi_offset 7, -8
 1306              		.cfi_offset 14, -4
 1307 0002 00AF     		add	r7, sp, #0
 1308              		.cfi_def_cfa_register 7
  82:ble_uart.c    ****   uart_init();
 1309              		.loc 5 82 3
 1310 0004 FFF7FEFF 		bl	uart_init
  83:ble_uart.c    ****   fifo_init(&rx_fifo, rx_buffer, BLE_UART_RX_BUFFER_SIZE);
 1311              		.loc 5 83 3
 1312 0008 8023     		movs	r3, #128
 1313 000a 9A00     		lsls	r2, r3, #2
 1314 000c 0749     		ldr	r1, .L62
 1315 000e 084B     		ldr	r3, .L62+4
 1316 0010 1800     		movs	r0, r3
 1317 0012 FFF7FEFF 		bl	fifo_init
  84:ble_uart.c    ****   fifo_init(&tx_fifo, tx_buffer, BLE_UART_TX_BUFFER_SIZE);
 1318              		.loc 5 84 3
 1319 0016 8023     		movs	r3, #128
 1320 0018 9A00     		lsls	r2, r3, #2
 1321 001a 0649     		ldr	r1, .L62+8
 1322 001c 064B     		ldr	r3, .L62+12
 1323 001e 1800     		movs	r0, r3
 1324 0020 FFF7FEFF 		bl	fifo_init
  85:ble_uart.c    **** }
 1325              		.loc 5 85 1
 1326 0024 C046     		nop
 1327 0026 BD46     		mov	sp, r7
 1328              		@ sp needed
 1329 0028 80BD     		pop	{r7, pc}
 1330              	.L63:
 1331 002a C046     		.align	2
 1332              	.L62:
 1333 002c 00000000 		.word	rx_buffer
 1334 0030 00000000 		.word	rx_fifo
 1335 0034 00000000 		.word	tx_buffer
 1336 0038 00000000 		.word	tx_fifo
 1337              		.cfi_endproc
 1338              	.LFE1191:
 1340              		.section	.text.RNG_LPUART1_IRQHandler,"ax",%progbits
 1341              		.align	1
 1342              		.global	RNG_LPUART1_IRQHandler
 1343              		.syntax unified
 1344              		.code	16
 1345              		.thumb_func
 1346              		.fpu softvfp
 1348              	RNG_LPUART1_IRQHandler:
 1349              	.LFB1192:
  86:ble_uart.c    **** 
ARM GAS  /tmp/ccpZN1QB.s 			page 103


  87:ble_uart.c    **** void BLE_UART_IRQHandler(void)
  88:ble_uart.c    **** {
 1350              		.loc 5 88 1
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 16
 1353              		@ frame_needed = 1, uses_anonymous_args = 0
 1354 0000 80B5     		push	{r7, lr}
 1355              		.cfi_def_cfa_offset 8
 1356              		.cfi_offset 7, -8
 1357              		.cfi_offset 14, -4
 1358 0002 84B0     		sub	sp, sp, #16
 1359              		.cfi_def_cfa_offset 24
 1360 0004 00AF     		add	r7, sp, #0
 1361              		.cfi_def_cfa_register 7
 1362              	.LBB60:
 1363              	.LBB61:
 386:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1364              		.loc 4 386 3
 1365              		.syntax divided
 1366              	@ 386 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1367 0006 EFF31083 		MRS r3, primask
 1368              	@ 0 "" 2
 1369              		.thumb
 1370              		.syntax unified
 1371 000a BB60     		str	r3, [r7, #8]
 387:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1372              		.loc 4 387 9
 1373 000c BB68     		ldr	r3, [r7, #8]
 1374              	.LBE61:
 1375              	.LBE60:
  89:ble_uart.c    ****   DISABLE_IRQ();
 1376              		.loc 5 89 3
 1377 000e FB60     		str	r3, [r7, #12]
 1378              	.LBB62:
 1379              	.LBB63:
 142:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1380              		.loc 4 142 3
 1381              		.syntax divided
 1382              	@ 142 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1383 0010 72B6     		cpsid i
 1384              	@ 0 "" 2
 143:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1385              		.loc 4 143 1
 1386              		.thumb
 1387              		.syntax unified
 1388 0012 C046     		nop
 1389              	.LBE63:
 1390              	.LBE62:
  90:ble_uart.c    ****   uint8_t data;
  91:ble_uart.c    ****   if (LL_LPUART_IsActiveFlag_RXNE(BLE_UART)) {
 1391              		.loc 5 91 7
 1392 0014 174B     		ldr	r3, .L70
 1393 0016 1800     		movs	r0, r3
 1394 0018 FFF7FEFF 		bl	LL_LPUART_IsActiveFlag_RXNE
 1395 001c 031E     		subs	r3, r0, #0
 1396              		.loc 5 91 6
 1397 001e 11D0     		beq	.L66
ARM GAS  /tmp/ccpZN1QB.s 			page 104


  92:ble_uart.c    ****     data = LL_LPUART_ReceiveData8(BLE_UART);
 1398              		.loc 5 92 12
 1399 0020 144B     		ldr	r3, .L70
 1400 0022 1800     		movs	r0, r3
 1401 0024 FFF7FEFF 		bl	LL_LPUART_ReceiveData8
 1402 0028 0300     		movs	r3, r0
 1403 002a 1A00     		movs	r2, r3
 1404              		.loc 5 92 10
 1405 002c FB1D     		adds	r3, r7, #7
 1406 002e 1A70     		strb	r2, [r3]
  93:ble_uart.c    ****     // TODO: make sure this is correct flag to clear
  94:ble_uart.c    ****     LL_LPUART_ClearFlag_NE(BLE_UART);
 1407              		.loc 5 94 5
 1408 0030 104B     		ldr	r3, .L70
 1409 0032 1800     		movs	r0, r3
 1410 0034 FFF7FEFF 		bl	LL_LPUART_ClearFlag_NE
  95:ble_uart.c    ****     fifo_push(&rx_fifo, &data, 1);
 1411              		.loc 5 95 5
 1412 0038 F91D     		adds	r1, r7, #7
 1413 003a 0F4B     		ldr	r3, .L70+4
 1414 003c 0122     		movs	r2, #1
 1415 003e 1800     		movs	r0, r3
 1416 0040 FFF7FEFF 		bl	fifo_push
 1417              	.L66:
  96:ble_uart.c    ****   }
  97:ble_uart.c    ****   if (LL_LPUART_IsActiveFlag_TC(BLE_UART)) {
 1418              		.loc 5 97 7
 1419 0044 0B4B     		ldr	r3, .L70
 1420 0046 1800     		movs	r0, r3
 1421 0048 FFF7FEFF 		bl	LL_LPUART_IsActiveFlag_TC
 1422 004c 031E     		subs	r3, r0, #0
 1423              		.loc 5 97 6
 1424 004e 08D0     		beq	.L67
  98:ble_uart.c    ****     writing = false;
 1425              		.loc 5 98 13
 1426 0050 0A4B     		ldr	r3, .L70+8
 1427 0052 0022     		movs	r2, #0
 1428 0054 1A70     		strb	r2, [r3]
  99:ble_uart.c    ****     LL_LPUART_ClearFlag_TC(BLE_UART);
 1429              		.loc 5 99 5
 1430 0056 074B     		ldr	r3, .L70
 1431 0058 1800     		movs	r0, r3
 1432 005a FFF7FEFF 		bl	LL_LPUART_ClearFlag_TC
 100:ble_uart.c    ****     tx();
 1433              		.loc 5 100 5
 1434 005e FFF7FEFF 		bl	tx
 1435              	.L67:
 101:ble_uart.c    ****   }
 102:ble_uart.c    ****   ENABLE_IRQ();
 1436              		.loc 5 102 3
 1437 0062 FB68     		ldr	r3, [r7, #12]
 1438 0064 002B     		cmp	r3, #0
 1439 0066 01D1     		bne	.L69
 1440              	.LBB64:
 1441              	.LBB65:
 131:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1442              		.loc 4 131 3
ARM GAS  /tmp/ccpZN1QB.s 			page 105


 1443              		.syntax divided
 1444              	@ 131 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1445 0068 62B6     		cpsie i
 1446              	@ 0 "" 2
 132:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1447              		.loc 4 132 1
 1448              		.thumb
 1449              		.syntax unified
 1450 006a C046     		nop
 1451              	.L69:
 1452              	.LBE65:
 1453              	.LBE64:
 103:ble_uart.c    **** }
 1454              		.loc 5 103 1
 1455 006c C046     		nop
 1456 006e BD46     		mov	sp, r7
 1457 0070 04B0     		add	sp, sp, #16
 1458              		@ sp needed
 1459 0072 80BD     		pop	{r7, pc}
 1460              	.L71:
 1461              		.align	2
 1462              	.L70:
 1463 0074 00480040 		.word	1073760256
 1464 0078 00000000 		.word	rx_fifo
 1465 007c 00000000 		.word	writing
 1466              		.cfi_endproc
 1467              	.LFE1192:
 1469              		.text
 1470              	.Letext0:
 1471              		.file 6 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1472              		.file 7 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l053xx.h"
 1473              		.file 8 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx
 1474              		.file 9 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h"
 1475              		.file 10 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h"
 1476              		.file 11 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_tim.h"
 1477              		.file 12 "../../libraries/fast_fifo/fifo.h"
ARM GAS  /tmp/ccpZN1QB.s 			page 106


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ble_uart.c
     /tmp/ccpZN1QB.s:16     .text.__NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccpZN1QB.s:23     .text.__NVIC_EnableIRQ:0000000000000000 __NVIC_EnableIRQ
     /tmp/ccpZN1QB.s:70     .text.__NVIC_EnableIRQ:0000000000000030 $d
     /tmp/ccpZN1QB.s:75     .text.__NVIC_SetPriority:0000000000000000 $t
     /tmp/ccpZN1QB.s:81     .text.__NVIC_SetPriority:0000000000000000 __NVIC_SetPriority
     /tmp/ccpZN1QB.s:238    .text.__NVIC_SetPriority:00000000000000d4 $d
     /tmp/ccpZN1QB.s:244    .text.LL_APB1_GRP1_EnableClock:0000000000000000 $t
     /tmp/ccpZN1QB.s:250    .text.LL_APB1_GRP1_EnableClock:0000000000000000 LL_APB1_GRP1_EnableClock
     /tmp/ccpZN1QB.s:291    .text.LL_APB1_GRP1_EnableClock:0000000000000028 $d
     /tmp/ccpZN1QB.s:296    .text.LL_IOP_GRP1_EnableClock:0000000000000000 $t
     /tmp/ccpZN1QB.s:302    .text.LL_IOP_GRP1_EnableClock:0000000000000000 LL_IOP_GRP1_EnableClock
     /tmp/ccpZN1QB.s:342    .text.LL_IOP_GRP1_EnableClock:0000000000000028 $d
     /tmp/ccpZN1QB.s:347    .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/ccpZN1QB.s:350    .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
     /tmp/ccpZN1QB.s:353    .text.LL_LPUART_Enable:0000000000000000 $t
     /tmp/ccpZN1QB.s:359    .text.LL_LPUART_Enable:0000000000000000 LL_LPUART_Enable
     /tmp/ccpZN1QB.s:392    .text.LL_LPUART_IsActiveFlag_RXNE:0000000000000000 $t
     /tmp/ccpZN1QB.s:398    .text.LL_LPUART_IsActiveFlag_RXNE:0000000000000000 LL_LPUART_IsActiveFlag_RXNE
     /tmp/ccpZN1QB.s:438    .text.LL_LPUART_IsActiveFlag_TC:0000000000000000 $t
     /tmp/ccpZN1QB.s:444    .text.LL_LPUART_IsActiveFlag_TC:0000000000000000 LL_LPUART_IsActiveFlag_TC
     /tmp/ccpZN1QB.s:484    .text.LL_LPUART_ClearFlag_NE:0000000000000000 $t
     /tmp/ccpZN1QB.s:490    .text.LL_LPUART_ClearFlag_NE:0000000000000000 LL_LPUART_ClearFlag_NE
     /tmp/ccpZN1QB.s:519    .text.LL_LPUART_ClearFlag_TC:0000000000000000 $t
     /tmp/ccpZN1QB.s:525    .text.LL_LPUART_ClearFlag_TC:0000000000000000 LL_LPUART_ClearFlag_TC
     /tmp/ccpZN1QB.s:554    .text.LL_LPUART_EnableIT_RXNE:0000000000000000 $t
     /tmp/ccpZN1QB.s:560    .text.LL_LPUART_EnableIT_RXNE:0000000000000000 LL_LPUART_EnableIT_RXNE
     /tmp/ccpZN1QB.s:643    .text.LL_LPUART_EnableIT_TC:0000000000000000 $t
     /tmp/ccpZN1QB.s:649    .text.LL_LPUART_EnableIT_TC:0000000000000000 LL_LPUART_EnableIT_TC
     /tmp/ccpZN1QB.s:731    .text.LL_LPUART_ReceiveData8:0000000000000000 $t
     /tmp/ccpZN1QB.s:737    .text.LL_LPUART_ReceiveData8:0000000000000000 LL_LPUART_ReceiveData8
     /tmp/ccpZN1QB.s:767    .text.LL_LPUART_TransmitData8:0000000000000000 $t
     /tmp/ccpZN1QB.s:773    .text.LL_LPUART_TransmitData8:0000000000000000 LL_LPUART_TransmitData8
     /tmp/ccpZN1QB.s:806    .rodata.OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/ccpZN1QB.s:809    .rodata.OFFSET_TAB_CCMRx:0000000000000000 OFFSET_TAB_CCMRx
     /tmp/ccpZN1QB.s:812    .rodata.SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/ccpZN1QB.s:815    .rodata.SHIFT_TAB_OCxx:0000000000000000 SHIFT_TAB_OCxx
     /tmp/ccpZN1QB.s:818    .rodata.SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/ccpZN1QB.s:821    .rodata.SHIFT_TAB_ICxx:0000000000000000 SHIFT_TAB_ICxx
     /tmp/ccpZN1QB.s:824    .rodata.SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/ccpZN1QB.s:827    .rodata.SHIFT_TAB_CCxP:0000000000000000 SHIFT_TAB_CCxP
     /tmp/ccpZN1QB.s:830    .bss.rx_buffer:0000000000000000 $d
     /tmp/ccpZN1QB.s:833    .bss.rx_buffer:0000000000000000 rx_buffer
     /tmp/ccpZN1QB.s:836    .bss.tx_buffer:0000000000000000 $d
     /tmp/ccpZN1QB.s:839    .bss.tx_buffer:0000000000000000 tx_buffer
     /tmp/ccpZN1QB.s:842    .bss.rx_fifo:0000000000000000 $d
     /tmp/ccpZN1QB.s:845    .bss.rx_fifo:0000000000000000 rx_fifo
     /tmp/ccpZN1QB.s:848    .bss.tx_fifo:0000000000000000 $d
     /tmp/ccpZN1QB.s:851    .bss.tx_fifo:0000000000000000 tx_fifo
     /tmp/ccpZN1QB.s:856    .bss.writing:0000000000000000 writing
     /tmp/ccpZN1QB.s:857    .bss.writing:0000000000000000 $d
     /tmp/ccpZN1QB.s:859    .text.uart_init:0000000000000000 $t
     /tmp/ccpZN1QB.s:865    .text.uart_init:0000000000000000 uart_init
     /tmp/ccpZN1QB.s:994    .text.uart_init:00000000000000c8 $d
     /tmp/ccpZN1QB.s:1000   .text.tx:0000000000000000 $t
     /tmp/ccpZN1QB.s:1006   .text.tx:0000000000000000 tx
ARM GAS  /tmp/ccpZN1QB.s 			page 107


     /tmp/ccpZN1QB.s:1051   .text.tx:0000000000000034 $d
     /tmp/ccpZN1QB.s:1058   .text.ble_uart_is_writing:0000000000000000 $t
     /tmp/ccpZN1QB.s:1065   .text.ble_uart_is_writing:0000000000000000 ble_uart_is_writing
     /tmp/ccpZN1QB.s:1088   .text.ble_uart_is_writing:0000000000000010 $d
     /tmp/ccpZN1QB.s:1093   .text.ble_uart_write:0000000000000000 $t
     /tmp/ccpZN1QB.s:1100   .text.ble_uart_write:0000000000000000 ble_uart_write
     /tmp/ccpZN1QB.s:1190   .text.ble_uart_write:0000000000000048 $d
     /tmp/ccpZN1QB.s:1196   .text.ble_uart_read:0000000000000000 $t
     /tmp/ccpZN1QB.s:1203   .text.ble_uart_read:0000000000000000 ble_uart_read
     /tmp/ccpZN1QB.s:1285   .text.ble_uart_read:000000000000003c $d
     /tmp/ccpZN1QB.s:1290   .text.ble_uart_init:0000000000000000 $t
     /tmp/ccpZN1QB.s:1297   .text.ble_uart_init:0000000000000000 ble_uart_init
     /tmp/ccpZN1QB.s:1333   .text.ble_uart_init:000000000000002c $d
     /tmp/ccpZN1QB.s:1341   .text.RNG_LPUART1_IRQHandler:0000000000000000 $t
     /tmp/ccpZN1QB.s:1348   .text.RNG_LPUART1_IRQHandler:0000000000000000 RNG_LPUART1_IRQHandler
     /tmp/ccpZN1QB.s:1463   .text.RNG_LPUART1_IRQHandler:0000000000000074 $d
                           .group:0000000000000000 wm4.0.0ccbabe563133fc225e2d8e0f610ba9f
                           .group:0000000000000000 wm4.stdint.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.ble_uart.h.7.0b32560d3dbdc3997dde02505c6c1d29
                           .group:0000000000000000 wm4.stm32l0xx.h.41.7b64cc93e03e8878c239b019b0203858
                           .group:0000000000000000 wm4.stm32l053xx.h.37.ca2b7421d255c88f6356eb3a3a2ee1bf
                           .group:0000000000000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:0000000000000000 wm4.core_cm0plus.h.66.bb83319bcb10b4c5f12c477f85f2aa51
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.ee5bffeddf1dfc3eae08637d3a2ff2e9
                           .group:0000000000000000 wm4.core_cm0plus.h.127.cfee784d07c850b645554dc8add78e69
                           .group:0000000000000000 wm4.mpu_armv7.h.32.27b4593cb2f8d3152ca5d97a9d72b321
                           .group:0000000000000000 wm4.stm32l053xx.h.614.694649dd621f0085702f358f34f2e881
                           .group:0000000000000000 wm4.stm32l0xx.h.181.12fc143042e31117baaa7481c9b3a4da
                           .group:0000000000000000 wm4.stm32l0xx_ll_adc.h.53.91d59053932c36ec7ab0113730073858
                           .group:0000000000000000 wm4.stm32l0xx_ll_bus.h.39.0510174e5f715ad27b7a3ab14a00f67f
                           .group:0000000000000000 wm4.stm32l0xx_ll_cortex.h.36.79806d0582701c757eec56b9283c8db9
                           .group:0000000000000000 wm4.stm32l0xx_ll_dma.h.22.2c7ed561e963f82ffce8c2bce65b6553
                           .group:0000000000000000 wm4.stm32l0xx_ll_exti.h.22.40dada7a5d00275d94259df1c6059451
                           .group:0000000000000000 wm4.stm32l0xx_ll_gpio.h.22.2d480da0be320d9dd6c23b35850d228e
                           .group:0000000000000000 wm4.stm32l0xx_ll_i2c.h.22.725accc0a52325f50ab3a978af524a24
                           .group:0000000000000000 wm4.stm32l0xx_ll_lpuart.h.22.6020d530b61d554b81cf28e59330a90d
                           .group:0000000000000000 wm4.stm32l0xx_ll_pwr.h.22.37f0d8ce0f44f5122f24332e7c6edbd0
                           .group:0000000000000000 wm4.stm32l0xx_ll_rcc.h.22.3a6b3922d12b176ce51cb12e1f8867c4
                           .group:0000000000000000 wm4.stm32l0xx_ll_system.h.34.d04c425d3668e616038a98754635b261
                           .group:0000000000000000 wm4.stm32l0xx_ll_tim.h.22.59fb8166bd8c25f1f07b60ae6d7944da
                           .group:0000000000000000 wm4.stm32l0xx_ll_usart.h.22.15bd106c8b738649c65f9703ee30f935
                           .group:0000000000000000 wm4.stm32l0xx_ll_utils.h.34.15360273e66a16baad8d70fb7aab35d9
                           .group:0000000000000000 wm4.nucleo_board.h.19.e3019b1074b7ca9a1ad379de5c504b44
                           .group:0000000000000000 wm4.common.h.9.9862d16395f6d712cb62bb1aea663ff0

UNDEFINED SYMBOLS
memset
LL_GPIO_Init
LL_LPUART_Init
fifo_pop
fifo_push
fifo_init
