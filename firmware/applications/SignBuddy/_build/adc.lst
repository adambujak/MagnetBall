ARM GAS  /tmp/cctetIQd.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.__NVIC_EnableIRQ,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	__NVIC_EnableIRQ:
  24              	.LFB25:
  25              		.file 1 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h"
   1:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**************************************************************************//**
   2:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * @file     core_cm0plus.h
   3:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * @brief    CMSIS Cortex-M0+ Core Peripheral Access Layer Header File
   4:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * @version  V5.0.6
   5:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * @date     28. May 2018
   6:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
   7:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*
   8:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *
  10:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *
  12:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * not use this file except in compliance with the License.
  14:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * You may obtain a copy of the License at
  15:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *
  16:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *
  18:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * See the License for the specific language governing permissions and
  22:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * limitations under the License.
  23:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
  24:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  25:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if   defined ( __ICCARM__ )
  26:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined (__clang__)
  28:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
  30:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  31:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_GENERIC
  32:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_GENERIC
  33:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/cctetIQd.s 			page 2


  34:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #include <stdint.h>
  35:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  36:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
  37:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  extern "C" {
  38:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
  39:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  40:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
  41:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  44:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  47:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****      Unions are used for effective representation of core registers.
  49:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  50:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****      Function-like macros are used to allow more efficient code.
  52:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
  53:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  54:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  55:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
  56:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *                 CMSIS definitions
  57:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
  58:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
  59:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup Cortex-M0+
  60:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
  61:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
  62:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  63:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #include "cmsis_version.h"
  64:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  
  65:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*  CMSIS CM0+ definitions */
  66:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_MAIN (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [3
  67:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_SUB  (__CM_CMSIS_VERSION_SUB)                   /*!< \deprecated [1
  68:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION      ((__CM0PLUS_CMSIS_VERSION_MAIN << 16U) | \
  69:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****                                        __CM0PLUS_CMSIS_VERSION_SUB           )  /*!< \deprecated CM
  70:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  71:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORTEX_M                   (0U)                                       /*!< Cortex-M Core 
  72:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  73:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     This core does not support an FPU at all
  75:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
  76:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __FPU_USED       0U
  77:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  78:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined ( __CC_ARM )
  79:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __TARGET_FPU_VFP
  80:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  82:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  83:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __ARM_PCS_VFP
  85:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  87:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  88:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __GNUC__ )
  89:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
ARM GAS  /tmp/cctetIQd.s 			page 3


  91:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  92:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  93:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __ICCARM__ )
  94:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __ARMVFP__
  95:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  97:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  98:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TI_ARM__ )
  99:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __TI_VFP_SUPPORT__
 100:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 102:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 103:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TASKING__ )
 104:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __FPU_VFP__
 105:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 107:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 108:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __CSMC__ )
 109:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if ( __CSMC__ & 0x400U)
 110:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 112:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 113:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 114:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 115:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 117:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 118:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 119:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 120:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 121:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 122:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif /* __CORE_CM0PLUS_H_GENERIC */
 123:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 124:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CMSIS_GENERIC
 125:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 126:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_DEPENDANT
 127:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_DEPENDANT
 128:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 129:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 130:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  extern "C" {
 131:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 132:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 133:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* check device defines and use defaults */
 134:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined __CHECK_DEVICE_DEFINES
 135:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __CM0PLUS_REV
 136:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __CM0PLUS_REV             0x0000U
 137:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__CM0PLUS_REV not defined in device header file; using default!"
 138:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 139:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 140:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __MPU_PRESENT
 141:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __MPU_PRESENT             0U
 142:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 143:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 144:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 145:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __VTOR_PRESENT
 146:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __VTOR_PRESENT            0U
 147:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
ARM GAS  /tmp/cctetIQd.s 			page 4


 148:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 149:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 150:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __NVIC_PRIO_BITS
 151:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __NVIC_PRIO_BITS          2U
 152:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 153:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 154:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 155:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __Vendor_SysTickConfig
 156:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __Vendor_SysTickConfig    0U
 157:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 158:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 159:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 160:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 161:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* IO definitions (access restrictions to peripheral registers) */
 162:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 163:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 164:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 165:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     <strong>IO Type Qualifiers</strong> are used
 166:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     \li to specify the access to peripheral variables.
 167:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     \li for automatic generation of peripheral register debug information.
 168:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 169:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 170:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 171:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #else
 172:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 173:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 174:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 175:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 176:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 177:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* following defines should be used for structure members */
 178:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 179:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 180:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 181:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 182:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group Cortex-M0+ */
 183:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 184:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 185:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 186:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 187:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *                 Register Abstraction
 188:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   Core Register contain:
 189:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core Register
 190:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Register
 191:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SCB Register
 192:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Register
 193:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core MPU Register
 194:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 195:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 196:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 197:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 198:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 199:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 200:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 201:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 202:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 203:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Core Register type definitions.
 204:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
ARM GAS  /tmp/cctetIQd.s 			page 5


 205:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 206:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 207:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 208:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 209:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 210:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 211:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 212:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 213:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 214:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 215:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 216:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 217:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 218:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 219:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 220:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 221:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } APSR_Type;
 222:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 223:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* APSR Register Definitions */
 224:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 225:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 226:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 227:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 228:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 229:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 230:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 231:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 232:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 233:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 234:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 235:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 236:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 237:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 238:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 239:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 240:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 241:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 242:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 243:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 244:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 245:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 246:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 247:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 248:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } IPSR_Type;
 249:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 250:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* IPSR Register Definitions */
 251:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 252:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 253:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 254:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 255:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 256:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 257:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 258:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 259:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 260:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 261:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
ARM GAS  /tmp/cctetIQd.s 			page 6


 262:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 263:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 264:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 265:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 266:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 267:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 268:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 269:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 270:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 271:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 272:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } xPSR_Type;
 273:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 274:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* xPSR Register Definitions */
 275:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 276:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 277:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 278:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 279:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 280:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 281:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 282:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 283:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 284:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 285:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 286:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 287:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 288:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 289:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 290:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 291:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 292:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 293:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 294:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 295:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Control Registers (CONTROL).
 296:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 297:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 298:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 299:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 300:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 301:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 302:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 303:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 304:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 305:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } CONTROL_Type;
 307:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 308:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* CONTROL Register Definitions */
 309:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 310:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 311:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 312:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 313:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 314:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 315:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CORE */
 316:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 317:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 318:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
ARM GAS  /tmp/cctetIQd.s 			page 7


 319:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 320:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 321:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Type definitions for the NVIC Registers
 322:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 323:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 324:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 325:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 326:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 327:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 328:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 329:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 330:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 331:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0[31U];
 332:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 333:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RSERVED1[31U];
 334:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 335:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED2[31U];
 336:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 337:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED3[31U];
 338:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED4[64U];
 339:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 340:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }  NVIC_Type;
 341:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 342:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_NVIC */
 343:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 344:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 345:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 346:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 347:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 348:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Control Block Registers
 349:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 350:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 351:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 352:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 353:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Control Block (SCB).
 354:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 355:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 356:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 357:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 358:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 359:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 360:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 361:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #else
 362:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0;
 363:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 364:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 365:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 366:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 367:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED1;
 368:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 369:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 370:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } SCB_Type;
 371:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 372:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB CPUID Register Definitions */
 373:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 374:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 375:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/cctetIQd.s 			page 8


 376:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 377:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 378:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 379:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 380:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 381:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 382:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 383:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 384:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 385:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 386:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 387:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 388:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 389:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 390:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 391:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 392:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 393:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 394:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 395:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 396:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 397:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 398:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 399:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 400:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 401:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 402:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 403:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 404:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 405:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 406:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 407:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 408:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 409:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 410:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 411:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 412:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 413:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 414:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 415:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 416:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 417:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 418:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Pos                 8U                                            /*!< SCB 
 419:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Msk                (0xFFFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 420:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 421:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 422:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 423:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 424:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 425:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 426:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 427:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 428:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 429:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 430:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 431:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 432:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
ARM GAS  /tmp/cctetIQd.s 			page 9


 433:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 434:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 435:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 436:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 437:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 438:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB System Control Register Definitions */
 439:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 440:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 441:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 442:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 443:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 444:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 445:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 446:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 447:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 448:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Configuration Control Register Definitions */
 449:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 450:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 451:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 452:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 453:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 454:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 455:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB System Handler Control and State Register Definitions */
 456:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 457:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 458:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 459:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SCB */
 460:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 461:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 462:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 463:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 464:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 465:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Timer Registers.
 466:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 467:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 468:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 469:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 470:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Timer (SysTick).
 471:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 472:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 473:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 474:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 475:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 476:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 477:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 478:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } SysTick_Type;
 479:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 480:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Control / Status Register Definitions */
 481:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 482:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 483:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 484:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 485:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 486:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 487:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 488:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 489:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/cctetIQd.s 			page 10


 490:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 491:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 492:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 493:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Reload Register Definitions */
 494:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 495:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 496:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 497:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Current Register Definitions */
 498:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 499:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 500:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 501:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Calibration Register Definitions */
 502:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 503:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 504:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 505:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 506:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 507:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 508:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 509:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 510:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 511:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SysTick */
 512:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 513:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 514:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 515:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 516:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
 517:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
 518:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 519:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 520:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 521:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 522:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
 523:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 524:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 525:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 526:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
 527:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
 528:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
 529:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 530:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 531:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } MPU_Type;
 532:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 533:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_RALIASES                  1U
 534:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 535:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Type Register Definitions */
 536:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
 537:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 538:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 539:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
 540:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 541:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 542:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
 543:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
 544:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 545:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Control Register Definitions */
 546:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
ARM GAS  /tmp/cctetIQd.s 			page 11


 547:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 548:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 549:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
 550:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 551:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 552:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
 553:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
 554:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 555:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Number Register Definitions */
 556:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
 557:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
 558:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 559:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Base Address Register Definitions */
 560:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Pos                   8U                                            /*!< MPU 
 561:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Msk                  (0xFFFFFFUL << MPU_RBAR_ADDR_Pos)              /*!< MPU 
 562:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 563:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
 564:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 565:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 566:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
 567:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
 568:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 569:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Attribute and Size Register Definitions */
 570:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
 571:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
 572:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 573:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
 574:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
 575:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 576:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
 577:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
 578:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 579:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
 580:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
 581:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 582:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
 583:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
 584:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 585:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
 586:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
 587:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 588:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
 589:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
 590:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 591:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
 592:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 593:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 594:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
 595:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 596:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 597:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
 598:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
 599:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 600:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_MPU */
 601:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 602:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 603:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/cctetIQd.s 			page 12


 604:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 605:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 606:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 607:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Cortex-M0+ Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ov
 608:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****             Therefore they are not covered by the Cortex-M0+ header file.
 609:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 610:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 611:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CoreDebug */
 612:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 613:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 614:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 615:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 616:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 617:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 618:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 619:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 620:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 621:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 622:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 623:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 624:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 625:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted value.
 626:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 627:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 628:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 629:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 630:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 631:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 632:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 633:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted bit field value.
 634:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 635:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 636:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 637:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_core_bitfield */
 638:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 639:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 640:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 641:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 642:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_base     Core Definitions
 643:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Definitions for base addresses, unions, and structures.
 644:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 645:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 646:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 647:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* Memory mapping of Core Hardware */
 648:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 649:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 650:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 651:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 652:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 653:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 654:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 655:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 656:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 657:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 658:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
 659:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
 660:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
ARM GAS  /tmp/cctetIQd.s 			page 13


 661:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 662:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} */
 663:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 664:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 665:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 666:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 667:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *                Hardware Abstraction Layer
 668:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   Core Function Interface contains:
 669:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Functions
 670:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Functions
 671:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core Register Access Functions
 672:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 673:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 674:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 675:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 676:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 677:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 678:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 679:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* ##########################   NVIC functions  #################################### */
 680:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 681:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_Core_FunctionInterface
 682:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 683:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 684:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 685:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 686:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 687:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef CMSIS_NVIC_VIRTUAL
 688:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 689:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 690:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 691:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 692:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #else
 693:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 694:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 695:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 696:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 697:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 698:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 699:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 700:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 701:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0+ */
 702:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 703:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 704:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 705:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 706:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 707:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 708:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 709:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 710:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 711:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 712:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #else
 713:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetVector              __NVIC_SetVector
 714:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetVector              __NVIC_GetVector
 715:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 716:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 717:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC_USER_IRQ_OFFSET          16
ARM GAS  /tmp/cctetIQd.s 			page 14


 718:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 719:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 720:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 721:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 722:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 723:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 724:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 725:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 726:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 727:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* The following MACROS handle generation of the register offset and byte masks */
 728:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 729:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 730:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 731:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 732:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 733:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 734:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 735:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 736:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Enable Interrupt
 737:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 738:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 739:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 740:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 741:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 742:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
  26              		.loc 1 742 1
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 82B0     		sub	sp, sp, #8
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 0200     		movs	r2, r0
  39 0008 FB1D     		adds	r3, r7, #7
  40 000a 1A70     		strb	r2, [r3]
 743:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
  41              		.loc 1 743 6
  42 000c FB1D     		adds	r3, r7, #7
  43 000e 1B78     		ldrb	r3, [r3]
  44 0010 7F2B     		cmp	r3, #127
  45 0012 09D8     		bhi	.L3
 744:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 745:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  46              		.loc 1 745 58
  47 0014 FB1D     		adds	r3, r7, #7
  48 0016 1B78     		ldrb	r3, [r3]
  49 0018 1A00     		movs	r2, r3
  50 001a 1F23     		movs	r3, #31
  51 001c 1A40     		ands	r2, r3
  52              		.loc 1 745 9
  53 001e 044B     		ldr	r3, .L4
  54              		.loc 1 745 22
ARM GAS  /tmp/cctetIQd.s 			page 15


  55 0020 0121     		movs	r1, #1
  56 0022 9140     		lsls	r1, r1, r2
  57 0024 0A00     		movs	r2, r1
  58              		.loc 1 745 20
  59 0026 1A60     		str	r2, [r3]
  60              	.L3:
 746:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 747:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
  61              		.loc 1 747 1
  62 0028 C046     		nop
  63 002a BD46     		mov	sp, r7
  64 002c 02B0     		add	sp, sp, #8
  65              		@ sp needed
  66 002e 80BD     		pop	{r7, pc}
  67              	.L5:
  68              		.align	2
  69              	.L4:
  70 0030 00E100E0 		.word	-536813312
  71              		.cfi_endproc
  72              	.LFE25:
  74              		.section	.text.__NVIC_SetPriority,"ax",%progbits
  75              		.align	1
  76              		.syntax unified
  77              		.code	16
  78              		.thumb_func
  79              		.fpu softvfp
  81              	__NVIC_SetPriority:
  82              	.LFB31:
 748:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 749:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 750:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 751:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Get Interrupt Enable status
 752:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 753:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 754:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return             0  Interrupt is not enabled.
 755:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return             1  Interrupt is enabled.
 756:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 757:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 758:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 759:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 760:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 761:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 762:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 763:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 764:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   else
 765:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 766:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     return(0U);
 767:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 768:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 769:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 770:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 771:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 772:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Disable Interrupt
 773:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 774:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 775:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 776:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
ARM GAS  /tmp/cctetIQd.s 			page 16


 777:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 778:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 779:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 780:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 781:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 782:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     __DSB();
 783:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     __ISB();
 784:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 785:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 786:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 787:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 788:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 789:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Get Pending Interrupt
 790:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 791:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 792:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return             0  Interrupt status is not pending.
 793:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return             1  Interrupt status is pending.
 794:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 795:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 796:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 797:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 798:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 799:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 800:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 801:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 802:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   else
 803:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 804:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     return(0U);
 805:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 806:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 807:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 808:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 809:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 810:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Set Pending Interrupt
 811:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
 812:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 813:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 814:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 815:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 816:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 817:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 818:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 819:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 820:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 821:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 822:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 823:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 824:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 825:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Clear Pending Interrupt
 826:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 827:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 828:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 829:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 830:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 831:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 832:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 833:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
ARM GAS  /tmp/cctetIQd.s 			page 17


 834:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 835:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 836:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 837:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 838:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 839:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 840:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Set Interrupt Priority
 841:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
 842:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****            The interrupt number can be positive to specify a device specific interrupt,
 843:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****            or negative to specify a processor exception.
 844:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Interrupt number.
 845:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]  priority  Priority to set.
 846:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    The priority cannot be set for every processor exception.
 847:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 848:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 849:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
  83              		.loc 1 849 1
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 8
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87 0000 90B5     		push	{r4, r7, lr}
  88              		.cfi_def_cfa_offset 12
  89              		.cfi_offset 4, -12
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 83B0     		sub	sp, sp, #12
  93              		.cfi_def_cfa_offset 24
  94 0004 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
  96 0006 0200     		movs	r2, r0
  97 0008 3960     		str	r1, [r7]
  98 000a FB1D     		adds	r3, r7, #7
  99 000c 1A70     		strb	r2, [r3]
 850:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 100              		.loc 1 850 6
 101 000e FB1D     		adds	r3, r7, #7
 102 0010 1B78     		ldrb	r3, [r3]
 103 0012 7F2B     		cmp	r3, #127
 104 0014 28D8     		bhi	.L7
 851:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 105              		.loc 1 852 48
 106 0016 2F4A     		ldr	r2, .L10
 107              		.loc 1 852 53
 108 0018 FB1D     		adds	r3, r7, #7
 109 001a 1B78     		ldrb	r3, [r3]
 110 001c 5BB2     		sxtb	r3, r3
 111 001e 9B08     		lsrs	r3, r3, #2
 112              		.loc 1 852 52
 113 0020 C033     		adds	r3, r3, #192
 114 0022 9B00     		lsls	r3, r3, #2
 115 0024 9B58     		ldr	r3, [r3, r2]
 116              		.loc 1 852 83
 117 0026 FA1D     		adds	r2, r7, #7
 118 0028 1278     		ldrb	r2, [r2]
 119 002a 1100     		movs	r1, r2
 120 002c 0322     		movs	r2, #3
ARM GAS  /tmp/cctetIQd.s 			page 18


 121 002e 0A40     		ands	r2, r1
 122 0030 D200     		lsls	r2, r2, #3
 123              		.loc 1 852 80
 124 0032 FF21     		movs	r1, #255
 125 0034 9140     		lsls	r1, r1, r2
 126 0036 0A00     		movs	r2, r1
 127              		.loc 1 852 71
 128 0038 D243     		mvns	r2, r2
 129              		.loc 1 852 33
 130 003a 1A40     		ands	r2, r3
 131 003c 1100     		movs	r1, r2
 853:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 132              		.loc 1 853 20
 133 003e 3B68     		ldr	r3, [r7]
 134 0040 9B01     		lsls	r3, r3, #6
 135              		.loc 1 853 48
 136 0042 FF22     		movs	r2, #255
 137 0044 1A40     		ands	r2, r3
 138              		.loc 1 853 71
 139 0046 FB1D     		adds	r3, r7, #7
 140 0048 1B78     		ldrb	r3, [r3]
 141 004a 1800     		movs	r0, r3
 142 004c 0323     		movs	r3, #3
 143 004e 0340     		ands	r3, r0
 144 0050 DB00     		lsls	r3, r3, #3
 145              		.loc 1 853 68
 146 0052 9A40     		lsls	r2, r2, r3
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 147              		.loc 1 852 9
 148 0054 1F48     		ldr	r0, .L10
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 149              		.loc 1 852 14
 150 0056 FB1D     		adds	r3, r7, #7
 151 0058 1B78     		ldrb	r3, [r3]
 152 005a 5BB2     		sxtb	r3, r3
 153 005c 9B08     		lsrs	r3, r3, #2
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 154              		.loc 1 852 102
 155 005e 0A43     		orrs	r2, r1
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 156              		.loc 1 852 30
 157 0060 C033     		adds	r3, r3, #192
 158 0062 9B00     		lsls	r3, r3, #2
 159 0064 1A50     		str	r2, [r3, r0]
 854:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 855:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   else
 856:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 859:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 860:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 160              		.loc 1 860 1
 161 0066 31E0     		b	.L9
 162              	.L7:
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 163              		.loc 1 857 47
 164 0068 1B4A     		ldr	r2, .L10+4
ARM GAS  /tmp/cctetIQd.s 			page 19


 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 165              		.loc 1 857 53
 166 006a FB1D     		adds	r3, r7, #7
 167 006c 1B78     		ldrb	r3, [r3]
 168 006e 1900     		movs	r1, r3
 169 0070 0F23     		movs	r3, #15
 170 0072 0B40     		ands	r3, r1
 171 0074 083B     		subs	r3, r3, #8
 172 0076 9B08     		lsrs	r3, r3, #2
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 173              		.loc 1 857 52
 174 0078 0633     		adds	r3, r3, #6
 175 007a 9B00     		lsls	r3, r3, #2
 176 007c D318     		adds	r3, r2, r3
 177 007e 0433     		adds	r3, r3, #4
 178 0080 1B68     		ldr	r3, [r3]
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 179              		.loc 1 857 83
 180 0082 FA1D     		adds	r2, r7, #7
 181 0084 1278     		ldrb	r2, [r2]
 182 0086 1100     		movs	r1, r2
 183 0088 0322     		movs	r2, #3
 184 008a 0A40     		ands	r2, r1
 185 008c D200     		lsls	r2, r2, #3
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 186              		.loc 1 857 80
 187 008e FF21     		movs	r1, #255
 188 0090 9140     		lsls	r1, r1, r2
 189 0092 0A00     		movs	r2, r1
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 190              		.loc 1 857 71
 191 0094 D243     		mvns	r2, r2
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 192              		.loc 1 857 33
 193 0096 1A40     		ands	r2, r3
 194 0098 1100     		movs	r1, r2
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 195              		.loc 1 858 20
 196 009a 3B68     		ldr	r3, [r7]
 197 009c 9B01     		lsls	r3, r3, #6
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 198              		.loc 1 858 48
 199 009e FF22     		movs	r2, #255
 200 00a0 1A40     		ands	r2, r3
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 201              		.loc 1 858 71
 202 00a2 FB1D     		adds	r3, r7, #7
 203 00a4 1B78     		ldrb	r3, [r3]
 204 00a6 1800     		movs	r0, r3
 205 00a8 0323     		movs	r3, #3
 206 00aa 0340     		ands	r3, r0
 207 00ac DB00     		lsls	r3, r3, #3
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 208              		.loc 1 858 68
 209 00ae 9A40     		lsls	r2, r2, r3
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 210              		.loc 1 857 8
ARM GAS  /tmp/cctetIQd.s 			page 20


 211 00b0 0948     		ldr	r0, .L10+4
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 212              		.loc 1 857 14
 213 00b2 FB1D     		adds	r3, r7, #7
 214 00b4 1B78     		ldrb	r3, [r3]
 215 00b6 1C00     		movs	r4, r3
 216 00b8 0F23     		movs	r3, #15
 217 00ba 2340     		ands	r3, r4
 218 00bc 083B     		subs	r3, r3, #8
 219 00be 9B08     		lsrs	r3, r3, #2
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 220              		.loc 1 857 102
 221 00c0 0A43     		orrs	r2, r1
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 222              		.loc 1 857 30
 223 00c2 0633     		adds	r3, r3, #6
 224 00c4 9B00     		lsls	r3, r3, #2
 225 00c6 C318     		adds	r3, r0, r3
 226 00c8 0433     		adds	r3, r3, #4
 227 00ca 1A60     		str	r2, [r3]
 228              	.L9:
 229              		.loc 1 860 1
 230 00cc C046     		nop
 231 00ce BD46     		mov	sp, r7
 232 00d0 03B0     		add	sp, sp, #12
 233              		@ sp needed
 234 00d2 90BD     		pop	{r4, r7, pc}
 235              	.L11:
 236              		.align	2
 237              	.L10:
 238 00d4 00E100E0 		.word	-536813312
 239 00d8 00ED00E0 		.word	-536810240
 240              		.cfi_endproc
 241              	.LFE31:
 243              		.section	.text.LL_ADC_SetClock,"ax",%progbits
 244              		.align	1
 245              		.syntax unified
 246              		.code	16
 247              		.thumb_func
 248              		.fpu softvfp
 250              	LL_ADC_SetClock:
 251              	.LFB54:
 252              		.file 2 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h"
   1:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
   2:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ******************************************************************************
   3:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @file    stm32l0xx_ll_adc.h
   4:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @author  MCD Application Team
   5:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ******************************************************************************
   7:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @attention
   8:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
   9:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * <h2><center>&copy; Copyright(c) 2016 STMicroelectronics.
  10:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
  12:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * License. You may obtain a copy of the License at:
ARM GAS  /tmp/cctetIQd.s 			page 21


  15:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
  17:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ******************************************************************************
  18:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  19:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  20:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #ifndef __STM32L0xx_LL_ADC_H
  22:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __STM32L0xx_LL_ADC_H
  23:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  24:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #ifdef __cplusplus
  25:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** extern "C" {
  26:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
  27:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  28:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #include "stm32l0xx.h"
  30:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  31:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @addtogroup STM32L0xx_LL_Driver
  32:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
  33:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  34:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  35:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (ADC1)
  36:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  37:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  38:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
  39:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  40:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  41:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  44:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
  47:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
  48:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  49:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  50:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  51:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - regular trigger source                                                   */
  52:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - regular trigger edge                                                     */
  53:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge 
  54:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  55:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  56:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  57:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  58:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U 
  59:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  60:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  61:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  62:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  63:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  64:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  65:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  66:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U *
  67:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  68:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  69:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  70:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  71:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
ARM GAS  /tmp/cctetIQd.s 			page 22


  72:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  (6U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_EXTSE
  73:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_EXTE
  74:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  75:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  76:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  77:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  78:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  79:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - channel identifier defined by number                                     */
  80:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
  81:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
  82:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
  83:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWDCH)
  84:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
  85:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26U)/* Value equivalent to POSITION_VAL(ADC_CHANNEL_ID
  86:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
  87:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
  88:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FU) /* Equivalent to shift: (ADC_CHANNEL_NUMBE
  89:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  90:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
  91:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000U) /* Marker of internal channel */
  92:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
  93:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
  94:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
  95:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* channels literals definition.                                              */
  96:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000U)
  97:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
  98:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
  99:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
 100:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                        ADC_CFGR1_AWDCH
 101:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                        ADC_CFGR1_AWDCH
 102:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                        ADC_CFGR1_AWDCH
 103:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                        ADC_CFGR1_AWDCH
 104:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                    ADC_CFGR1_AWDCH_3                  
 105:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                    ADC_CFGR1_AWDCH_3                  
 106:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                    ADC_CFGR1_AWDCH_3                  
 107:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                    ADC_CFGR1_AWDCH_3                  
 108:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 109:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 110:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 111:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                    ADC_CFGR1_AWDCH_3 | ADC_CFGR1_AWDCH
 112:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWDCH_4                                      
 113:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWDCH_4                                      
 114:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWDCH_4                                      
 115:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 116:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 117:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* channels literals definition.                                              */
 118:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 119:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 120:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 121:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 122:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 123:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 124:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 125:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 126:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 127:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 128:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
ARM GAS  /tmp/cctetIQd.s 			page 23


 129:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 130:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 131:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 132:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 133:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 134:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if  defined(ADC_CCR_VLCDEN)
 135:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 136:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 137:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 138:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_CHSELR_CHSEL18)
 139:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 140:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 141:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 142:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 143:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 144:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 145:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 146:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 147:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 148:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000U)
 149:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 150:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET)
 151:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 152:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL)
 153:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK)
 154:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 155:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 156:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 157:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET)
 158:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 159:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 160:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC registers bits positions */
 161:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        (3U)  /* Value equivalent to POSITION_VAL(ADC_CFGR1_RES)
 162:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22U) /* Value equivalent to POSITION_VAL(ADC_CFGR1_AWDS
 163:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_TR_HT_BITOFFSET_POS            (16U) /* Value equivalent to POSITION_VAL(ADC_TR_HT) */
 164:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    (0U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 165:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    (1U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 166:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    (2U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 167:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    (3U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 168:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    (4U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 169:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    (5U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 170:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    (6U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 171:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    (7U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 172:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    (8U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 173:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    (9U)  /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 174:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 175:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 176:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 177:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 178:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 179:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 180:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if  defined(ADC_CCR_VLCDEN)
 181:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 182:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 183:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 184:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18U) /* Value equivalent to POSITION_VAL(ADC_CHSELR_CHS
 185:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
ARM GAS  /tmp/cctetIQd.s 			page 24


 186:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 187:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC registers bits groups */
 188:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_A
 189:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 190:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 191:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC internal channels related definitions */
 192:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 193:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FF80078U)) /* Internal voltage referenc
 194:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3000U)                     /* Analog voltage reference 
 195:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Temperature sensor */
 196:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L011, calibration parameter TS_CAL1 is not available. */
 197:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L011xx)
 198:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FF8007AU)) /* Internal temperature sens
 199:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 200:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FF8007EU)) /* Internal temperature sens
 201:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L011xx)
 202:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30U)                       /* Internal temperature sens
 203:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 204:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130U)                      /* Internal temperature sens
 205:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000U)                     /* Analog voltage reference 
 206:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 207:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 208:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 209:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 210:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 211:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 212:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 213:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if  defined(USE_FULL_LL_DRIVER)
 214:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 215:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 216:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 217:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 218:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 219:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 220:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 221:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 222:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 223:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 224:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 225:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 226:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 227:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 228:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 229:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 230:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 231:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 232:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 233:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 234:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and multimode
 235:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 236:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 237:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 238:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sharing the same ADC common instance):
 239:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 240:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         disabled.
 241:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 242:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** typedef struct
ARM GAS  /tmp/cctetIQd.s 			page 25


 243:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 244:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 245:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 246:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 247:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 248:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 249:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 250:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 251:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 252:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 253:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 254:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 255:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 256:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 257:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is conditioned to ADC state:
 258:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance must be disabled.
 259:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 260:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 261:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 262:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 263:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 264:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 265:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 266:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         refer to description of each function for setting
 267:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         conditioned to ADC state.
 268:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 269:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** typedef struct
 270:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 271:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 272:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 273:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              @note On this STM32 serie, this parameter has some clo
 274:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    ADC clock synchronous (from PCLK) with prescaler
 275:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    (APB prescaler configured inside the RCC must be
 276:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 277:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 278:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 279:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              For more details, refer to description of this functio
 280:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 281:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 282:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 283:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 284:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 285:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 286:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 287:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 288:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 289:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 290:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 291:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 292:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 293:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 294:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 295:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 296:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 297:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 298:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 299:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
ARM GAS  /tmp/cctetIQd.s 			page 26


 300:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 301:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 302:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 303:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (functions with prefix "REG").
 304:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 305:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is conditioned to ADC state:
 306:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance must be disabled.
 307:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 308:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 309:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 310:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 311:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 312:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 313:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 314:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         refer to description of each function for setting
 315:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         conditioned to ADC state.
 316:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 317:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** typedef struct
 318:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 319:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 320:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 321:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              @note On this STM32 serie, setting trigger source to e
 322:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 323:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 324:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 325:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 326:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 327:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 328:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 329:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 330:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                    (several ADC channels enabled in group regular s
 331:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 332:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 333:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 334:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 335:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 336:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 337:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 338:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 339:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 340:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 341:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 342:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 343:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 344:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 345:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 346:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              data preserved or overwritten.
 347:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 348:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              
 349:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 350:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 351:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 352:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 353:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 354:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 355:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 356:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
ARM GAS  /tmp/cctetIQd.s 			page 27


 357:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 358:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 359:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 360:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 361:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 362:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 363:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 364:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 365:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 366:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 367:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 368:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 369:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 370:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 371:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 372:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD        /*!< ADC flag ADC analog watchdog 1 *
 373:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 374:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 375:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 376:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 377:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 378:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 379:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 380:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 381:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 382:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 383:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 384:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 385:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 386:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 387:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWDIE      /*!< ADC interruption ADC analog watc
 388:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 389:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 390:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 391:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 392:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 393:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 394:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 395:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 396:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 397:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* DMA transfer.                                                              */
 398:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 399:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000U) /* ADC group regular conversion data reg
 400:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 401:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 402:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 403:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 404:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 405:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 406:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 407:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000U)                               /*!< ADC asy
 408:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 409:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 410:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 411:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 412:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 413:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
ARM GAS  /tmp/cctetIQd.s 			page 28


 414:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 415:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 416:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 417:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 418:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 419:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 420:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 421:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 422:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 423:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_FREQ_MODE  ADC common - Clock frequency mode
 424:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 425:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 426:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_HIGH        (0x00000000U)/*!< ADC clock mode to high frequency. On S
 427:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_LOW         (ADC_CCR_LFMEN)        /*!< ADC clock mode to low freque
 428:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 429:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 430:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 431:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 432:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 433:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 434:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 435:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 436:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 437:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 438:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 439:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 440:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000U)/*!< ADC measurement pathes all disabled */
 441:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 442:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_TSEN)
 443:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 444:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 445:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 446:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VLCD          (ADC_CCR_VLCDEN)       /*!< ADC measurement path to inte
 447:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 448:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 449:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 450:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 451:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 452:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 453:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 454:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 455:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1)                                  /*
 456:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0)                                  /*
 457:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 | ADC_CFGR2_CKMODE_0)             /*
 458:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000U)                               /*!< ADC asy
 459:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 460:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 461:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 462:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 463:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 464:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 465:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 466:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000U)             /*!< ADC resolution 12 bits */
 467:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 468:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
 469:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 470:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
ARM GAS  /tmp/cctetIQd.s 			page 29


 471:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 472:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 473:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 474:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 475:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 476:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 477:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000U)/*!< ADC conversion data alignment: right a
 478:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)      /*!< ADC conversion data alignmen
 479:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 480:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 481:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 482:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 483:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 484:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 485:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 486:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000U)             /*!< No ADC low power mode act
 487:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)                    /*!< ADC low power m
 488:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF)                  /*!< ADC low power m
 489:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 490:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 491:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 492:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 493:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 494:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 495:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 496:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 497:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001U) /*!< ADC group regular (available on all S
 498:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 499:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 500:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 501:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 502:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 503:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 504:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 505:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_BITFIELD ) /*!< A
 506:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_BITFIELD ) /*!< A
 507:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_BITFIELD ) /*!< A
 508:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_BITFIELD ) /*!< A
 509:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_BITFIELD ) /*!< A
 510:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_BITFIELD ) /*!< A
 511:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_BITFIELD ) /*!< A
 512:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_BITFIELD ) /*!< A
 513:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_BITFIELD ) /*!< A
 514:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_BITFIELD ) /*!< A
 515:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_BITFIELD) /*!< A
 516:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_BITFIELD) /*!< A
 517:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_BITFIELD) /*!< A
 518:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_BITFIELD) /*!< A
 519:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_BITFIELD) /*!< A
 520:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_BITFIELD) /*!< A
 521:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_BITFIELD) /*!< A
 522:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_BITFIELD) /*!< A
 523:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 524:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 525:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 526:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_BITFIELD) /*!< A
 527:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VLCD                (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
ARM GAS  /tmp/cctetIQd.s 			page 30


 528:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 529:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 530:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 531:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 532:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 533:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 534:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 535:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 536:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000U)                                           
 537:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 538:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM21_CH2      (ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 539:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR1_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 540:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH4       (ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_
 541:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM22_TRGO     (ADC_CFGR1_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)    
 542:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_REG_TRIG_
 543:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 544:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 545:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC group regular external trigger TIM2_CC3 available only on              */
 546:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* STM32L0 devices categories: Cat.1, Cat.2, Cat.5                            */
 547:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (STM32L011xx) || defined (STM32L021xx) || \
 548:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L031xx) || defined (STM32L041xx) || \
 549:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L071xx) || defined (STM32L072xx) || defined (STM32L073xx) || \
 550:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L081xx) || defined (STM32L082xx) || defined (STM32L083xx) || \
 551:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L010x6) || defined (STM32L010x8) || defined (STM32L010xB)
 552:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_0 | ADC_REG_TRIG_
 553:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 554:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 555:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* ADC group regular external trigger TIM21_TRGO available only on            */
 556:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* STM32L0 devices categories: Cat.2, Cat.3, Cat.5                            */
 557:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (STM32L031xx) || defined (STM32L041xx) || \
 558:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L051xx) || defined (STM32L052xx) || defined (STM32L053xx) || \
 559:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L062xx) || defined (STM32L063xx) || \
 560:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L071xx) || defined (STM32L072xx) || defined (STM32L073xx) || \
 561:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L081xx) || defined (STM32L082xx) || defined (STM32L083xx) || \
 562:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     defined (STM32L010x6) || defined (STM32L010x8) || defined (STM32L010xB)
 563:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM21_TRGO     (LL_ADC_REG_TRIG_EXT_TIM22_TRGO)
 564:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 565:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 566:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 567:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 568:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 569:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 570:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 571:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 572:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 573:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                    ADC_CFGR1_EXTEN_0) /*!< ADC group r
 574:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1                    ) /*!< ADC group r
 575:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
 576:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 577:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 578:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 579:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 580:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 581:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** * @{
 582:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
 583:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000U)           /*!< ADC conversions are perform
 584:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)        /*!< ADC conversions are perform
ARM GAS  /tmp/cctetIQd.s 			page 31


 585:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 586:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 587:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 588:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 589:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 590:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 591:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 592:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000U)                        /*!< ADC conversion
 593:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                   ADC_CFGR1_DMAEN) /*!< ADC conversion
 594:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN) /*!< ADC conversion
 595:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 596:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 597:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 598:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 599:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 600:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** * @{
 601:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
 602:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000U)          /*!< ADC group regular behavior i
 603:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD)     /*!< ADC group regular behavior i
 604:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 605:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 606:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 607:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 608:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 609:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 610:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 611:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000U)          /*!< ADC group regular sequencer 
 612:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR)    /*!< ADC group regular sequencer 
 613:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 614:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 615:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 616:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 617:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 618:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 619:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 620:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000U)                                           
 621:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                                      
 622:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 623:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 624:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 625:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 626:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 627:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 628:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 629:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000U)                                         /*
 630:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP_0)                                      /*
 631:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP_1)                                      /*
 632:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP_1 | ADC_SMPR_SMP_0)                     /*
 633:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP_2)                                      /*
 634:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_0)                     /*
 635:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_1)                     /*
 636:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP_2 | ADC_SMPR_SMP_1 | ADC_SMPR_SMP_0)    /*
 637:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 638:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 639:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 640:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 641:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
ARM GAS  /tmp/cctetIQd.s 			page 32


 642:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 643:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 644:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
 645:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 646:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 647:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 648:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 649:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 650:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 651:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 652:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000U)                                           
 653:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (                                                    ADC
 654:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)         | ADC
 655:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)         | ADC
 656:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)         | ADC
 657:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)         | ADC
 658:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)         | ADC
 659:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)         | ADC
 660:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)         | ADC
 661:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)         | ADC
 662:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)         | ADC
 663:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)         | ADC
 664:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)         | ADC
 665:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)         | ADC
 666:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)         | ADC
 667:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)         | ADC
 668:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)         | ADC
 669:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)         | ADC
 670:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)         | ADC
 671:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)         | ADC
 672:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
 673:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
 674:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 675:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)         | ADC
 676:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VLCD_REG             ((LL_ADC_CHANNEL_VLCD       & ADC_CHANNEL_ID_MASK) | ADC
 677:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
 678:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 679:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 680:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 681:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 682:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
 683:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 684:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 685:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR_HT            )     /*!< ADC analog watchdog thr
 686:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (            ADC_TR_LT)     /*!< ADC analog watchdog thr
 687:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR_HT | ADC_TR_LT)     /*!< ADC analog watchdog bot
 688:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 689:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 690:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 691:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 692:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
 693:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 694:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 695:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000U)                               /*!< ADC ove
 696:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                          ADC_CFGR2_OVSE)  /*!< ADC ove
 697:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 698:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
ARM GAS  /tmp/cctetIQd.s 			page 33


 699:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 700:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 701:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
 702:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 703:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 704:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000U)          /*!< ADC oversampling discontinuo
 705:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)       /*!< ADC oversampling discontinuo
 706:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 707:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 708:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 709:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 710:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
 711:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 712:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 713:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000U)                                           
 714:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
 715:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
 716:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 717:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
 718:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
 719:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
 720:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 721:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 722:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 723:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 724:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 725:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
 726:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 727:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 728:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000U)                                           
 729:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
 730:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
 731:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
 732:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
 733:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
 734:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 735:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 736:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
 737:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 738:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 739:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 740:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 741:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 742:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
 743:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
 744:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not timeout values.
 745:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
 746:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         above each literal definition.
 747:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 748:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 749:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   
 750:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
 751:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       not timeout values.                                                  */
 752:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
 753:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
 754:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
 755:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
ARM GAS  /tmp/cctetIQd.s 			page 34


 756:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       STM32 serie:                                                         */
 757:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 83/fADC.                    */
 758:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
 759:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
 760:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
 761:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
 762:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
 763:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         cycles                                                             */
 764:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
 765:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         configuration.                                                     */
 766:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
 767:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 768:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
 769:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 770:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* parameter "tUP_LDO").                                                      */
 771:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US (10U)              /*!< Delay for ADC stabilization tim
 772:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 773:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
 774:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 775:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* parameter "TADC_BUF").                                                     */
 776:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Unit: us                                                                   */
 777:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       (10U)              /*!< Delay for internal voltage refer
 778:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 779:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
 780:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 781:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* parameter "tSTART").                                                       */
 782:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Unit: us                                                                   */
 783:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US    (10U)              /*!< Delay for temperature sensor sta
 784:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 785:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
 786:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On this STM32 serie, a minimum number of ADC clock cycles            */
 787:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
 788:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
 789:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
 790:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
 791:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
 792:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES (2U)             /*!< Delay required between ADC end o
 793:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 794:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 795:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 796:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 797:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 798:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 799:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 800:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 801:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 802:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 803:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
 804:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
 805:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 806:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 807:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 808:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
 809:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 810:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 811:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 812:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
ARM GAS  /tmp/cctetIQd.s 			page 35


 813:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Write a value in ADC register
 814:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 815:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __REG__ Register to be written
 816:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
 817:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
 818:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 819:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 820:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 821:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 822:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Read a value in ADC register
 823:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 824:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __REG__ Register to be read
 825:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Register value
 826:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 827:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 828:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 829:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
 830:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 831:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 832:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
 833:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
 834:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 835:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
 836:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
 837:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
 838:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
 839:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Example:
 840:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
 841:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           will return decimal number "4".
 842:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
 843:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number is returned, either defined with number
 844:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
 845:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 846:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 847:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 848:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 849:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 850:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 851:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 852:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 853:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 854:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 855:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 856:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 857:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 858:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
 859:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
 860:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
 861:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
 862:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
 863:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
 864:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
 865:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
 866:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
 867:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
 868:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
 869:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
ARM GAS  /tmp/cctetIQd.s 			page 36


 870:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
 871:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
 872:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
 873:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
 874:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0U)                                          
 875:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ? (                                                                                            
 876:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
 877:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
 878:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       :                                                                                            
 879:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       (                                                                                            
 880:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (((__CHANNEL__) & ADC_CHSELR_CHSEL0) == ADC_CHSELR_CHSEL0) ? (0U) :                         
 881:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         (                                                                                          
 882:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHSELR_CHSEL1) == ADC_CHSELR_CHSEL1) ? (1U) :                       
 883:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           (                                                                                        
 884:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            (((__CHANNEL__) & ADC_CHSELR_CHSEL2) == ADC_CHSELR_CHSEL2) ? (2U) :                     
 885:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             (                                                                                      
 886:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (((__CHANNEL__) & ADC_CHSELR_CHSEL3) == ADC_CHSELR_CHSEL3) ? (3U) :                   
 887:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               (                                                                                    
 888:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                (((__CHANNEL__) & ADC_CHSELR_CHSEL4) == ADC_CHSELR_CHSEL4) ? (4U) :                 
 889:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 (                                                                                  
 890:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  (((__CHANNEL__) & ADC_CHSELR_CHSEL5) == ADC_CHSELR_CHSEL5) ? (5U) :               
 891:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   (                                                                                
 892:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    (((__CHANNEL__) & ADC_CHSELR_CHSEL6) == ADC_CHSELR_CHSEL6) ? (6U) :             
 893:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     (                                                                              
 894:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                      (((__CHANNEL__) & ADC_CHSELR_CHSEL7) == ADC_CHSELR_CHSEL7) ? (7U) :           
 895:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       (                                                                            
 896:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                        (((__CHANNEL__) & ADC_CHSELR_CHSEL8) == ADC_CHSELR_CHSEL8) ? (8U) :         
 897:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         (                                                                          
 898:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                          (((__CHANNEL__) & ADC_CHSELR_CHSEL9) == ADC_CHSELR_CHSEL9) ? (9U) :       
 899:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           (                                                                        
 900:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                            (((__CHANNEL__) & ADC_CHSELR_CHSEL10) == ADC_CHSELR_CHSEL10) ? (10U) :  
 901:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             (                                                                      
 902:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                              (((__CHANNEL__) & ADC_CHSELR_CHSEL11) == ADC_CHSELR_CHSEL11) ? (11U) :
 903:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               (                                                                    
 904:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                (((__CHANNEL__) & ADC_CHSELR_CHSEL12) == ADC_CHSELR_CHSEL12) ? (12U)
 905:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 (                                                                  
 906:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                  (((__CHANNEL__) & ADC_CHSELR_CHSEL13) == ADC_CHSELR_CHSEL13) ? (13
 907:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   (                                                                
 908:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                    (((__CHANNEL__) & ADC_CHSELR_CHSEL14) == ADC_CHSELR_CHSEL14) ? (
 909:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     (                                                              
 910:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                      (((__CHANNEL__) & ADC_CHSELR_CHSEL15) == ADC_CHSELR_CHSEL15) ?
 911:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       (                                                            
 912:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        (((__CHANNEL__) & ADC_CHSELR_CHSEL16) == ADC_CHSELR_CHSEL16)
 913:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         (                                                          
 914:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                          (((__CHANNEL__) & ADC_CHSELR_CHSEL17) == ADC_CHSELR_CHSEL1
 915:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                           (                                                        
 916:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                            (((__CHANNEL__) & ADC_CHSELR_CHSEL18) == ADC_CHSELR_CHSE
 917:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                             (0U)                                                   
 918:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                           )                                                        
 919:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         )                                                          
 920:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       )                                                            
 921:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     )                                                              
 922:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   )                                                                
 923:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 )                                                                  
 924:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               )                                                                    
 925:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             )                                                                      
 926:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           )                                                                        
ARM GAS  /tmp/cctetIQd.s 			page 37


 927:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         )                                                                          
 928:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       )                                                                            
 929:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     )                                                                              
 930:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   )                                                                                
 931:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 )                                                                                  
 932:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               )                                                                                    
 933:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             )                                                                                      
 934:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           )                                                                                        
 935:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         )                                                                                          
 936:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
 937:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
 938:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
 939:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
 940:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0U)                                          
 941:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ? (                                                                                            
 942:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
 943:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
 944:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       :                                                                                            
 945:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       (                                                                                            
 946:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (((__CHANNEL__) & ADC_CHSELR_CHSEL0) == ADC_CHSELR_CHSEL0) ? (0U) :                         
 947:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         (                                                                                          
 948:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHSELR_CHSEL1) == ADC_CHSELR_CHSEL1) ? (1U) :                       
 949:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           (                                                                                        
 950:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            (((__CHANNEL__) & ADC_CHSELR_CHSEL2) == ADC_CHSELR_CHSEL2) ? (2U) :                     
 951:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             (                                                                                      
 952:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (((__CHANNEL__) & ADC_CHSELR_CHSEL3) == ADC_CHSELR_CHSEL3) ? (3U) :                   
 953:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               (                                                                                    
 954:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                (((__CHANNEL__) & ADC_CHSELR_CHSEL4) == ADC_CHSELR_CHSEL4) ? (4U) :                 
 955:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 (                                                                                  
 956:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  (((__CHANNEL__) & ADC_CHSELR_CHSEL5) == ADC_CHSELR_CHSEL5) ? (5U) :               
 957:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   (                                                                                
 958:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    (((__CHANNEL__) & ADC_CHSELR_CHSEL6) == ADC_CHSELR_CHSEL6) ? (6U) :             
 959:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     (                                                                              
 960:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                      (((__CHANNEL__) & ADC_CHSELR_CHSEL7) == ADC_CHSELR_CHSEL7) ? (7U) :           
 961:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       (                                                                            
 962:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                        (((__CHANNEL__) & ADC_CHSELR_CHSEL8) == ADC_CHSELR_CHSEL8) ? (8U) :         
 963:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         (                                                                          
 964:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                          (((__CHANNEL__) & ADC_CHSELR_CHSEL9) == ADC_CHSELR_CHSEL9) ? (9U) :       
 965:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           (                                                                        
 966:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                            (((__CHANNEL__) & ADC_CHSELR_CHSEL10) == ADC_CHSELR_CHSEL10) ? (10U) :  
 967:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             (                                                                      
 968:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                              (((__CHANNEL__) & ADC_CHSELR_CHSEL11) == ADC_CHSELR_CHSEL11) ? (11U) :
 969:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               (                                                                    
 970:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                (((__CHANNEL__) & ADC_CHSELR_CHSEL12) == ADC_CHSELR_CHSEL12) ? (12U)
 971:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 (                                                                  
 972:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                  (((__CHANNEL__) & ADC_CHSELR_CHSEL13) == ADC_CHSELR_CHSEL13) ? (13
 973:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   (                                                                
 974:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                    (((__CHANNEL__) & ADC_CHSELR_CHSEL14) == ADC_CHSELR_CHSEL14) ? (
 975:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     (                                                              
 976:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                      (((__CHANNEL__) & ADC_CHSELR_CHSEL15) == ADC_CHSELR_CHSEL15) ?
 977:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       (                                                            
 978:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        (((__CHANNEL__) & ADC_CHSELR_CHSEL17) == ADC_CHSELR_CHSEL17)
 979:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         (                                                          
 980:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                          (((__CHANNEL__) & ADC_CHSELR_CHSEL18) == ADC_CHSELR_CHSEL1
 981:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                           (0U)                                                     
 982:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                         )                                                          
 983:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       )                                                            
ARM GAS  /tmp/cctetIQd.s 			page 38


 984:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                     )                                                              
 985:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   )                                                                
 986:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                 )                                                                  
 987:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                               )                                                                    
 988:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                             )                                                                      
 989:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                           )                                                                        
 990:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                         )                                                                          
 991:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                       )                                                                            
 992:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     )                                                                              
 993:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   )                                                                                
 994:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                 )                                                                                  
 995:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****               )                                                                                    
 996:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             )                                                                                      
 997:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           )                                                                                        
 998:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         )                                                                                          
 999:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                            
1000:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1001:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1002:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1003:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1004:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1005:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from number in decimal format.
1006:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Example:
1007:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1008:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1009:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1010:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1011:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1012:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1013:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1014:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1015:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1016:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1017:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1018:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1019:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1020:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1021:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1022:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1023:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1024:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1025:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1026:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1027:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1028:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1029:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1030:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT       (2)
1031:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR    (2)
1032:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)(2)
1033:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1034:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1035:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1036:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1037:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1038:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1039:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1040:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (                                                                            \
ARM GAS  /tmp/cctetIQd.s 			page 39


1041:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1042:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__))                                     \
1043:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1044:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1045:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1046:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1047:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1048:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1049:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC internal channel:
1050:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1051:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1052:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1053:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1054:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1055:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1056:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1057:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1058:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         returned from ADC registers,
1059:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1060:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1061:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         parameters definitions of driver.
1062:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1063:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1064:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1065:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1066:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1067:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1068:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1069:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1070:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1071:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1072:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1073:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1074:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1075:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1076:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1077:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1078:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1079:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1080:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1081:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1082:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1083:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1084:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
1085:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1086:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1087:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1088:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1089:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1090:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1091:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0U)
1092:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1093:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1094:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1095:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1096:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1097:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
ARM GAS  /tmp/cctetIQd.s 			page 40


1098:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1099:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1100:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1101:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1102:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a value defined from parameter definition of
1103:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1104:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1105:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from ADC registers.
1106:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1107:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1108:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1109:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1110:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1111:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1112:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1113:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1114:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1115:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1116:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1117:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1118:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1119:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1120:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1121:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1122:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1123:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1124:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1125:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1126:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1127:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1128:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
1129:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1130:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1131:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1132:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1133:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1134:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1135:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1136:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1137:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1138:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1139:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1140:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1141:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1142:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1143:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1144:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1145:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1146:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1147:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1148:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1149:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1150:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1151:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1152:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1153:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1154:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
ARM GAS  /tmp/cctetIQd.s 			page 41


1155:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1156:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1157:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1158:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1159:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1160:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1161:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1162:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1163:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or a value from functions where a channel number is
1164:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         returned from ADC registers,
1165:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1166:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1167:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         parameters definitions of driver.
1168:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1169:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1170:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1171:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1172:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
1173:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1174:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1175:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1176:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1177:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1178:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1179:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
1180:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1181:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (                                                                            \
1182:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1183:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1184:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VLCD)                                     \
1185:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1186:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
1187:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1188:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (                                                                            \
1189:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1190:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)                               \
1191:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1192:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1193:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1194:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1195:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1196:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1197:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1198:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1199:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example:
1200:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1201:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1202:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1203:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1204:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1205:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1206:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1207:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1208:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1209:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1210:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1211:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
ARM GAS  /tmp/cctetIQd.s 			page 42


1212:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1213:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1214:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1215:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1216:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1217:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1218:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1219:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1220:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1221:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1222:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1223:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT       (2)
1224:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR    (2)
1225:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)(2)
1226:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1227:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1228:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1229:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1230:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1231:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1232:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1233:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1234:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1235:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1236:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
1237:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
1238:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
1239:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
1240:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
1241:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
1242:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
1243:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
1244:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
1245:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
1246:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1247:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1248:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1249:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1250:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1251:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1252:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (1)
1253:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1254:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
1255:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1256:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1257:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VLCD_REG             (1)
1258:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1259:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
1260:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1261:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1262:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWDEN | ADC_CFGR1_AWDSGL)
1263:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1264:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1265:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1266:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1267:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         different of 12 bits.
1268:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
ARM GAS  /tmp/cctetIQd.s 			page 43


1269:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1270:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1271:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1272:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1273:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            (< ADCx param >,
1274:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1275:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            );
1276:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1277:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1278:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1279:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1280:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1281:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1282:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1283:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1284:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1285:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1286:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1287:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1288:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1289:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is 
1290:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         different of 12 bits.
1291:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1292:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1293:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1294:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1295:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1296:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1297:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *            );
1298:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1299:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1300:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1301:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1302:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1303:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1304:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1305:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1306:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1307:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1308:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1309:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1310:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1311:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1312:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1313:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1314:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1315:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1316:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1317:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1318:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1319:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1320:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1321:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__) \
1322:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__AWD_THRESHOLD_TYPE__) == LL_ADC_AWD_THRESHOLD_LOW)                                 \
1323:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ? (                                                                                   \
1324:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (__AWD_THRESHOLDS__) & LL_ADC_AWD_THRESHOLD_LOW                                    \
1325:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                   \
ARM GAS  /tmp/cctetIQd.s 			page 44


1326:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       :                                                                                   \
1327:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       (                                                                                   \
1328:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        ((__AWD_THRESHOLDS__) >> ADC_TR_HT_BITOFFSET_POS) & LL_ADC_AWD_THRESHOLD_LOW       \
1329:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                                   \
1330:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1331:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1332:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1333:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1334:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1335:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1336:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1337:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1338:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1339:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1340:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC common register instance
1341:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1342:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1343:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (ADC1_COMMON)
1344:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1345:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1346:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1347:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC common instance are disabled.
1348:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1349:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1350:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1351:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1352:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1353:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1354:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1355:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1356:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1357:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1358:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         are disabled.
1359:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1360:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled.
1361:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1362:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1363:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   LL_ADC_IsEnabled(ADC1)
1364:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1365:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1366:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1367:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1368:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1369:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1370:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (refer to reference manual).
1371:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1372:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1373:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1374:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1375:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1376:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1377:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1378:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1379:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((0xFFFU) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U)))
1380:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1381:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1382:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
ARM GAS  /tmp/cctetIQd.s 			page 45


1383:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a resolution to another resolution.
1384:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted 
1385:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of to the data to be converted
1386:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1387:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1388:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1389:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1390:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1391:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1392:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1393:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1394:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1395:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1396:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1397:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1398:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1399:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__, __ADC_RESOLUTION_CURRENT__, __ADC_RESOLUTION_TAR
1400:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((__DATA__)                                                                 \
1401:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U)))   \
1402:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U))      \
1403:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1404:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1405:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1406:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1407:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1408:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1409:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1410:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1411:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1412:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1413:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                       (unit: digital value).
1414:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1415:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1416:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1417:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1418:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1419:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1420:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1421:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1422:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       __ADC_DATA__,\
1423:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
1424:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1425:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1426:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1427:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1428:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1429:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
1430:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
1431:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         reference VrefInt.
1432:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1433:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1434:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1435:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         connected to pin Vref+.
1436:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1437:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1438:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, calibration data of internal voltage reference
1439:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
ARM GAS  /tmp/cctetIQd.s 			page 46


1440:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1441:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal voltage reference VrefInt.
1442:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1443:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1444:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1445:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1446:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1447:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1448:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1449:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1450:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1451:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
1452:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1453:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
1454:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
1455:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1456:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                 \
1457:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        (__ADC_RESOLUTION__),                   \
1458:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                        LL_ADC_RESOLUTION_12B)                  \
1459:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1460:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1461:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L011, calibration parameter TS_CAL1 is not available. */
1462:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Therefore, helper macro __LL_ADC_CALC_TEMPERATURE() is not available.*/
1463:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().        */
1464:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L010xx, temperature sensor is not available.          */
1465:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Therefore, helper macro related to temperature sensor are            */
1466:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       not available.                                                       */
1467:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L011xx) && !defined(STM32L010xB) && !defined(STM32L010x8) && !defined(STM32L010x6
1468:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1469:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1470:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1471:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
1472:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1473:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Calculation formula:
1474:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
1475:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
1476:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
1477:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
1478:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
1479:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
1480:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
1481:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
1482:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
1483:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
1484:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
1485:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  parameters are correct (address and data).
1486:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
1487:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
1488:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  less accurate than calibrated values),
1489:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
1490:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1491:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1492:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1493:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1494:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1495:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, calibration data of temperature sensor
1496:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
ARM GAS  /tmp/cctetIQd.s 			page 47


1497:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1498:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         temperature sensor.
1499:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1500:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1501:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
1502:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
1503:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
1504:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
1505:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                 sensor voltage has been measured.
1506:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1507:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1508:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1509:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1510:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1511:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1512:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1513:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
1514:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
1515:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
1516:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
1517:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
1518:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
1519:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
1520:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
1521:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
1522:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
1523:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
1524:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
1525:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1526:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1527:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1528:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: On device STM32L010xx, temperature sensor is not available.          */
1529:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       Therefore, helper macro related to temperature sensor are            */
1530:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       not available.                                                       */
1531:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if !defined(STM32L010xB) && !defined(STM32L010x8) && !defined(STM32L010x6) && !defined(STM32L010x4
1532:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1533:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1534:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1535:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1536:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (refer to device datasheet).
1537:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Calculation formula:
1538:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1539:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
1540:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1541:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                   (unit: digital value)
1542:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1543:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1544:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1545:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1546:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1547:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  of the current device has characteristics in line with
1548:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  datasheet typical values.
1549:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
1550:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1551:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1552:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1553:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
ARM GAS  /tmp/cctetIQd.s 			page 48


1554:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1555:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1556:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1557:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1558:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12bits
1559:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1560:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1561:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1562:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                       On STM32L0, refer to device datasheet parameter "Avg_Slop
1563:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1564:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                       On STM32L0, refer to device datasheet parameter "V130" (c
1565:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1566:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
1567:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1568:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1569:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1570:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1571:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1572:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1573:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1574:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1575:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1576:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1577:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1578:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1579:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1580:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1581:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
1582:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   ((( (                                                                        \
1583:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1584:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1585:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  * 1000)                                                       \
1586:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        -                                                                       \
1587:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1588:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                  * 1000)                                                       \
1589:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****       )                                                                        \
1590:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****     ) / (__TEMPSENSOR_TYP_AVGSLOPE__)                                          \
1591:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****    ) + (__TEMPSENSOR_CALX_TEMP__)                                              \
1592:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   )
1593:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1594:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1595:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1596:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1597:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1598:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1599:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1600:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1601:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1602:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1603:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1604:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1605:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1606:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1607:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1608:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1609:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1610:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  /tmp/cctetIQd.s 			page 49


1611:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1612:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1613:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1614:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1615:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1616:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1617:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1618:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1619:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   These ADC registers are data registers:
1620:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1621:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1622:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1623:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1624:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example:
1625:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1626:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1627:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1628:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1629:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1630:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1631:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1632:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1633:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1634:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1635:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1636:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1637:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1638:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval ADC register address
1639:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1640:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
1641:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1642:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Prevent unused argument compilation warning */
1643:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   (void)Register;
1644:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1645:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Retrieve address of register DR */
1646:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)&(ADCx->DR);
1647:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1648:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1649:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1650:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1651:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1652:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1653:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1654:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1655:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1656:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1657:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1658:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
1659:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1660:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1661:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1662:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1663:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1664:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1665:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_SetCommonClock
1666:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1667:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
ARM GAS  /tmp/cctetIQd.s 			page 50


1668:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
1669:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1670:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1671:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1672:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1673:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1674:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1675:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1676:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1677:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1678:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1679:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1680:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1681:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1682:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to 
1683:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock  
1684:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             is set to clock source asynchronous.
1685:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1686:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1687:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1688:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
1689:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1690:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
1691:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1692:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1693:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1694:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
1695:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_GetCommonClock
1696:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1697:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1698:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1699:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1700:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1701:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1702:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1703:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1704:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1705:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1706:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1707:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1708:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1709:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1710:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1711:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1712:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to 
1713:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock  
1714:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             is set to clock source asynchronous.
1715:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1716:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1717:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
1718:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1719:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
1720:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1721:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1722:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1723:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock low frequency mode.
1724:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
ARM GAS  /tmp/cctetIQd.s 			page 51


1725:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1726:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1727:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1728:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1729:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
1730:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      LFMEN          LL_ADC_SetCommonFrequencyMode
1731:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1732:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1733:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  CommonFrequencyMode This parameter can be one of the following values:
1734:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_HIGH
1735:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_LOW
1736:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1737:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1738:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonFrequencyMode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Commo
1739:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1740:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_LFMEN, CommonFrequencyMode);
1741:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1742:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1743:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1744:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock low frequency mode.
1745:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1746:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1747:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      LFMEN          LL_ADC_GetCommonFrequencyMode
1748:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1749:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1750:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1751:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_HIGH
1752:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_LOW
1753:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1754:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonFrequencyMode(ADC_Common_TypeDef *ADCxy_COMMON)
1755:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1756:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_LFMEN));
1757:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1758:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1759:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1760:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to internal
1761:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1762:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
1763:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1764:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1765:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1766:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1767:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1768:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         temperature sensor stabilization time.
1769:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet.
1770:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
1771:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
1772:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1773:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
1774:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a sampling time minimum value is required.
1775:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet.
1776:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1777:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1778:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1779:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1780:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1781:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
ARM GAS  /tmp/cctetIQd.s 			page 52


1782:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
1783:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
1784:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      VLCDEN         LL_ADC_SetCommonPathInternalCh
1785:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1786:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1787:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1788:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1789:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1790:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR (2)
1791:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VLCD (1)
1792:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1793:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1794:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1795:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1796:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1797:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
1798:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1799:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (ADC_CCR_VLCDEN) && defined (ADC_CCR_TSEN)
1800:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VLCDEN, PathInternal);
1801:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #elif defined (ADC_CCR_TSEN)
1802:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN, PathInternal);
1803:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
1804:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN, PathInternal);
1805:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1806:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1807:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1808:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1809:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
1810:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1811:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
1812:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1813:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1814:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
1815:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
1816:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CCR      VLCDEN         LL_ADC_GetCommonPathInternalCh
1817:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1818:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1819:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
1820:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1821:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1822:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR (2)
1823:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VLCD (1)
1824:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
1825:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1826:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) value not defined in all devices: only on STM32L053xx, STM32L063xx, STM32L073xx, ST
1827:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1828:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
1829:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1830:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined (ADC_CCR_VLCDEN) && defined (ADC_CCR_TSEN)
1831:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VLCDEN));
1832:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #elif defined (ADC_CCR_TSEN)
1833:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN));
1834:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #else
1835:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN));
1836:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
1837:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1838:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
ARM GAS  /tmp/cctetIQd.s 			page 53


1839:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1840:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
1841:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1842:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1843:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
1844:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
1845:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1846:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1847:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1848:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
1849:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1850:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1851:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled.
1852:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
1853:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1854:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
1855:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1856:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1857:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1858:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1859:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1860:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
1861:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
1862:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1863:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1864:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1865:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1866:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             cycle).
1867:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             Refer to reference manual.
1868:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1869:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1870:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
1871:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 253              		.loc 2 1871 1
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 8
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 80B5     		push	{r7, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 82B0     		sub	sp, sp, #8
 262              		.cfi_def_cfa_offset 16
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
 265 0006 7860     		str	r0, [r7, #4]
 266 0008 3960     		str	r1, [r7]
1872:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
 267              		.loc 2 1872 3
 268 000a 7B68     		ldr	r3, [r7, #4]
 269 000c 1B69     		ldr	r3, [r3, #16]
 270 000e 9B00     		lsls	r3, r3, #2
 271 0010 9A08     		lsrs	r2, r3, #2
 272 0012 3B68     		ldr	r3, [r7]
 273 0014 1A43     		orrs	r2, r3
 274 0016 7B68     		ldr	r3, [r7, #4]
 275 0018 1A61     		str	r2, [r3, #16]
ARM GAS  /tmp/cctetIQd.s 			page 54


1873:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 276              		.loc 2 1873 1
 277 001a C046     		nop
 278 001c BD46     		mov	sp, r7
 279 001e 02B0     		add	sp, sp, #8
 280              		@ sp needed
 281 0020 80BD     		pop	{r7, pc}
 282              		.cfi_endproc
 283              	.LFE54:
 285              		.section	.text.LL_ADC_SetSamplingTimeCommonChannels,"ax",%progbits
 286              		.align	1
 287              		.syntax unified
 288              		.code	16
 289              		.thumb_func
 290              		.fpu softvfp
 292              	LL_ADC_SetSamplingTimeCommonChannels:
 293              	.LFB64:
1874:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1875:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1876:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
1877:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
1878:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1879:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1880:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1881:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1882:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1883:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1884:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
1885:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
1886:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
1887:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1888:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1889:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1890:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1891:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             cycle).
1892:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             Refer to reference manual.
1893:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1894:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(ADC_TypeDef *ADCx)
1895:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1896:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
1897:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1898:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1899:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1900:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
1901:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1902:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
1903:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without having to perform a new calibration using
1904:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
1905:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1906:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1907:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
1908:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on going on group regular.
1909:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_SetCalibrationFactor
1910:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1911:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
1912:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1913:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  /tmp/cctetIQd.s 			page 55


1914:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
1915:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1916:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
1917:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
1918:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              CalibrationFactor);
1919:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1920:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1921:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1922:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
1923:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1924:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
1925:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
1926:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_GetCalibrationFactor
1927:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1928:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
1929:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1930:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx)
1931:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1932:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
1933:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1934:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1935:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1936:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC resolution.
1937:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1938:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1939:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1940:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1941:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1942:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
1943:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
1944:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1945:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
1946:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1947:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1948:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1949:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1950:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1951:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1952:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
1953:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1954:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
1955:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1956:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1957:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1958:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC resolution.
1959:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1960:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1961:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
1962:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1963:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1964:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1965:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1966:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1967:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1968:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1969:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
1970:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
ARM GAS  /tmp/cctetIQd.s 			page 56


1971:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
1972:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1973:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1974:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1975:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
1976:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1977:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1978:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1979:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
1980:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1981:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
1982:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
1983:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
1984:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
1985:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
1986:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
1987:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
1988:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
1989:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
1990:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
1991:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
1992:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
1993:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
1994:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
1995:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
1996:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1997:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1998:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
1999:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2000:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2001:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2002:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2003:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2004:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2005:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2006:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2007:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2008:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2009:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2010:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2011:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2012:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2013:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2014:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           in order to reduce power consumption.
2015:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2016:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2017:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           has been retrieved by user software.
2018:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2019:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           other conversion.
2020:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2021:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2022:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2023:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           applications.
2024:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           How to use this low power mode:
2025:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
2026:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
2027:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             IRQ vector sequencer.
ARM GAS  /tmp/cctetIQd.s 			page 57


2028:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2029:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2030:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2031:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2032:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC conversion start.
2033:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2034:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_MODE_AUTOOFF is available):
2035:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2036:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2037:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2038:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2039:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2040:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2041:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2042:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2043:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2044:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC channel.
2045:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2046:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2047:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2048:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2049:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
2050:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
2051:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2052:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2053:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2054:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2055:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2056:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2057:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2058:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2059:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2060:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2061:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2062:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2063:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2064:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2065:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2066:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2067:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2068:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2069:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           in order to reduce power consumption.
2070:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2071:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2072:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           has been retrieved by user software.
2073:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2074:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           other conversion.
2075:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2076:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2077:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2078:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           applications.
2079:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           How to use this low power mode:
2080:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
2081:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
2082:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             IRQ vector sequencer.
2083:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2084:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
ARM GAS  /tmp/cctetIQd.s 			page 58


2085:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2086:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2087:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC conversion start.
2088:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2089:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_MODE_AUTOOFF is available):
2090:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2091:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2092:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2093:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2094:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2095:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2096:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2097:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2098:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2099:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC channel.
2100:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
2101:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
2102:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2103:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2104:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2105:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2106:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2107:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2108:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2109:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2110:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2111:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2112:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2113:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2114:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2115:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
2116:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2117:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, sampling time scope is on ADC instance:
2118:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Sampling time common to all channels.
2119:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2120:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2121:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         converted:
2122:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2123:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2124:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         setting).
2125:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2126:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TS_temp, ...).
2127:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2128:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         On this STM32 serie, ADC processing time is:
2129:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
2130:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
2131:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
2132:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
2133:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2134:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2135:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is required.
2136:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet.
2137:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2138:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2139:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2140:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2141:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll SMPR     SMP            LL_ADC_SetSamplingTimeCommonChannels
ARM GAS  /tmp/cctetIQd.s 			page 59


2142:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2143:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2144:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2145:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2146:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2147:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2148:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2149:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2150:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2151:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2152:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2153:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2154:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTime)
2155:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 294              		.loc 2 2155 1
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 8
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298 0000 80B5     		push	{r7, lr}
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 7, -8
 301              		.cfi_offset 14, -4
 302 0002 82B0     		sub	sp, sp, #8
 303              		.cfi_def_cfa_offset 16
 304 0004 00AF     		add	r7, sp, #0
 305              		.cfi_def_cfa_register 7
 306 0006 7860     		str	r0, [r7, #4]
 307 0008 3960     		str	r1, [r7]
2156:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR, ADC_SMPR_SMP, SamplingTime);
 308              		.loc 2 2156 3
 309 000a 7B68     		ldr	r3, [r7, #4]
 310 000c 5B69     		ldr	r3, [r3, #20]
 311 000e 0722     		movs	r2, #7
 312 0010 9343     		bics	r3, r2
 313 0012 1A00     		movs	r2, r3
 314 0014 3B68     		ldr	r3, [r7]
 315 0016 1A43     		orrs	r2, r3
 316 0018 7B68     		ldr	r3, [r7, #4]
 317 001a 5A61     		str	r2, [r3, #20]
2157:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 318              		.loc 2 2157 1
 319 001c C046     		nop
 320 001e BD46     		mov	sp, r7
 321 0020 02B0     		add	sp, sp, #8
 322              		@ sp needed
 323 0022 80BD     		pop	{r7, pc}
 324              		.cfi_endproc
 325              	.LFE64:
 327              		.section	.text.LL_ADC_REG_SetTriggerSource,"ax",%progbits
 328              		.align	1
 329              		.syntax unified
 330              		.code	16
 331              		.thumb_func
 332              		.fpu softvfp
 334              	LL_ADC_REG_SetTriggerSource:
 335              	.LFB66:
2158:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
ARM GAS  /tmp/cctetIQd.s 			page 60


2159:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2160:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
2161:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2162:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, sampling time scope is on ADC instance:
2163:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Sampling time common to all channels.
2164:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2165:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2166:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2167:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         this STM32 serie.
2168:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll SMPR     SMP            LL_ADC_GetSamplingTimeCommonChannels
2169:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2170:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2171:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2172:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2173:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2174:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2175:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2176:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2177:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2178:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2179:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2180:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(ADC_TypeDef *ADCx)
2181:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2182:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR, ADC_SMPR_SMP));
2183:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2184:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2185:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2186:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
2187:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2188:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2189:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
2190:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
2191:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2192:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2193:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2194:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
2195:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2196:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         external interrupt line).
2197:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting trigger source to external trigger
2198:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         also set trigger polarity to rising edge 
2199:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
2200:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
2201:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
2202:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
2203:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
2204:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2205:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2206:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2207:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2208:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2209:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
2210:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
2211:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2212:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2213:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2214:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
2215:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM21_CH2
ARM GAS  /tmp/cctetIQd.s 			page 61


2216:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2217:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2218:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM22_TRGO
2219:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3 (*)
2220:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2221:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2222:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2223:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (*) value not defined in all devices
2224:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2225:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2226:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2227:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 336              		.loc 2 2227 1
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 8
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340 0000 80B5     		push	{r7, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 82B0     		sub	sp, sp, #8
 345              		.cfi_def_cfa_offset 16
 346 0004 00AF     		add	r7, sp, #0
 347              		.cfi_def_cfa_register 7
 348 0006 7860     		str	r0, [r7, #4]
 349 0008 3960     		str	r1, [r7]
2228:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
 350              		.loc 2 2228 3
 351 000a 7B68     		ldr	r3, [r7, #4]
 352 000c DB68     		ldr	r3, [r3, #12]
 353 000e 054A     		ldr	r2, .L15
 354 0010 1A40     		ands	r2, r3
 355 0012 3B68     		ldr	r3, [r7]
 356 0014 1A43     		orrs	r2, r3
 357 0016 7B68     		ldr	r3, [r7, #4]
 358 0018 DA60     		str	r2, [r3, #12]
2229:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 359              		.loc 2 2229 1
 360 001a C046     		nop
 361 001c BD46     		mov	sp, r7
 362 001e 02B0     		add	sp, sp, #8
 363              		@ sp needed
 364 0020 80BD     		pop	{r7, pc}
 365              	.L16:
 366 0022 C046     		.align	2
 367              	.L15:
 368 0024 3FF2FFFF 		.word	-3521
 369              		.cfi_endproc
 370              	.LFE66:
 372              		.section	.text.LL_ADC_REG_SetSequencerChannels,"ax",%progbits
 373              		.align	1
 374              		.syntax unified
 375              		.code	16
 376              		.thumb_func
 377              		.fpu softvfp
 379              	LL_ADC_REG_SetSequencerChannels:
 380              	.LFB75:
ARM GAS  /tmp/cctetIQd.s 			page 62


2230:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2231:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2232:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
2233:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2234:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         external interrupt line).
2235:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
2236:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal (SW start) or external, without detail
2237:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2238:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (equivalent to 
2239:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
2240:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
2241:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
2242:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2243:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
2244:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
2245:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2246:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2247:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2248:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
2249:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM21_CH2
2250:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2251:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2252:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM22_TRGO
2253:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3 (*)
2254:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2255:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2256:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *
2257:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (*) value not defined in all devices
2258:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2259:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
2260:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2261:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t TriggerSource = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
2262:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   
2263:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
2264:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
2265:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2
2266:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   
2267:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
2268:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
2269:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return ((TriggerSource
2270:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR1_EXTSEL)
2271:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR1_EXTEN)
2272:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          );
2273:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2274:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2275:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2276:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
2277:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****             or external.
2278:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
2279:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2280:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
2281:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
2282:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2283:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2284:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2285:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2286:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
ARM GAS  /tmp/cctetIQd.s 			page 63


2287:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2288:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN));
2289:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2290:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2291:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2292:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
2293:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2294:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2295:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2296:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2297:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2298:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
2299:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2300:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
2301:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2302:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2303:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2304:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2305:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2306:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
2307:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2308:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
2309:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2310:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2311:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2312:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
2313:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2314:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
2315:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2316:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2317:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2318:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2319:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2320:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2321:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
2322:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2323:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
2324:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2325:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2326:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2327:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2328:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
2329:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2330:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the default scan direction is forward.
2331:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2332:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2333:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2334:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2335:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
2336:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2337:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
2338:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2339:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2340:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2341:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2342:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
2343:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
ARM GAS  /tmp/cctetIQd.s 			page 64


2344:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
2345:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2346:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2347:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2348:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
2349:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2350:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the default scan direction is forward.
2351:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
2352:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2353:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2354:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2355:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2356:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2357:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(ADC_TypeDef *ADCx)
2358:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2359:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
2360:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2361:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2362:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2363:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
2364:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2365:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number of ranks.
2366:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular 
2367:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2368:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2369:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2370:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2371:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2372:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2373:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2374:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2375:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2376:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2377:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2378:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2379:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2380:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2381:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
2382:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2383:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2384:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2385:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2386:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2387:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         number of ranks.
2388:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2389:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2390:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2391:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2392:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2393:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2394:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
2395:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2396:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
2397:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2398:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2399:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2400:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
ARM GAS  /tmp/cctetIQd.s 			page 65


2401:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2402:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2403:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2404:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2405:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2406:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
2407:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           configuration.
2408:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2409:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2410:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2411:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2412:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2413:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2414:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2415:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2416:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2417:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2418:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2419:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2420:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2421:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
2422:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2423:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
2424:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
2425:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
2426:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
2427:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
2428:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
2429:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
2430:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
2431:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
2432:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
2433:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
2434:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
2435:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
2436:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
2437:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
2438:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
2439:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
2440:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
2441:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
2442:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2443:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2444:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2445:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2446:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2447:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2448:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2449:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2450:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2451:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2452:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2453:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2454:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2455:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2456:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2457:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  /tmp/cctetIQd.s 			page 66


2458:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2459:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2460:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2461:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2462:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2463:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2464:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2465:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2466:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
2467:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2468:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2469:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2470:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
2471:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 381              		.loc 2 2471 1
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 8
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 80B5     		push	{r7, lr}
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 7, -8
 388              		.cfi_offset 14, -4
 389 0002 82B0     		sub	sp, sp, #8
 390              		.cfi_def_cfa_offset 16
 391 0004 00AF     		add	r7, sp, #0
 392              		.cfi_def_cfa_register 7
 393 0006 7860     		str	r0, [r7, #4]
 394 0008 3960     		str	r1, [r7]
2472:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2473:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2474:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
 395              		.loc 2 2474 3
 396 000a 3B68     		ldr	r3, [r7]
 397 000c 5B03     		lsls	r3, r3, #13
 398 000e 5A0B     		lsrs	r2, r3, #13
 399 0010 7B68     		ldr	r3, [r7, #4]
 400 0012 9A62     		str	r2, [r3, #40]
2475:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 401              		.loc 2 2475 1
 402 0014 C046     		nop
 403 0016 BD46     		mov	sp, r7
 404 0018 02B0     		add	sp, sp, #8
 405              		@ sp needed
 406 001a 80BD     		pop	{r7, pc}
 407              		.cfi_endproc
 408              	.LFE75:
 410              		.section	.text.LL_ADC_REG_SetContinuousMode,"ax",%progbits
 411              		.align	1
 412              		.syntax unified
 413              		.code	16
 414              		.thumb_func
 415              		.fpu softvfp
 417              	LL_ADC_REG_SetContinuousMode:
 418              	.LFB79:
2476:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2477:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2478:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
ARM GAS  /tmp/cctetIQd.s 			page 67


2479:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2480:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2481:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2482:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2483:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2484:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
2485:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           configuration.
2486:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2487:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2488:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2489:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2490:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2491:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2492:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2493:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2494:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2495:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2496:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2497:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2498:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2499:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
2500:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2501:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
2502:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
2503:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
2504:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
2505:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
2506:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
2507:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
2508:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
2509:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
2510:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
2511:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
2512:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
2513:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
2514:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
2515:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
2516:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
2517:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
2518:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
2519:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
2520:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2521:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2522:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2523:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2524:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2525:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2526:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2527:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2528:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2529:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2530:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2531:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2532:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2533:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2534:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2535:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  /tmp/cctetIQd.s 			page 68


2536:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2537:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2538:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2539:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2540:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2541:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2542:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2543:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2544:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
2545:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2546:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2547:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2548:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
2549:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2550:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2551:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2552:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2553:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2554:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2555:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2556:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
2557:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2558:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2559:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2560:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2561:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2562:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
2563:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           configuration.
2564:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2565:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2566:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2567:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2568:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2569:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2570:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2571:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2572:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2573:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2574:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2575:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2576:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2577:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be selected.
2578:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2579:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
2580:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
2581:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
2582:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
2583:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
2584:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
2585:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
2586:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
2587:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
2588:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
2589:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
2590:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
2591:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
2592:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
ARM GAS  /tmp/cctetIQd.s 			page 69


2593:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
2594:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
2595:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
2596:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
2597:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
2598:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2599:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2600:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2601:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2602:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2603:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2604:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2605:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2606:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2607:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2608:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2609:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2610:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2611:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2612:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2613:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2614:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2615:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2616:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2617:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2618:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2619:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2620:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2621:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2622:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
2623:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2624:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2625:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2626:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
2627:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2628:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2629:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2630:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2631:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2632:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2633:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2634:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
2635:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         channel number.
2636:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function performs:
2637:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
2638:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2639:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2640:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2641:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         not fully configurable: sequencer length and each rank
2642:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         affectation to a channel are fixed by channel HW number.
2643:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2644:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2645:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2646:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2647:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         enabled separately.
2648:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2649:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
ARM GAS  /tmp/cctetIQd.s 			page 70


2650:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2651:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2652:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2653:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   One or several values can be retrieved.
2654:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2655:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
2656:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
2657:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
2658:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
2659:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
2660:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
2661:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
2662:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
2663:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
2664:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
2665:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
2666:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
2667:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
2668:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
2669:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
2670:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
2671:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
2672:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
2673:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
2674:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2675:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2676:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2677:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2678:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2679:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2680:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2681:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2682:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2683:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2684:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2685:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2686:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2687:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2688:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2689:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2690:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2691:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2692:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2693:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2694:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2695:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2696:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2697:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VLCD       (1)
2698:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
2699:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2700:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2701:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(ADC_TypeDef *ADCx)
2702:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2703:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t ChannelsBitfield = READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
2704:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   
2705:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (   (((ChannelsBitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_
2706:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_
ARM GAS  /tmp/cctetIQd.s 			page 71


2707:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_
2708:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_
2709:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_
2710:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_
2711:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_
2712:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_
2713:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_
2714:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_
2715:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_AD
2716:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_AD
2717:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_AD
2718:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_AD
2719:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_AD
2720:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_AD
2721:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #if defined(ADC_CCR_VLCDEN)
2722:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_AD
2723:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** #endif
2724:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_AD
2725:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL18) >> ADC_CHSELR_CHSEL18_BITOFFSET_POS) * LL_AD
2726:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****          );
2727:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2728:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2729:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
2730:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
2731:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
2732:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
2733:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           conversions launched successively automatically.
2734:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular 
2735:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2736:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2737:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2738:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2739:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2740:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
2741:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2742:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
2743:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
2744:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
2745:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2746:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2747:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
2748:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 419              		.loc 2 2748 1
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423 0000 80B5     		push	{r7, lr}
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 7, -8
 426              		.cfi_offset 14, -4
 427 0002 82B0     		sub	sp, sp, #8
 428              		.cfi_def_cfa_offset 16
 429 0004 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
 431 0006 7860     		str	r0, [r7, #4]
 432 0008 3960     		str	r1, [r7]
2749:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
ARM GAS  /tmp/cctetIQd.s 			page 72


 433              		.loc 2 2749 3
 434 000a 7B68     		ldr	r3, [r7, #4]
 435 000c DB68     		ldr	r3, [r3, #12]
 436 000e 054A     		ldr	r2, .L19
 437 0010 1A40     		ands	r2, r3
 438 0012 3B68     		ldr	r3, [r7]
 439 0014 1A43     		orrs	r2, r3
 440 0016 7B68     		ldr	r3, [r7, #4]
 441 0018 DA60     		str	r2, [r3, #12]
2750:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 442              		.loc 2 2750 1
 443 001a C046     		nop
 444 001c BD46     		mov	sp, r7
 445 001e 02B0     		add	sp, sp, #8
 446              		@ sp needed
 447 0020 80BD     		pop	{r7, pc}
 448              	.L20:
 449 0022 C046     		.align	2
 450              	.L19:
 451 0024 FFDFFFFF 		.word	-8193
 452              		.cfi_endproc
 453              	.LFE79:
 455              		.section	.text.LL_ADC_REG_SetOverrun,"ax",%progbits
 456              		.align	1
 457              		.syntax unified
 458              		.code	16
 459              		.thumb_func
 460              		.fpu softvfp
 462              	LL_ADC_REG_SetOverrun:
 463              	.LFB83:
2751:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2752:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2753:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
2754:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
2755:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
2756:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
2757:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           conversions launched successively automatically.
2758:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
2759:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2760:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2761:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
2762:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
2763:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2764:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
2765:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2766:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
2767:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2768:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2769:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2770:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
2771:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
2772:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
2773:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode:
2774:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
2775:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
2776:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions) is reached.
2777:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
ARM GAS  /tmp/cctetIQd.s 			page 73


2778:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
2779:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
2780:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions).
2781:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
2782:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
2783:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode non-circular:
2784:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
2785:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
2786:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
2787:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
2788:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
2789:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2790:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2791:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2792:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2793:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
2794:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
2795:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2796:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
2797:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
2798:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
2799:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
2800:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2801:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2802:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
2803:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2804:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
2805:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2806:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2807:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2808:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
2809:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
2810:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
2811:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode:
2812:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
2813:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
2814:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions) is reached.
2815:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
2816:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
2817:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
2818:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           ADC conversions).
2819:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
2820:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
2821:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         mode non-circular:
2822:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
2823:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
2824:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
2825:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
2826:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
2827:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
2828:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
2829:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2830:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2831:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
2832:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
2833:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
2834:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  /tmp/cctetIQd.s 			page 74


2835:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
2836:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2837:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
2838:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2839:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2840:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2841:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
2842:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         data preserved or overwritten.
2843:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
2844:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         other devices without this feature have a behavior
2845:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         equivalent to data overwritten.
2846:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
2847:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
2848:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         overrun should be set to data overwritten.
2849:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2850:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2851:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2852:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2853:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
2854:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2855:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
2856:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
2857:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
2858:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2859:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2860:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
2861:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 464              		.loc 2 2861 1
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 8
 467              		@ frame_needed = 1, uses_anonymous_args = 0
 468 0000 80B5     		push	{r7, lr}
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 7, -8
 471              		.cfi_offset 14, -4
 472 0002 82B0     		sub	sp, sp, #8
 473              		.cfi_def_cfa_offset 16
 474 0004 00AF     		add	r7, sp, #0
 475              		.cfi_def_cfa_register 7
 476 0006 7860     		str	r0, [r7, #4]
 477 0008 3960     		str	r1, [r7]
2862:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
 478              		.loc 2 2862 3
 479 000a 7B68     		ldr	r3, [r7, #4]
 480 000c DB68     		ldr	r3, [r3, #12]
 481 000e 054A     		ldr	r2, .L22
 482 0010 1A40     		ands	r2, r3
 483 0012 3B68     		ldr	r3, [r7]
 484 0014 1A43     		orrs	r2, r3
 485 0016 7B68     		ldr	r3, [r7, #4]
 486 0018 DA60     		str	r2, [r3, #12]
2863:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 487              		.loc 2 2863 1
 488 001a C046     		nop
 489 001c BD46     		mov	sp, r7
 490 001e 02B0     		add	sp, sp, #8
 491              		@ sp needed
ARM GAS  /tmp/cctetIQd.s 			page 75


 492 0020 80BD     		pop	{r7, pc}
 493              	.L23:
 494 0022 C046     		.align	2
 495              	.L22:
 496 0024 FFEFFFFF 		.word	-4097
 497              		.cfi_endproc
 498              	.LFE83:
 500              		.section	.text.LL_ADC_Enable,"ax",%progbits
 501              		.align	1
 502              		.syntax unified
 503              		.code	16
 504              		.thumb_func
 505              		.fpu softvfp
 507              	LL_ADC_Enable:
 508              	.LFB100:
2864:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2865:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2866:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
2867:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         data preserved or overwritten.
2868:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
2869:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2870:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2871:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
2872:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
2873:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2874:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
2875:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2876:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
2877:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2878:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2879:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2880:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
2881:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2882:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2883:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2884:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
2885:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
2886:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2887:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2888:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2889:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
2890:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a single channel or all channels,
2891:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on ADC group regular.
2892:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
2893:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled.
2894:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
2895:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
2896:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
2897:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
2898:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
2899:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
2900:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
2901:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
2902:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
2903:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
2904:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2905:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/cctetIQd.s 			page 76


2906:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2907:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2908:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    AWDCH          LL_ADC_SetAnalogWDMonitChannels\n
2909:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDSGL         LL_ADC_SetAnalogWDMonitChannels\n
2910:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDEN          LL_ADC_SetAnalogWDMonitChannels
2911:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2912:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
2913:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2914:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
2915:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
2916:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
2917:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
2918:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
2919:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
2920:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
2921:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
2922:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
2923:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
2924:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
2925:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
2926:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
2927:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
2928:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
2929:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
2930:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
2931:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (1)
2932:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
2933:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
2934:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
2935:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
2936:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VLCD_REG             (1)
2937:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         
2938:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (1) On STM32L0, parameter not available on all devices: only on STM32L053xx, STM32L063x
2939:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
2940:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
2941:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDChannelGroup)
2942:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
2943:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1,
2944:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDSGL | ADC_CFGR1_AWDEN),
2945:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (AWDChannelGroup & ADC_AWD_CR_ALL_CHANNEL_MASK));
2946:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
2947:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
2948:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
2949:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
2950:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2951:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2952:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2953:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2954:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2955:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2956:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2957:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           as parameter for another function.
2958:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2959:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           process the returned value with the helper macro
2960:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2961:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
2962:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           one channel.
ARM GAS  /tmp/cctetIQd.s 			page 77


2963:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
2964:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
2965:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
2966:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
2967:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
2968:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
2969:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
2970:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2971:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
2972:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2973:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
2974:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR1    AWDCH          LL_ADC_GetAnalogWDMonitChannels\n
2975:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDSGL         LL_ADC_GetAnalogWDMonitChannels\n
2976:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR1    AWDEN          LL_ADC_GetAnalogWDMonitChannels
2977:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
2978:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2979:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
2980:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
2981:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
2982:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
2983:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
2984:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
2985:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
2986:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
2987:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
2988:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
2989:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
2990:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
2991:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
2992:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
2993:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
2994:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
2995:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
2996:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
2997:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
2998:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
2999:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
3000:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3001:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx)
3002:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3003:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t AWDChannelGroup = READ_BIT(ADCx->CFGR1, (ADC_CFGR1_AWDCH | ADC_CFGR1_AWDSGL | ADC_CFGR1_
3004:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   
3005:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Set variable according to channel definition including channel ID  */
3006:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       with bitfield.                                                     */
3007:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t AWDChannelSingle = ((AWDChannelGroup & ADC_CFGR1_AWDSGL) >> ADC_CFGR1_AWDSGL_BITOFFSET_P
3008:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   uint32_t AWDChannelBitField = (ADC_CHANNEL_0_BITFIELD << ((AWDChannelGroup & ADC_CHANNEL_ID_NUMBE
3009:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   
3010:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (AWDChannelGroup | (AWDChannelBitField * AWDChannelSingle));
3011:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3012:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3013:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3014:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
3015:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         high and low.
3016:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
3017:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
3018:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3019:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
ARM GAS  /tmp/cctetIQd.s 			page 78


3020:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3021:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
3022:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
3023:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3024:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3025:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3026:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3027:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
3028:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3029:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3030:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3031:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3032:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll TR       HT             LL_ADC_ConfigAnalogWDThresholds\n
3033:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TR       LT             LL_ADC_ConfigAnalogWDThresholds
3034:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3035:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
3036:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
3037:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3038:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3039:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdHighVa
3040:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3041:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->TR,
3042:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_TR_HT | ADC_TR_LT,
3043:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR_HT_BITOFFSET_POS) | AWDThresholdLowValue);
3044:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3045:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3046:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3047:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
3048:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         high or low.
3049:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
3050:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
3051:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3052:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3053:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3054:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, there is only 1 kind of analog watchdog
3055:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         instance:
3056:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3057:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3058:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3059:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3060:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *             ADC resolution configured).
3061:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3062:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3063:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3064:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3065:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll TR       HT             LL_ADC_SetAnalogWDThresholds\n
3066:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TR       LT             LL_ADC_SetAnalogWDThresholds
3067:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3068:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3069:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3070:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3071:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
3072:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3073:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3074:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdsHighLow,
3075:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3076:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "AWDThresholdsHighLow" is used with mask "0x00000010"          */
ARM GAS  /tmp/cctetIQd.s 			page 79


3077:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* to be equivalent to "POSITION_VAL(AWDThresholdsHighLow)": if threshold   */
3078:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* high is selected, then data is shifted to LSB. Else(threshold low),      */
3079:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* data is not shifted.                                                     */
3080:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->TR,
3081:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              AWDThresholdsHighLow,
3082:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow >> ADC_TR_HT_BITOFFSET_POS) & ((uint32_t)0
3083:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3084:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3085:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3086:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
3087:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
3088:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         concatenated.
3089:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
3090:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
3091:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         using helper macro:
3092:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
3093:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3094:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3095:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
3096:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll TR       HT             LL_ADC_GetAnalogWDThresholds\n
3097:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         TR       LT             LL_ADC_GetAnalogWDThresholds
3098:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3099:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3100:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3101:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3102:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
3103:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3104:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
3105:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDThresholdsHigh
3106:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3107:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Parameter "AWDThresholdsHighLow" is used with mask "0x00000010"          */
3108:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* to be equivalent to "POSITION_VAL(AWDThresholdsHighLow)": if threshold   */
3109:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* high is selected, then data is shifted to LSB. Else(threshold low or     */
3110:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* both thresholds), data is not shifted.                                   */
3111:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->TR,
3112:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR_LT))
3113:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                     >> ((~AWDThresholdsHighLow) & (0x00000010U))
3114:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****                    );
3115:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3116:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3117:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3118:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3119:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3120:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3121:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
3122:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3123:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3124:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3125:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3126:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC oversampling scope.
3127:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3128:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3129:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3130:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3131:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_SetOverSamplingScope
3132:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3133:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
ARM GAS  /tmp/cctetIQd.s 			page 80


3134:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
3135:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
3136:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3137:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3138:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
3139:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3140:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
3141:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3142:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3143:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3144:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling scope.
3145:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_GetOverSamplingScope
3146:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3147:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3148:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
3149:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
3150:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3151:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
3152:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3153:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
3154:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3155:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3156:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3157:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
3158:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on the selected ADC group.
3159:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
3160:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
3161:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           are done from 1 trigger)
3162:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
3163:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           needs a trigger)
3164:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3165:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3166:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3167:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3168:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_SetOverSamplingDiscont
3169:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3170:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
3171:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
3172:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
3173:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3174:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3175:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
3176:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3177:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
3178:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3179:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3180:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3181:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
3182:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on the selected ADC group.
3183:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
3184:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
3185:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           are done from 1 trigger)
3186:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
3187:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           needs a trigger)
3188:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_GetOverSamplingDiscont
3189:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3190:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /tmp/cctetIQd.s 			page 81


3191:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
3192:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
3193:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3194:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
3195:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3196:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
3197:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3198:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3199:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3200:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Set ADC oversampling
3201:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
3202:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - ratio
3203:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - shift
3204:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3205:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3206:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3207:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3208:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
3209:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
3210:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3211:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
3212:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
3213:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
3214:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
3215:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
3216:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
3217:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
3218:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
3219:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
3220:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
3221:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
3222:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
3223:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
3224:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
3225:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
3226:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
3227:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
3228:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
3229:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
3230:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3231:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3232:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
3233:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3234:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
3235:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3236:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3237:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3238:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
3239:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
3240:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3241:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
3242:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
3243:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
3244:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
3245:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
3246:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
3247:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
ARM GAS  /tmp/cctetIQd.s 			page 82


3248:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
3249:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
3250:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
3251:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
3252:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3253:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
3254:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3255:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3256:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3257:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
3258:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
3259:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3260:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
3261:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
3262:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
3263:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
3264:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
3265:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
3266:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
3267:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
3268:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
3269:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
3270:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** */
3271:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
3272:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3273:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
3274:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3275:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3276:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3277:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3278:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3279:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3280:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
3281:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3282:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3283:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3284:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3285:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
3286:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, there are three possibilities to enable
3287:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         the voltage regulator:
3288:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - by enabling it manually
3289:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           using function @ref LL_ADC_EnableInternalRegulator().
3290:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - by launching a calibration
3291:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           using function @ref LL_ADC_StartCalibration().
3292:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - by enabling the ADC
3293:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           using function @ref LL_ADC_Enable().
3294:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, after ADC internal voltage regulator enable,
3295:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
3296:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
3297:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet, parameter "tUP_LDO".
3298:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
3299:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3300:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3301:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled.
3302:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
3303:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3304:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/cctetIQd.s 			page 83


3305:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3306:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
3307:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3308:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3309:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3310:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3311:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3312:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3313:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADVREGEN);
3314:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3315:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3316:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3317:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
3318:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3319:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3320:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled.
3321:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
3322:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3323:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3324:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3325:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
3326:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3327:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
3328:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3329:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3330:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3331:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
3332:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
3333:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3334:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
3335:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3336:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
3337:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3338:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN));
3339:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3340:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3341:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3342:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
3343:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, after ADC enable, a delay for 
3344:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
3345:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC conversion start.
3346:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
3347:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
3348:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
3349:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
3350:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3351:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3352:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
3353:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
3354:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3355:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3356:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3357:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
3358:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 509              		.loc 2 3358 1
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cctetIQd.s 			page 84


 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513 0000 80B5     		push	{r7, lr}
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 7, -8
 516              		.cfi_offset 14, -4
 517 0002 82B0     		sub	sp, sp, #8
 518              		.cfi_def_cfa_offset 16
 519 0004 00AF     		add	r7, sp, #0
 520              		.cfi_def_cfa_register 7
 521 0006 7860     		str	r0, [r7, #4]
3359:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3360:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3361:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3362:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 522              		.loc 2 3362 3
 523 0008 7B68     		ldr	r3, [r7, #4]
 524 000a 9B68     		ldr	r3, [r3, #8]
 525 000c 044A     		ldr	r2, .L25
 526 000e 1340     		ands	r3, r2
 527 0010 0122     		movs	r2, #1
 528 0012 1A43     		orrs	r2, r3
 529 0014 7B68     		ldr	r3, [r7, #4]
 530 0016 9A60     		str	r2, [r3, #8]
3363:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3364:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADEN);
3365:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 531              		.loc 2 3365 1
 532 0018 C046     		nop
 533 001a BD46     		mov	sp, r7
 534 001c 02B0     		add	sp, sp, #8
 535              		@ sp needed
 536 001e 80BD     		pop	{r7, pc}
 537              	.L26:
 538              		.align	2
 539              	.L25:
 540 0020 E8FFFF7F 		.word	2147483624
 541              		.cfi_endproc
 542              	.LFE100:
 544              		.section	.text.LL_ADC_Disable,"ax",%progbits
 545              		.align	1
 546              		.syntax unified
 547              		.code	16
 548              		.thumb_func
 549              		.fpu softvfp
 551              	LL_ADC_Disable:
 552              	.LFB101:
3366:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3367:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3368:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
3369:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3370:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3371:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
3372:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         on group regular.
3373:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
3374:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3375:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3376:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  /tmp/cctetIQd.s 			page 85


3377:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
3378:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 553              		.loc 2 3378 1
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 8
 556              		@ frame_needed = 1, uses_anonymous_args = 0
 557 0000 80B5     		push	{r7, lr}
 558              		.cfi_def_cfa_offset 8
 559              		.cfi_offset 7, -8
 560              		.cfi_offset 14, -4
 561 0002 82B0     		sub	sp, sp, #8
 562              		.cfi_def_cfa_offset 16
 563 0004 00AF     		add	r7, sp, #0
 564              		.cfi_def_cfa_register 7
 565 0006 7860     		str	r0, [r7, #4]
3379:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3380:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3381:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3382:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 566              		.loc 2 3382 3
 567 0008 7B68     		ldr	r3, [r7, #4]
 568 000a 9B68     		ldr	r3, [r3, #8]
 569 000c 044A     		ldr	r2, .L28
 570 000e 1340     		ands	r3, r2
 571 0010 0222     		movs	r2, #2
 572 0012 1A43     		orrs	r2, r3
 573 0014 7B68     		ldr	r3, [r7, #4]
 574 0016 9A60     		str	r2, [r3, #8]
3383:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3384:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADDIS);
3385:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 575              		.loc 2 3385 1
 576 0018 C046     		nop
 577 001a BD46     		mov	sp, r7
 578 001c 02B0     		add	sp, sp, #8
 579              		@ sp needed
 580 001e 80BD     		pop	{r7, pc}
 581              	.L29:
 582              		.align	2
 583              	.L28:
 584 0020 E8FFFF7F 		.word	2147483624
 585              		.cfi_endproc
 586              	.LFE101:
 588              		.section	.text.LL_ADC_IsEnabled,"ax",%progbits
 589              		.align	1
 590              		.syntax unified
 591              		.code	16
 592              		.thumb_func
 593              		.fpu softvfp
 595              	LL_ADC_IsEnabled:
 596              	.LFB102:
3386:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3387:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3388:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
3389:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
3390:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
3391:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
ARM GAS  /tmp/cctetIQd.s 			page 86


3392:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
3393:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3394:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
3395:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3396:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
3397:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 597              		.loc 2 3397 1
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 8
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 82B0     		sub	sp, sp, #8
 606              		.cfi_def_cfa_offset 16
 607 0004 00AF     		add	r7, sp, #0
 608              		.cfi_def_cfa_register 7
 609 0006 7860     		str	r0, [r7, #4]
3398:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN));
 610              		.loc 2 3398 11
 611 0008 7B68     		ldr	r3, [r7, #4]
 612 000a 9B68     		ldr	r3, [r3, #8]
 613 000c 0122     		movs	r2, #1
 614 000e 1340     		ands	r3, r2
 615              		.loc 2 3398 43
 616 0010 013B     		subs	r3, r3, #1
 617 0012 5A42     		rsbs	r2, r3, #0
 618 0014 5341     		adcs	r3, r3, r2
 619 0016 DBB2     		uxtb	r3, r3
3399:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 620              		.loc 2 3399 1
 621 0018 1800     		movs	r0, r3
 622 001a BD46     		mov	sp, r7
 623 001c 02B0     		add	sp, sp, #8
 624              		@ sp needed
 625 001e 80BD     		pop	{r7, pc}
 626              		.cfi_endproc
 627              	.LFE102:
 629              		.section	.text.LL_ADC_IsDisableOngoing,"ax",%progbits
 630              		.align	1
 631              		.syntax unified
 632              		.code	16
 633              		.thumb_func
 634              		.fpu softvfp
 636              	LL_ADC_IsDisableOngoing:
 637              	.LFB103:
3400:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3401:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3402:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
3403:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
3404:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3405:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
3406:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3407:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
3408:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 638              		.loc 2 3408 1
ARM GAS  /tmp/cctetIQd.s 			page 87


 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 8
 641              		@ frame_needed = 1, uses_anonymous_args = 0
 642 0000 80B5     		push	{r7, lr}
 643              		.cfi_def_cfa_offset 8
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 82B0     		sub	sp, sp, #8
 647              		.cfi_def_cfa_offset 16
 648 0004 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 650 0006 7860     		str	r0, [r7, #4]
3409:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS));
 651              		.loc 2 3409 11
 652 0008 7B68     		ldr	r3, [r7, #4]
 653 000a 9B68     		ldr	r3, [r3, #8]
 654 000c 0222     		movs	r2, #2
 655 000e 1340     		ands	r3, r2
 656              		.loc 2 3409 44
 657 0010 023B     		subs	r3, r3, #2
 658 0012 5A42     		rsbs	r2, r3, #0
 659 0014 5341     		adcs	r3, r3, r2
 660 0016 DBB2     		uxtb	r3, r3
3410:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 661              		.loc 2 3410 1
 662 0018 1800     		movs	r0, r3
 663 001a BD46     		mov	sp, r7
 664 001c 02B0     		add	sp, sp, #8
 665              		@ sp needed
 666 001e 80BD     		pop	{r7, pc}
 667              		.cfi_endproc
 668              	.LFE103:
 670              		.section	.text.LL_ADC_StartCalibration,"ax",%progbits
 671              		.align	1
 672              		.syntax unified
 673              		.code	16
 674              		.thumb_func
 675              		.fpu softvfp
 677              	LL_ADC_StartCalibration:
 678              	.LFB104:
3411:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3412:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3413:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
3414:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
3415:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, a minimum number of ADC clock cycles
3416:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
3417:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
3418:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
3419:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         On this STM32 serie, ADC DMA transfer request should be disabled
3420:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         during calibration:
3421:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Calibration factor is available in data register
3422:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         and also transfered by DMA.
3423:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
3424:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
3425:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         calibration.
3426:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
3427:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
ARM GAS  /tmp/cctetIQd.s 			page 88


3428:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
3429:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
3430:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3431:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3432:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be ADC disabled.
3433:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
3434:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3435:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3436:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3437:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
3438:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 679              		.loc 2 3438 1
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 8
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683 0000 80B5     		push	{r7, lr}
 684              		.cfi_def_cfa_offset 8
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687 0002 82B0     		sub	sp, sp, #8
 688              		.cfi_def_cfa_offset 16
 689 0004 00AF     		add	r7, sp, #0
 690              		.cfi_def_cfa_register 7
 691 0006 7860     		str	r0, [r7, #4]
3439:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3440:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3441:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3442:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 692              		.loc 2 3442 3
 693 0008 7B68     		ldr	r3, [r7, #4]
 694 000a 9B68     		ldr	r3, [r3, #8]
 695 000c 054A     		ldr	r2, .L35
 696 000e 1340     		ands	r3, r2
 697 0010 8022     		movs	r2, #128
 698 0012 1206     		lsls	r2, r2, #24
 699 0014 1A43     		orrs	r2, r3
 700 0016 7B68     		ldr	r3, [r7, #4]
 701 0018 9A60     		str	r2, [r3, #8]
3443:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3444:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADCAL);
3445:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 702              		.loc 2 3445 1
 703 001a C046     		nop
 704 001c BD46     		mov	sp, r7
 705 001e 02B0     		add	sp, sp, #8
 706              		@ sp needed
 707 0020 80BD     		pop	{r7, pc}
 708              	.L36:
 709 0022 C046     		.align	2
 710              	.L35:
 711 0024 E8FFFF7F 		.word	2147483624
 712              		.cfi_endproc
 713              	.LFE104:
 715              		.section	.text.LL_ADC_IsCalibrationOnGoing,"ax",%progbits
 716              		.align	1
 717              		.syntax unified
 718              		.code	16
ARM GAS  /tmp/cctetIQd.s 			page 89


 719              		.thumb_func
 720              		.fpu softvfp
 722              	LL_ADC_IsCalibrationOnGoing:
 723              	.LFB105:
3446:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3447:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3448:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC calibration state.
3449:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
3450:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3451:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
3452:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3453:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
3454:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 724              		.loc 2 3454 1
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 8
 727              		@ frame_needed = 1, uses_anonymous_args = 0
 728 0000 80B5     		push	{r7, lr}
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 7, -8
 731              		.cfi_offset 14, -4
 732 0002 82B0     		sub	sp, sp, #8
 733              		.cfi_def_cfa_offset 16
 734 0004 00AF     		add	r7, sp, #0
 735              		.cfi_def_cfa_register 7
 736 0006 7860     		str	r0, [r7, #4]
3455:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL));
 737              		.loc 2 3455 11
 738 0008 7B68     		ldr	r3, [r7, #4]
 739 000a 9B68     		ldr	r3, [r3, #8]
 740 000c DB0F     		lsrs	r3, r3, #31
 741 000e DB07     		lsls	r3, r3, #31
 742              		.loc 2 3455 44
 743 0010 8022     		movs	r2, #128
 744 0012 1206     		lsls	r2, r2, #24
 745 0014 9446     		mov	ip, r2
 746 0016 6344     		add	r3, r3, ip
 747 0018 5A42     		rsbs	r2, r3, #0
 748 001a 5341     		adcs	r3, r3, r2
 749 001c DBB2     		uxtb	r3, r3
3456:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 750              		.loc 2 3456 1
 751 001e 1800     		movs	r0, r3
 752 0020 BD46     		mov	sp, r7
 753 0022 02B0     		add	sp, sp, #8
 754              		@ sp needed
 755 0024 80BD     		pop	{r7, pc}
 756              		.cfi_endproc
 757              	.LFE105:
 759              		.section	.text.LL_ADC_REG_StartConversion,"ax",%progbits
 760              		.align	1
 761              		.syntax unified
 762              		.code	16
 763              		.thumb_func
 764              		.fpu softvfp
 766              	LL_ADC_REG_StartConversion:
 767              	.LFB106:
ARM GAS  /tmp/cctetIQd.s 			page 90


3457:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3458:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3459:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3460:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3461:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3462:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
3463:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3464:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3465:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3466:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3467:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
3468:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, this function is relevant for both 
3469:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
3470:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
3471:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           starts immediately.
3472:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
3473:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
3474:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *           following the ADC start conversion command.
3475:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3476:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3477:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
3478:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
3479:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without ADC disable command on going.
3480:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
3481:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3482:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3483:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3484:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
3485:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 768              		.loc 2 3485 1
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 8
 771              		@ frame_needed = 1, uses_anonymous_args = 0
 772 0000 80B5     		push	{r7, lr}
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 7, -8
 775              		.cfi_offset 14, -4
 776 0002 82B0     		sub	sp, sp, #8
 777              		.cfi_def_cfa_offset 16
 778 0004 00AF     		add	r7, sp, #0
 779              		.cfi_def_cfa_register 7
 780 0006 7860     		str	r0, [r7, #4]
3486:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3487:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3488:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3489:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 781              		.loc 2 3489 3
 782 0008 7B68     		ldr	r3, [r7, #4]
 783 000a 9B68     		ldr	r3, [r3, #8]
 784 000c 044A     		ldr	r2, .L40
 785 000e 1340     		ands	r3, r2
 786 0010 0422     		movs	r2, #4
 787 0012 1A43     		orrs	r2, r3
 788 0014 7B68     		ldr	r3, [r7, #4]
 789 0016 9A60     		str	r2, [r3, #8]
3490:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3491:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADSTART);
ARM GAS  /tmp/cctetIQd.s 			page 91


3492:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 790              		.loc 2 3492 1
 791 0018 C046     		nop
 792 001a BD46     		mov	sp, r7
 793 001c 02B0     		add	sp, sp, #8
 794              		@ sp needed
 795 001e 80BD     		pop	{r7, pc}
 796              	.L41:
 797              		.align	2
 798              	.L40:
 799 0020 E8FFFF7F 		.word	2147483624
 800              		.cfi_endproc
 801              	.LFE106:
 803              		.section	.text.LL_ADC_REG_IsConversionOngoing,"ax",%progbits
 804              		.align	1
 805              		.syntax unified
 806              		.code	16
 807              		.thumb_func
 808              		.fpu softvfp
 810              	LL_ADC_REG_IsConversionOngoing:
 811              	.LFB108:
3493:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3494:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3495:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
3496:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3497:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC state:
3498:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
3499:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         without ADC disable command on going.
3500:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
3501:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3502:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3503:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3504:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
3505:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3506:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
3507:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
3508:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
3509:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
3510:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
3511:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****              ADC_CR_ADSTP);
3512:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3513:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3514:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3515:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
3516:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
3517:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3518:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
3519:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3520:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
3521:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 812              		.loc 2 3521 1
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 8
 815              		@ frame_needed = 1, uses_anonymous_args = 0
 816 0000 80B5     		push	{r7, lr}
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 7, -8
ARM GAS  /tmp/cctetIQd.s 			page 92


 819              		.cfi_offset 14, -4
 820 0002 82B0     		sub	sp, sp, #8
 821              		.cfi_def_cfa_offset 16
 822 0004 00AF     		add	r7, sp, #0
 823              		.cfi_def_cfa_register 7
 824 0006 7860     		str	r0, [r7, #4]
3522:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART));
 825              		.loc 2 3522 11
 826 0008 7B68     		ldr	r3, [r7, #4]
 827 000a 9B68     		ldr	r3, [r3, #8]
 828 000c 0422     		movs	r2, #4
 829 000e 1340     		ands	r3, r2
 830              		.loc 2 3522 46
 831 0010 043B     		subs	r3, r3, #4
 832 0012 5A42     		rsbs	r2, r3, #0
 833 0014 5341     		adcs	r3, r3, r2
 834 0016 DBB2     		uxtb	r3, r3
3523:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 835              		.loc 2 3523 1
 836 0018 1800     		movs	r0, r3
 837 001a BD46     		mov	sp, r7
 838 001c 02B0     		add	sp, sp, #8
 839              		@ sp needed
 840 001e 80BD     		pop	{r7, pc}
 841              		.cfi_endproc
 842              	.LFE108:
 844              		.section	.text.LL_ADC_REG_ReadConversionData12,"ax",%progbits
 845              		.align	1
 846              		.syntax unified
 847              		.code	16
 848              		.thumb_func
 849              		.fpu softvfp
 851              	LL_ADC_REG_ReadConversionData12:
 852              	.LFB111:
3524:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3525:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3526:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
3527:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
3528:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3529:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
3530:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3531:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
3532:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3533:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP));
3534:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3535:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3536:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3537:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3538:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
3539:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         all oversampling increased data width (for devices
3540:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         with feature oversampling).
3541:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData32
3542:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3543:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
3544:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3545:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
3546:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
ARM GAS  /tmp/cctetIQd.s 			page 93


3547:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3548:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3549:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3550:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3551:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3552:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC resolution 12 bits.
3553:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
3554:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         can increase data width, function for extended range
3555:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
3556:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData12
3557:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3558:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3559:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3560:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
3561:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 853              		.loc 2 3561 1
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 8
 856              		@ frame_needed = 1, uses_anonymous_args = 0
 857 0000 80B5     		push	{r7, lr}
 858              		.cfi_def_cfa_offset 8
 859              		.cfi_offset 7, -8
 860              		.cfi_offset 14, -4
 861 0002 82B0     		sub	sp, sp, #8
 862              		.cfi_def_cfa_offset 16
 863 0004 00AF     		add	r7, sp, #0
 864              		.cfi_def_cfa_register 7
 865 0006 7860     		str	r0, [r7, #4]
3562:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
 866              		.loc 2 3562 21
 867 0008 7B68     		ldr	r3, [r7, #4]
 868 000a 1B6C     		ldr	r3, [r3, #64]
 869              		.loc 2 3562 10
 870 000c 9BB2     		uxth	r3, r3
3563:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 871              		.loc 2 3563 1
 872 000e 1800     		movs	r0, r3
 873 0010 BD46     		mov	sp, r7
 874 0012 02B0     		add	sp, sp, #8
 875              		@ sp needed
 876 0014 80BD     		pop	{r7, pc}
 877              		.cfi_endproc
 878              	.LFE111:
 880              		.section	.text.LL_ADC_IsActiveFlag_ADRDY,"ax",%progbits
 881              		.align	1
 882              		.syntax unified
 883              		.code	16
 884              		.thumb_func
 885              		.fpu softvfp
 887              	LL_ADC_IsActiveFlag_ADRDY:
 888              	.LFB115:
3564:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3565:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3566:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3567:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC resolution 10 bits.
3568:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
3569:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         can increase data width, function for extended range
ARM GAS  /tmp/cctetIQd.s 			page 94


3570:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
3571:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData10
3572:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3573:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
3574:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3575:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
3576:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3577:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3578:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3579:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3580:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3581:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3582:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC resolution 8 bits.
3583:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
3584:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         can increase data width, function for extended range
3585:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
3586:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData8
3587:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3588:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
3589:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3590:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
3591:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3592:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3593:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3594:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3595:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3596:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
3597:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         ADC resolution 6 bits.
3598:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
3599:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         can increase data width, function for extended range
3600:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
3601:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData6
3602:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3603:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
3604:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3605:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
3606:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3607:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
3608:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3609:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3610:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3611:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3612:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3613:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3614:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
3615:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3616:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3617:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3618:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3619:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC ready.
3620:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
3621:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
3622:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
3623:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
3624:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3625:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3626:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
ARM GAS  /tmp/cctetIQd.s 			page 95


3627:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
3628:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 889              		.loc 2 3628 1
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 8
 892              		@ frame_needed = 1, uses_anonymous_args = 0
 893 0000 80B5     		push	{r7, lr}
 894              		.cfi_def_cfa_offset 8
 895              		.cfi_offset 7, -8
 896              		.cfi_offset 14, -4
 897 0002 82B0     		sub	sp, sp, #8
 898              		.cfi_def_cfa_offset 16
 899 0004 00AF     		add	r7, sp, #0
 900              		.cfi_def_cfa_register 7
 901 0006 7860     		str	r0, [r7, #4]
3629:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY));
 902              		.loc 2 3629 11
 903 0008 7B68     		ldr	r3, [r7, #4]
 904 000a 1B68     		ldr	r3, [r3]
 905 000c 0122     		movs	r2, #1
 906 000e 1340     		ands	r3, r2
 907              		.loc 2 3629 50
 908 0010 013B     		subs	r3, r3, #1
 909 0012 5A42     		rsbs	r2, r3, #0
 910 0014 5341     		adcs	r3, r3, r2
 911 0016 DBB2     		uxtb	r3, r3
3630:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 912              		.loc 2 3630 1
 913 0018 1800     		movs	r0, r3
 914 001a BD46     		mov	sp, r7
 915 001c 02B0     		add	sp, sp, #8
 916              		@ sp needed
 917 001e 80BD     		pop	{r7, pc}
 918              		.cfi_endproc
 919              	.LFE115:
 921              		.section	.text.LL_ADC_IsActiveFlag_EOC,"ax",%progbits
 922              		.align	1
 923              		.syntax unified
 924              		.code	16
 925              		.thumb_func
 926              		.fpu softvfp
 928              	LL_ADC_IsActiveFlag_EOC:
 929              	.LFB116:
3631:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3632:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3633:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
3634:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
3635:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3636:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3637:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3638:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
3639:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 930              		.loc 2 3639 1
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 8
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/cctetIQd.s 			page 96


 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 7, -8
 937              		.cfi_offset 14, -4
 938 0002 82B0     		sub	sp, sp, #8
 939              		.cfi_def_cfa_offset 16
 940 0004 00AF     		add	r7, sp, #0
 941              		.cfi_def_cfa_register 7
 942 0006 7860     		str	r0, [r7, #4]
3640:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC));
 943              		.loc 2 3640 11
 944 0008 7B68     		ldr	r3, [r7, #4]
 945 000a 1B68     		ldr	r3, [r3]
 946 000c 0422     		movs	r2, #4
 947 000e 1340     		ands	r3, r2
 948              		.loc 2 3640 44
 949 0010 043B     		subs	r3, r3, #4
 950 0012 5A42     		rsbs	r2, r3, #0
 951 0014 5341     		adcs	r3, r3, r2
 952 0016 DBB2     		uxtb	r3, r3
3641:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 953              		.loc 2 3641 1
 954 0018 1800     		movs	r0, r3
 955 001a BD46     		mov	sp, r7
 956 001c 02B0     		add	sp, sp, #8
 957              		@ sp needed
 958 001e 80BD     		pop	{r7, pc}
 959              		.cfi_endproc
 960              	.LFE116:
 962              		.section	.text.LL_ADC_ClearFlag_EOS,"ax",%progbits
 963              		.align	1
 964              		.syntax unified
 965              		.code	16
 966              		.thumb_func
 967              		.fpu softvfp
 969              	LL_ADC_ClearFlag_EOS:
 970              	.LFB124:
3642:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3643:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3644:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
3645:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOSEQ          LL_ADC_IsActiveFlag_EOS
3646:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3647:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3648:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3649:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
3650:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3651:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS));
3652:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3653:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3654:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3655:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
3656:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
3657:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3658:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3659:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3660:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
3661:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3662:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR));
ARM GAS  /tmp/cctetIQd.s 			page 97


3663:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3664:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3665:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3666:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
3667:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
3668:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3669:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3670:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3671:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
3672:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3673:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP));
3674:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3675:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3676:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3677:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
3678:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      AWD            LL_ADC_IsActiveFlag_AWD1
3679:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3680:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3681:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3682:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
3683:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3684:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1));
3685:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3686:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3687:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3688:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Get flag ADC end of calibration.
3689:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_IsActiveFlag_EOCAL
3690:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3691:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
3692:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3693:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOCAL(ADC_TypeDef *ADCx)
3694:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3695:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   return (READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOCAL) == (LL_ADC_FLAG_EOCAL));
3696:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3697:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3698:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3699:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
3700:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
3701:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
3702:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
3703:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
3704:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3705:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3706:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3707:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
3708:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3709:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
3710:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3711:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3712:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3713:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
3714:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
3715:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3716:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3717:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3718:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
3719:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
ARM GAS  /tmp/cctetIQd.s 			page 98


3720:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
3721:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3722:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3723:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3724:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
3725:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOSEQ          LL_ADC_ClearFlag_EOS
3726:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3727:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3728:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3729:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
3730:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 971              		.loc 2 3730 1
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 8
 974              		@ frame_needed = 1, uses_anonymous_args = 0
 975 0000 80B5     		push	{r7, lr}
 976              		.cfi_def_cfa_offset 8
 977              		.cfi_offset 7, -8
 978              		.cfi_offset 14, -4
 979 0002 82B0     		sub	sp, sp, #8
 980              		.cfi_def_cfa_offset 16
 981 0004 00AF     		add	r7, sp, #0
 982              		.cfi_def_cfa_register 7
 983 0006 7860     		str	r0, [r7, #4]
3731:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
 984              		.loc 2 3731 3
 985 0008 7B68     		ldr	r3, [r7, #4]
 986 000a 0822     		movs	r2, #8
 987 000c 1A60     		str	r2, [r3]
3732:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 988              		.loc 2 3732 1
 989 000e C046     		nop
 990 0010 BD46     		mov	sp, r7
 991 0012 02B0     		add	sp, sp, #8
 992              		@ sp needed
 993 0014 80BD     		pop	{r7, pc}
 994              		.cfi_endproc
 995              	.LFE124:
 997              		.section	.text.LL_ADC_EnableIT_OVR,"ax",%progbits
 998              		.align	1
 999              		.syntax unified
 1000              		.code	16
 1001              		.thumb_func
 1002              		.fpu softvfp
 1004              	LL_ADC_EnableIT_OVR:
 1005              	.LFB132:
3733:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3734:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3735:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
3736:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
3737:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3738:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3739:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3740:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
3741:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3742:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
3743:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
ARM GAS  /tmp/cctetIQd.s 			page 99


3744:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3745:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3746:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
3747:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
3748:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3749:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3750:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3751:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
3752:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3753:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
3754:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3755:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3756:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3757:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
3758:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      AWD            LL_ADC_ClearFlag_AWD1
3759:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3760:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3761:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3762:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
3763:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3764:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
3765:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3766:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3767:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3768:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Clear flag ADC end of calibration.
3769:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_ClearFlag_EOCAL
3770:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3771:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3772:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3773:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOCAL(ADC_TypeDef *ADCx)
3774:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3775:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOCAL);
3776:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3777:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3778:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3779:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @}
3780:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3781:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3782:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
3783:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @{
3784:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3785:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3786:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3787:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable ADC ready.
3788:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
3789:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3790:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3791:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3792:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
3793:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3794:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
3795:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3796:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3797:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3798:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
3799:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
3800:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/cctetIQd.s 			page 100


3801:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3802:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3803:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
3804:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3805:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
3806:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3807:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3808:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3809:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
3810:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      EOSEQIE        LL_ADC_EnableIT_EOS
3811:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3812:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3813:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3814:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
3815:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
3816:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
3817:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
3818:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** 
3819:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** /**
3820:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
3821:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
3822:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @param  ADCx ADC instance
3823:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   * @retval None
3824:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   */
3825:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
3826:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** {
 1006              		.loc 2 3826 1
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 8
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010 0000 80B5     		push	{r7, lr}
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 7, -8
 1013              		.cfi_offset 14, -4
 1014 0002 82B0     		sub	sp, sp, #8
 1015              		.cfi_def_cfa_offset 16
 1016 0004 00AF     		add	r7, sp, #0
 1017              		.cfi_def_cfa_register 7
 1018 0006 7860     		str	r0, [r7, #4]
3827:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
 1019              		.loc 2 3827 3
 1020 0008 7B68     		ldr	r3, [r7, #4]
 1021 000a 5B68     		ldr	r3, [r3, #4]
 1022 000c 1022     		movs	r2, #16
 1023 000e 1A43     		orrs	r2, r3
 1024 0010 7B68     		ldr	r3, [r7, #4]
 1025 0012 5A60     		str	r2, [r3, #4]
3828:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_adc.h **** }
 1026              		.loc 2 3828 1
 1027 0014 C046     		nop
 1028 0016 BD46     		mov	sp, r7
 1029 0018 02B0     		add	sp, sp, #8
 1030              		@ sp needed
 1031 001a 80BD     		pop	{r7, pc}
 1032              		.cfi_endproc
 1033              	.LFE132:
 1035              		.section	.text.LL_APB2_GRP1_EnableClock,"ax",%progbits
ARM GAS  /tmp/cctetIQd.s 			page 101


 1036              		.align	1
 1037              		.syntax unified
 1038              		.code	16
 1039              		.thumb_func
 1040              		.fpu softvfp
 1042              	LL_APB2_GRP1_EnableClock:
 1043              	.LFB164:
 1044              		.file 3 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h"
   1:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
   2:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
   3:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @file    stm32l0xx_ll_bus.h
   4:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @author  MCD Application Team
   5:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
   7:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   @verbatim
   8:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ==============================================================================
  10:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****     [..]
  11:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       from/to registers.
  14:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  17:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****     [..]
  18:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       Workarounds:
  19:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  22:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   @endverbatim
  23:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
  24:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @attention
  25:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  26:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * <h2><center>&copy; Copyright(c) 2016 STMicroelectronics.
  27:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  29:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  34:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
  35:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  36:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  37:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #ifndef __STM32L0xx_LL_BUS_H
  39:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define __STM32L0xx_LL_BUS_H
  40:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  41:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #ifdef __cplusplus
  42:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** extern "C" {
  43:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
  44:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  45:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #include "stm32l0xx.h"
  47:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  48:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @addtogroup STM32L0xx_LL_Driver
  49:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
ARM GAS  /tmp/cctetIQd.s 			page 102


  50:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  51:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  52:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(RCC)
  53:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  54:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  56:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  57:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  58:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  61:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  63:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  64:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  65:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  66:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  69:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  70:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  71:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  73:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  74:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  75:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN      /*!< DMA1 clock enable */
  76:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_MIF            RCC_AHBENR_MIFEN       /*!< MIF clock enable */
  77:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBSMENR_SRAMSMEN  /*!< Sleep Mode SRAM clock enable
  78:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN       /*!< CRC clock enable */
  79:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TSC)
  80:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHBENR_TSCEN       /*!< TSC clock enable */
  81:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*TSC*/
  82:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(RNG)
  83:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_RNG            RCC_AHBENR_RNGEN       /*!< RNG clock enable */
  84:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*RNG*/
  85:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(AES)
  86:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRYP           RCC_AHBENR_CRYPEN      /*!< CRYP clock enable */
  87:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*AES*/
  88:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
  89:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
  90:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  91:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  92:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  93:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
  94:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  95:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  96:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  97:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN     /*!< TIM2 clock enable */
  98:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM3)
  99:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN     /*!< TIM3 clock enable */
 100:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 101:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM6)
 102:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN     /*!< TIM6 clock enable */
 103:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 104:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM7)
 105:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN     /*!< TIM7 clock enable */
 106:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
ARM GAS  /tmp/cctetIQd.s 			page 103


 107:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(LCD)
 108:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LCD            RCC_APB1ENR_LCDEN      /*!< LCD clock enable */
 109:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*LCD*/
 110:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN     /*!< WWDG clock enable */
 111:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(SPI2)
 112:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN     /*!< SPI2 clock enable */
 113:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 114:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN   /*!< USART2 clock enable */
 115:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPUART1        RCC_APB1ENR_LPUART1EN  /*!< LPUART1 clock enable */
 116:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART4)
 117:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APB1ENR_USART4EN   /*!< USART4 clock enable */
 118:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 119:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART5)
 120:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART5         RCC_APB1ENR_USART5EN   /*!< USART5 clock enable */
 121:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 122:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN     /*!< I2C1 clock enable */
 123:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(I2C2)
 124:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN     /*!< I2C2 clock enable */
 125:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 126:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USB)
 127:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN      /*!< USB clock enable */
 128:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*USB*/
 129:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(CRS)
 130:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR_CRSEN      /*!< CRS clock enable */
 131:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*CRS*/
 132:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN      /*!< PWR clock enable */
 133:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(DAC)
 134:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN      /*!< DAC clock enable */
 135:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 136:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(I2C3)
 137:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR_I2C3EN     /*!< I2C3 clock enable */
 138:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 139:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR_LPTIM1EN   /*!< LPTIM1 clock enable */
 140:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 141:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 142:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 143:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 144:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 145:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 146:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 147:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 148:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 149:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 150:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 151:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN  /*!< SYSCFG clock enable */
 152:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM21          RCC_APB2ENR_TIM21EN   /*!< TIM21 clock enable */
 153:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM22)
 154:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM22          RCC_APB2ENR_TIM22EN   /*!< TIM22 clock enable */
 155:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 156:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_FW             RCC_APB2ENR_FWEN      /*!< FireWall clock enable */
 157:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC1           RCC_APB2ENR_ADC1EN    /*!< ADC1 clock enable */
 158:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN    /*!< SPI1 clock enable */
 159:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART1)
 160:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN  /*!< USART1 clock enable */
 161:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 162:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DBGMCU         RCC_APB2ENR_DBGMCUEN  /*!< DBGMCU clock enable */
 163:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
ARM GAS  /tmp/cctetIQd.s 			page 104


 164:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 165:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 166:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 167:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 168:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 169:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 170:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_IOP_GRP1_PERIPH  IOP GRP1 PERIPH
 171:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 172:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 173:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_ALL             0xFFFFFFFFU
 174:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOA           RCC_IOPENR_GPIOAEN    /*!< GPIO port A control */
 175:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOB           RCC_IOPENR_GPIOBEN    /*!< GPIO port B control */
 176:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOC           RCC_IOPENR_GPIOCEN    /*!< GPIO port C control */
 177:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOD)
 178:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOD           RCC_IOPENR_GPIODEN    /*!< GPIO port D control */
 179:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOD*/
 180:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOE)
 181:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOE           RCC_IOPENR_GPIOEEN    /*!< GPIO port H control */
 182:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOE*/
 183:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOH)
 184:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOH           RCC_IOPENR_GPIOHEN    /*!< GPIO port H control */
 185:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOH*/
 186:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 187:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 188:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 189:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 190:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 191:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 192:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 193:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 194:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 195:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 196:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 197:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 198:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 199:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 200:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 201:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 202:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 203:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 204:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 205:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 206:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 207:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_EnableClock\n
 208:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_EnableClock\n
 209:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_EnableClock\n
 210:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_EnableClock\n
 211:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_EnableClock\n
 212:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_EnableClock
 213:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 214:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 215:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 216:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 217:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 218:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 219:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 220:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
ARM GAS  /tmp/cctetIQd.s 			page 105


 221:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 222:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 223:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 224:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 225:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 226:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 227:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 228:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 229:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 230:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 231:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 232:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 233:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 234:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 235:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_IsEnabledClock\n
 236:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_IsEnabledClock\n
 237:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_IsEnabledClock\n
 238:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_IsEnabledClock\n
 239:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_IsEnabledClock\n
 240:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_IsEnabledClock
 241:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 242:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 243:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 244:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 245:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 246:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 247:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 248:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 249:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 250:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 251:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 252:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 253:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 254:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->AHBENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 255:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 256:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 257:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 258:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 259:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_DisableClock\n
 260:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_DisableClock\n
 261:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_DisableClock\n
 262:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_DisableClock\n
 263:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_DisableClock\n
 264:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_DisableClock
 265:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 266:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 267:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 268:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 269:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 270:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 271:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 272:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 273:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 274:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 275:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 276:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 277:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
ARM GAS  /tmp/cctetIQd.s 			page 106


 278:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 279:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 280:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 281:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 282:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 283:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMARST        LL_AHB1_GRP1_ForceReset\n
 284:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      MIFRST        LL_AHB1_GRP1_ForceReset\n
 285:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ForceReset\n
 286:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ForceReset\n
 287:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ForceReset\n
 288:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRYPRST       LL_AHB1_GRP1_ForceReset
 289:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 290:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 291:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 292:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 293:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 294:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 295:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 296:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 297:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 298:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 299:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 300:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 301:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 302:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 303:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 304:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 305:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 306:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 307:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 308:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMARST        LL_AHB1_GRP1_ReleaseReset\n
 309:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      MIFRST        LL_AHB1_GRP1_ReleaseReset\n
 310:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 311:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ReleaseReset\n
 312:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ReleaseReset\n
 313:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRYPRST       LL_AHB1_GRP1_ReleaseReset
 314:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 315:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 316:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 317:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 318:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 319:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 320:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 321:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 322:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 323:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 324:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 325:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 326:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 327:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 328:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 329:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 330:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 331:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 332:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock during Low Power (Sleep) mode.
 333:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMASMEN       LL_AHB1_GRP1_EnableClockSleep\n
 334:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     MIFSMEN       LL_AHB1_GRP1_EnableClockSleep\n
ARM GAS  /tmp/cctetIQd.s 			page 107


 335:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_EnableClockSleep\n
 336:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 337:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     TSCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 338:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 339:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRYPSMEN      LL_AHB1_GRP1_EnableClockSleep
 340:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 341:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 342:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 343:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 344:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 345:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 346:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 347:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 348:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 349:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 350:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 351:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 352:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockSleep(uint32_t Periphs)
 353:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 354:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 355:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBSMENR, Periphs);
 356:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 357:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBSMENR, Periphs);
 358:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 359:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 360:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 361:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 362:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock during Low Power (Sleep) mode.
 363:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMASMEN       LL_AHB1_GRP1_DisableClockSleep\n
 364:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     MIFSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 365:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_DisableClockSleep\n
 366:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 367:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     TSCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 368:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 369:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRYPSMEN      LL_AHB1_GRP1_DisableClockSleep
 370:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 371:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 372:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 373:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 374:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 375:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 376:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 377:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 378:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 379:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 380:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 381:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 382:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockSleep(uint32_t Periphs)
 383:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 384:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBSMENR, Periphs);
 385:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 386:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 387:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 388:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 389:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 390:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 391:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
ARM GAS  /tmp/cctetIQd.s 			page 108


 392:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 393:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 394:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 395:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 396:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 397:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_EnableClock\n
 398:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_EnableClock\n
 399:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_EnableClock\n
 400:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_EnableClock\n
 401:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_EnableClock\n
 402:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_EnableClock\n
 403:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_EnableClock\n
 404:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_EnableClock\n
 405:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_EnableClock\n
 406:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_EnableClock\n
 407:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_EnableClock\n
 408:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_EnableClock\n
 409:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_EnableClock\n
 410:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_EnableClock\n
 411:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_EnableClock\n
 412:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_EnableClock\n
 413:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_EnableClock\n
 414:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_EnableClock\n
 415:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_EnableClock
 416:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 417:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 418:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 419:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 420:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 421:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 422:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 423:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 424:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 425:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 426:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 427:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 428:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 429:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 430:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 431:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 432:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 433:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 434:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 435:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 436:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 437:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 438:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 439:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 440:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 441:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 442:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 443:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 444:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 445:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 446:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 447:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 448:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
ARM GAS  /tmp/cctetIQd.s 			page 109


 449:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 450:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 451:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 452:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 453:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 454:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 455:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_IsEnabledClock\n
 456:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 457:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 458:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 459:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_IsEnabledClock\n
 460:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 461:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_IsEnabledClock\n
 462:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 463:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 464:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_IsEnabledClock\n
 465:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_IsEnabledClock\n
 466:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_IsEnabledClock\n
 467:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_IsEnabledClock\n
 468:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_IsEnabledClock\n
 469:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_IsEnabledClock
 470:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 471:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 472:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 473:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 474:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 475:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 476:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 477:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 478:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 479:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 480:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 481:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 482:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 483:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 484:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 485:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 486:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 487:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 488:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 489:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 490:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 491:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 492:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 493:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 494:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 495:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 496:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 497:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 498:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 499:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 500:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 501:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_DisableClock\n
 502:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_DisableClock\n
 503:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_DisableClock\n
 504:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_DisableClock\n
 505:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_DisableClock\n
ARM GAS  /tmp/cctetIQd.s 			page 110


 506:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_DisableClock\n
 507:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_DisableClock\n
 508:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_DisableClock\n
 509:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_DisableClock\n
 510:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_DisableClock\n
 511:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_DisableClock\n
 512:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_DisableClock\n
 513:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_DisableClock\n
 514:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_DisableClock\n
 515:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_DisableClock\n
 516:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_DisableClock\n
 517:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_DisableClock\n
 518:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_DisableClock\n
 519:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_DisableClock
 520:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 521:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 522:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 523:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 524:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 525:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 526:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 527:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 528:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 529:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 530:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 531:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 532:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 533:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 534:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 535:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 536:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 537:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 538:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 539:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 540:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 541:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 542:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 543:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 544:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 545:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 546:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 547:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 548:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 549:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 550:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
 551:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ForceReset\n
 552:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ForceReset\n
 553:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ForceReset\n
 554:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ForceReset\n
 555:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LCDRST         LL_APB1_GRP1_ForceReset\n
 556:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ForceReset\n
 557:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ForceReset\n
 558:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ForceReset\n
 559:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPUART1RST     LL_APB1_GRP1_ForceReset\n
 560:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART4RST      LL_APB1_GRP1_ForceReset\n
 561:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART5RST      LL_APB1_GRP1_ForceReset\n
 562:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ForceReset\n
ARM GAS  /tmp/cctetIQd.s 			page 111


 563:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ForceReset\n
 564:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USBRST         LL_APB1_GRP1_ForceReset\n
 565:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     CRSRST         LL_APB1_GRP1_ForceReset\n
 566:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ForceReset\n
 567:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ForceReset\n
 568:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ForceReset\n
 569:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ForceReset
 570:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 571:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 572:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 573:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 574:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 575:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 576:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 577:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 578:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 579:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 580:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 581:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 582:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 583:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 584:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 585:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 586:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 587:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 588:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 589:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 590:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 591:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 592:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 593:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 594:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 595:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 596:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 597:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 598:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 599:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 600:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 601:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
 602:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ReleaseReset\n
 603:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ReleaseReset\n
 604:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ReleaseReset\n
 605:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ReleaseReset\n
 606:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LCDRST         LL_APB1_GRP1_ReleaseReset\n
 607:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ReleaseReset\n
 608:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ReleaseReset\n
 609:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ReleaseReset\n
 610:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPUART1RST     LL_APB1_GRP1_ReleaseReset\n
 611:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART4RST      LL_APB1_GRP1_ReleaseReset\n
 612:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART5RST      LL_APB1_GRP1_ReleaseReset\n
 613:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ReleaseReset\n
 614:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ReleaseReset\n
 615:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USBRST         LL_APB1_GRP1_ReleaseReset\n
 616:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     CRSRST         LL_APB1_GRP1_ReleaseReset\n
 617:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ReleaseReset\n
 618:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ReleaseReset\n
 619:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ReleaseReset\n
ARM GAS  /tmp/cctetIQd.s 			page 112


 620:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ReleaseReset
 621:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 622:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 623:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 624:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 625:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 626:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 627:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 628:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 629:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 630:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 631:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 632:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 633:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 634:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 635:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 636:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 637:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 638:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 639:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 640:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 641:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 642:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 643:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 644:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 645:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 646:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 647:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 648:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 649:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 650:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 651:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 652:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock during Low Power (Sleep) mode.
 653:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1SMENR    TIM2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 654:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM3SMEN      LL_APB1_GRP1_EnableClockSleep\n
 655:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM6SMEN      LL_APB1_GRP1_EnableClockSleep\n
 656:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM7SMEN      LL_APB1_GRP1_EnableClockSleep\n
 657:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LCDSMEN       LL_APB1_GRP1_EnableClockSleep\n
 658:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    WWDGSMEN      LL_APB1_GRP1_EnableClockSleep\n
 659:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    SPI2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 660:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART2SMEN    LL_APB1_GRP1_EnableClockSleep\n
 661:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPUART1SMEN   LL_APB1_GRP1_EnableClockSleep\n
 662:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART4SMEN    LL_APB1_GRP1_EnableClockSleep\n
 663:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART5SMEN    LL_APB1_GRP1_EnableClockSleep\n
 664:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C1SMEN      LL_APB1_GRP1_EnableClockSleep\n
 665:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 666:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USBSMEN       LL_APB1_GRP1_EnableClockSleep\n
 667:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    CRSSMEN       LL_APB1_GRP1_EnableClockSleep\n
 668:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    PWRSMEN       LL_APB1_GRP1_EnableClockSleep\n
 669:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    DACSMEN       LL_APB1_GRP1_EnableClockSleep\n
 670:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C3SMEN      LL_APB1_GRP1_EnableClockSleep\n
 671:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPTIM1SMEN    LL_APB1_GRP1_EnableClockSleep
 672:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 673:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 674:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 675:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 676:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
ARM GAS  /tmp/cctetIQd.s 			page 113


 677:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 678:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 679:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 680:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 681:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 682:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 683:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 684:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 685:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 686:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 687:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 688:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 689:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 690:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 691:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 692:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 693:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 694:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 695:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 696:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockSleep(uint32_t Periphs)
 697:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 698:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 699:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1SMENR, Periphs);
 700:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 701:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1SMENR, Periphs);
 702:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 703:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 704:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 705:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 706:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock during Low Power (Sleep) mode.
 707:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1SMENR    TIM2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 708:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM3SMEN      LL_APB1_GRP1_DisableClockSleep\n
 709:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM6SMEN      LL_APB1_GRP1_DisableClockSleep\n
 710:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM7SMEN      LL_APB1_GRP1_DisableClockSleep\n
 711:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LCDSMEN       LL_APB1_GRP1_DisableClockSleep\n
 712:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    WWDGSMEN      LL_APB1_GRP1_DisableClockSleep\n
 713:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    SPI2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 714:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART2SMEN    LL_APB1_GRP1_DisableClockSleep\n
 715:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPUART1SMEN   LL_APB1_GRP1_DisableClockSleep\n
 716:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART4SMEN    LL_APB1_GRP1_DisableClockSleep\n
 717:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART5SMEN    LL_APB1_GRP1_DisableClockSleep\n
 718:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C1SMEN      LL_APB1_GRP1_DisableClockSleep\n
 719:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 720:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USBSMEN       LL_APB1_GRP1_DisableClockSleep\n
 721:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    CRSSMEN       LL_APB1_GRP1_DisableClockSleep\n
 722:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    PWRSMEN       LL_APB1_GRP1_DisableClockSleep\n
 723:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    DACSMEN       LL_APB1_GRP1_DisableClockSleep\n
 724:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C3SMEN      LL_APB1_GRP1_DisableClockSleep\n
 725:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPTIM1SMEN    LL_APB1_GRP1_DisableClockSleep
 726:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 727:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 728:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 729:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 730:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 731:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 732:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 733:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
ARM GAS  /tmp/cctetIQd.s 			page 114


 734:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 735:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 736:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 737:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 738:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 739:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 740:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 741:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 742:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 743:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 744:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 745:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 746:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 747:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 748:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 749:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 750:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockSleep(uint32_t Periphs)
 751:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 752:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1SMENR, Periphs);
 753:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 754:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 755:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 756:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 757:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 758:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 759:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
 760:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 761:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 762:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 763:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 764:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
 765:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_EnableClock\n
 766:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_EnableClock\n
 767:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_EnableClock\n
 768:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_EnableClock\n
 769:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_EnableClock\n
 770:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_EnableClock\n
 771:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_EnableClock\n
 772:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_EnableClock
 773:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 774:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 775:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 776:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 777:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 778:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 779:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 780:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 781:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 782:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 783:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 784:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 785:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 786:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 787:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 1045              		.loc 3 787 1
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/cctetIQd.s 			page 115


 1048              		@ frame_needed = 1, uses_anonymous_args = 0
 1049 0000 80B5     		push	{r7, lr}
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 1053 0002 84B0     		sub	sp, sp, #16
 1054              		.cfi_def_cfa_offset 24
 1055 0004 00AF     		add	r7, sp, #0
 1056              		.cfi_def_cfa_register 7
 1057 0006 7860     		str	r0, [r7, #4]
 788:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 789:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 1058              		.loc 3 789 3
 1059 0008 074B     		ldr	r3, .L53
 1060 000a 596B     		ldr	r1, [r3, #52]
 1061 000c 064B     		ldr	r3, .L53
 1062 000e 7A68     		ldr	r2, [r7, #4]
 1063 0010 0A43     		orrs	r2, r1
 1064 0012 5A63     		str	r2, [r3, #52]
 790:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 791:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 1065              		.loc 3 791 12
 1066 0014 044B     		ldr	r3, .L53
 1067 0016 5B6B     		ldr	r3, [r3, #52]
 1068 0018 7A68     		ldr	r2, [r7, #4]
 1069 001a 1340     		ands	r3, r2
 1070              		.loc 3 791 10
 1071 001c FB60     		str	r3, [r7, #12]
 792:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 1072              		.loc 3 792 3
 1073 001e FB68     		ldr	r3, [r7, #12]
 793:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 1074              		.loc 3 793 1
 1075 0020 C046     		nop
 1076 0022 BD46     		mov	sp, r7
 1077 0024 04B0     		add	sp, sp, #16
 1078              		@ sp needed
 1079 0026 80BD     		pop	{r7, pc}
 1080              	.L54:
 1081              		.align	2
 1082              	.L53:
 1083 0028 00100240 		.word	1073876992
 1084              		.cfi_endproc
 1085              	.LFE164:
 1087              		.section	.text.LL_IOP_GRP1_EnableClock,"ax",%progbits
 1088              		.align	1
 1089              		.syntax unified
 1090              		.code	16
 1091              		.thumb_func
 1092              		.fpu softvfp
 1094              	LL_IOP_GRP1_EnableClock:
 1095              	.LFB171:
 794:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 795:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 796:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if APB2 peripheral clock is enabled or not
 797:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_IsEnabledClock\n
 798:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_IsEnabledClock\n
ARM GAS  /tmp/cctetIQd.s 			page 116


 799:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_IsEnabledClock\n
 800:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_IsEnabledClock\n
 801:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_IsEnabledClock\n
 802:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_IsEnabledClock\n
 803:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_IsEnabledClock\n
 804:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_IsEnabledClock
 805:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 806:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 807:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 808:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 809:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 810:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 811:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 812:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 813:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 814:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 815:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 816:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 817:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 818:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB2_GRP1_IsEnabledClock(uint32_t Periphs)
 819:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 820:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->APB2ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 821:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 822:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 823:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 824:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock.
 825:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_DisableClock\n
 826:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_DisableClock\n
 827:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_DisableClock\n
 828:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_DisableClock\n
 829:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_DisableClock\n
 830:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_DisableClock\n
 831:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_DisableClock\n
 832:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_DisableClock
 833:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 834:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 835:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 836:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 837:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 838:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 839:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 840:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 841:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 842:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 843:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 844:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 845:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 846:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClock(uint32_t Periphs)
 847:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 848:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2ENR, Periphs);
 849:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 850:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 851:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 852:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force APB2 peripherals reset.
 853:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB2_GRP1_ForceReset\n
 854:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM21RST      LL_APB2_GRP1_ForceReset\n
 855:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM22RST      LL_APB2_GRP1_ForceReset\n
ARM GAS  /tmp/cctetIQd.s 			page 117


 856:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     ADCRST        LL_APB2_GRP1_ForceReset\n
 857:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ForceReset\n
 858:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ForceReset\n
 859:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     DBGRST        LL_APB2_GRP1_ForceReset
 860:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 861:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 862:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 863:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 864:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 865:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 866:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 867:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 868:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 869:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 870:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 871:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 872:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 873:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ForceReset(uint32_t Periphs)
 874:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 875:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2RSTR, Periphs);
 876:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 877:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 878:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 879:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release APB2 peripherals reset.
 880:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB2_GRP1_ReleaseReset\n
 881:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM21RST      LL_APB2_GRP1_ReleaseReset\n
 882:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM22RST      LL_APB2_GRP1_ReleaseReset\n
 883:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     ADCRST        LL_APB2_GRP1_ReleaseReset\n
 884:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ReleaseReset\n
 885:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ReleaseReset\n
 886:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     DBGRST        LL_APB2_GRP1_ReleaseReset
 887:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 888:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 889:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 890:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 891:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 892:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 893:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 894:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 895:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 896:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 897:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 898:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 899:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 900:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ReleaseReset(uint32_t Periphs)
 901:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 902:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2RSTR, Periphs);
 903:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 904:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 905:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 906:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock during Low Power (Sleep) mode.
 907:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2SMENR    SYSCFGSMEN    LL_APB2_GRP1_EnableClockSleep\n
 908:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM21SMEN     LL_APB2_GRP1_EnableClockSleep\n
 909:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM22SMEN     LL_APB2_GRP1_EnableClockSleep\n
 910:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    ADCSMEN       LL_APB2_GRP1_EnableClockSleep\n
 911:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    SPI1SMEN      LL_APB2_GRP1_EnableClockSleep\n
 912:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    USART1SMEN    LL_APB2_GRP1_EnableClockSleep\n
ARM GAS  /tmp/cctetIQd.s 			page 118


 913:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    DBGSMEN       LL_APB2_GRP1_EnableClockSleep
 914:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 915:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 916:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 917:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 918:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 919:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 920:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 921:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 922:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 923:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 924:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 925:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 926:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClockSleep(uint32_t Periphs)
 927:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 928:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 929:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2SMENR, Periphs);
 930:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 931:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2SMENR, Periphs);
 932:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 933:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 934:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 935:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 936:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock during Low Power (Sleep) mode.
 937:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2SMENR    SYSCFGSMEN    LL_APB2_GRP1_DisableClockSleep\n
 938:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM21SMEN     LL_APB2_GRP1_DisableClockSleep\n
 939:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM22SMEN     LL_APB2_GRP1_DisableClockSleep\n
 940:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    ADCSMEN       LL_APB2_GRP1_DisableClockSleep\n
 941:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    SPI1SMEN      LL_APB2_GRP1_DisableClockSleep\n
 942:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    USART1SMEN    LL_APB2_GRP1_DisableClockSleep\n
 943:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    DBGSMEN       LL_APB2_GRP1_DisableClockSleep
 944:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 945:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 946:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 947:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 948:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 949:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 950:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 951:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 952:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 953:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 954:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 955:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 956:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClockSleep(uint32_t Periphs)
 957:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 958:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2SMENR, Periphs);
 959:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 960:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 961:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 962:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 963:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 964:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_IOP IOP
 965:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 966:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 967:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 968:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 969:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable IOP peripherals clock.
ARM GAS  /tmp/cctetIQd.s 			page 119


 970:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll IOPENR       GPIOAEN       LL_IOP_GRP1_EnableClock\n
 971:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOBEN       LL_IOP_GRP1_EnableClock\n
 972:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOCEN       LL_IOP_GRP1_EnableClock\n
 973:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIODEN       LL_IOP_GRP1_EnableClock\n
 974:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOEEN       LL_IOP_GRP1_EnableClock\n
 975:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOHEN       LL_IOP_GRP1_EnableClock
 976:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 977:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOA
 978:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOB
 979:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOC
 980:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOD (*)
 981:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOE (*)
 982:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOH (*)
 983:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 984:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 985:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 986:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 987:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_IOP_GRP1_EnableClock(uint32_t Periphs)
 988:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 1096              		.loc 3 988 1
 1097              		.cfi_startproc
 1098              		@ args = 0, pretend = 0, frame = 16
 1099              		@ frame_needed = 1, uses_anonymous_args = 0
 1100 0000 80B5     		push	{r7, lr}
 1101              		.cfi_def_cfa_offset 8
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 14, -4
 1104 0002 84B0     		sub	sp, sp, #16
 1105              		.cfi_def_cfa_offset 24
 1106 0004 00AF     		add	r7, sp, #0
 1107              		.cfi_def_cfa_register 7
 1108 0006 7860     		str	r0, [r7, #4]
 989:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 990:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->IOPENR, Periphs);
 1109              		.loc 3 990 3
 1110 0008 074B     		ldr	r3, .L56
 1111 000a D96A     		ldr	r1, [r3, #44]
 1112 000c 064B     		ldr	r3, .L56
 1113 000e 7A68     		ldr	r2, [r7, #4]
 1114 0010 0A43     		orrs	r2, r1
 1115 0012 DA62     		str	r2, [r3, #44]
 991:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 992:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->IOPENR, Periphs);
 1116              		.loc 3 992 12
 1117 0014 044B     		ldr	r3, .L56
 1118 0016 DB6A     		ldr	r3, [r3, #44]
 1119 0018 7A68     		ldr	r2, [r7, #4]
 1120 001a 1340     		ands	r3, r2
 1121              		.loc 3 992 10
 1122 001c FB60     		str	r3, [r7, #12]
 993:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 1123              		.loc 3 993 3
 1124 001e FB68     		ldr	r3, [r7, #12]
 994:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 1125              		.loc 3 994 1
 1126 0020 C046     		nop
 1127 0022 BD46     		mov	sp, r7
ARM GAS  /tmp/cctetIQd.s 			page 120


 1128 0024 04B0     		add	sp, sp, #16
 1129              		@ sp needed
 1130 0026 80BD     		pop	{r7, pc}
 1131              	.L57:
 1132              		.align	2
 1133              	.L56:
 1134 0028 00100240 		.word	1073876992
 1135              		.cfi_endproc
 1136              	.LFE171:
 1138              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
 1139              		.align	2
 1142              	CHANNEL_OFFSET_TAB:
 1143 0000 081C3044 		.ascii	"\010\0340DXl\200"
 1143      586C80
 1144              		.section	.rodata.OFFSET_TAB_CCMRx,"a"
 1145              		.align	2
 1148              	OFFSET_TAB_CCMRx:
 1149 0000 00000000 		.ascii	"\000\000\000\000\004\000\004"
 1149      040004
 1150              		.section	.rodata.SHIFT_TAB_OCxx,"a"
 1151              		.align	2
 1154              	SHIFT_TAB_OCxx:
 1155 0000 00000800 		.ascii	"\000\000\010\000\000\000\010"
 1155      000008
 1156              		.section	.rodata.SHIFT_TAB_ICxx,"a"
 1157              		.align	2
 1160              	SHIFT_TAB_ICxx:
 1161 0000 00000800 		.ascii	"\000\000\010\000\000\000\010"
 1161      000008
 1162              		.section	.rodata.SHIFT_TAB_CCxP,"a"
 1163              		.align	2
 1166              	SHIFT_TAB_CCxP:
 1167 0000 00000400 		.ascii	"\000\000\004\000\010\000\014"
 1167      08000C
 1168              		.section	.text.adc_init,"ax",%progbits
 1169              		.align	1
 1170              		.global	adc_init
 1171              		.syntax unified
 1172              		.code	16
 1173              		.thumb_func
 1174              		.fpu softvfp
 1176              	adc_init:
 1177              	.LFB1186:
 1178              		.file 4 "adc.c"
   1:adc.c         **** #include "adc.h"
   2:adc.c         **** 
   3:adc.c         **** #include "board.h"
   4:adc.c         **** #include "common.h"
   5:adc.c         **** 
   6:adc.c         **** #define VREF                                 ((uint32_t) 3300)
   7:adc.c         **** #define ADC_DELAY_CALIB_ENABLE_CPU_CYCLES    (LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES * 32)
   8:adc.c         **** #define VAR_CONVERTED_DATA_INIT_VALUE        (__LL_ADC_DIGITAL_SCALE(LL_ADC_RESOLUTION_12B) + 1)
   9:adc.c         **** 
  10:adc.c         **** void adc_init(void)
  11:adc.c         **** {
 1179              		.loc 4 11 1
 1180              		.cfi_startproc
ARM GAS  /tmp/cctetIQd.s 			page 121


 1181              		@ args = 0, pretend = 0, frame = 24
 1182              		@ frame_needed = 1, uses_anonymous_args = 0
 1183 0000 80B5     		push	{r7, lr}
 1184              		.cfi_def_cfa_offset 8
 1185              		.cfi_offset 7, -8
 1186              		.cfi_offset 14, -4
 1187 0002 86B0     		sub	sp, sp, #24
 1188              		.cfi_def_cfa_offset 32
 1189 0004 00AF     		add	r7, sp, #0
 1190              		.cfi_def_cfa_register 7
  12:adc.c         ****   LL_GPIO_InitTypeDef GPIO_InitStruct = { 0 };
 1191              		.loc 4 12 23
 1192 0006 3B00     		movs	r3, r7
 1193 0008 1800     		movs	r0, r3
 1194 000a 1823     		movs	r3, #24
 1195 000c 1A00     		movs	r2, r3
 1196 000e 0021     		movs	r1, #0
 1197 0010 FFF7FEFF 		bl	memset
  13:adc.c         **** 
  14:adc.c         ****   FLEX_ADC_GPIO_CLK_EN();
 1198              		.loc 4 14 3
 1199 0014 0120     		movs	r0, #1
 1200 0016 FFF7FEFF 		bl	LL_IOP_GRP1_EnableClock
  15:adc.c         **** 
  16:adc.c         ****   GPIO_InitStruct.Pin = FLEX_ADC_PIN;
 1201              		.loc 4 16 23
 1202 001a 3B00     		movs	r3, r7
 1203 001c 1022     		movs	r2, #16
 1204 001e 1A60     		str	r2, [r3]
  17:adc.c         ****   GPIO_InitStruct.Mode = LL_GPIO_MODE_ANALOG;
 1205              		.loc 4 17 24
 1206 0020 3B00     		movs	r3, r7
 1207 0022 0322     		movs	r2, #3
 1208 0024 5A60     		str	r2, [r3, #4]
  18:adc.c         ****   GPIO_InitStruct.Pull = LL_GPIO_PULL_NO;
 1209              		.loc 4 18 24
 1210 0026 3B00     		movs	r3, r7
 1211 0028 0022     		movs	r2, #0
 1212 002a 1A61     		str	r2, [r3, #16]
  19:adc.c         ****   LL_GPIO_Init(FLEX_ADC_PORT, &GPIO_InitStruct);
 1213              		.loc 4 19 3
 1214 002c 3A00     		movs	r2, r7
 1215 002e A023     		movs	r3, #160
 1216 0030 DB05     		lsls	r3, r3, #23
 1217 0032 1100     		movs	r1, r2
 1218 0034 1800     		movs	r0, r3
 1219 0036 FFF7FEFF 		bl	LL_GPIO_Init
  20:adc.c         **** 
  21:adc.c         ****   NVIC_SetPriority(FLEX_ADC_IRQn, FLEX_ADC_PRIORITY);
 1220              		.loc 4 21 3
 1221 003a 0521     		movs	r1, #5
 1222 003c 0C20     		movs	r0, #12
 1223 003e FFF7FEFF 		bl	__NVIC_SetPriority
  22:adc.c         ****   NVIC_EnableIRQ(FLEX_ADC_IRQn);
 1224              		.loc 4 22 3
 1225 0042 0C20     		movs	r0, #12
 1226 0044 FFF7FEFF 		bl	__NVIC_EnableIRQ
ARM GAS  /tmp/cctetIQd.s 			page 122


  23:adc.c         **** 
  24:adc.c         ****   FLEX_ADC_CLK_EN();
 1227              		.loc 4 24 3
 1228 0048 8023     		movs	r3, #128
 1229 004a 9B00     		lsls	r3, r3, #2
 1230 004c 1800     		movs	r0, r3
 1231 004e FFF7FEFF 		bl	LL_APB2_GRP1_EnableClock
  25:adc.c         **** 
  26:adc.c         ****   if (LL_ADC_IsEnabled(FLEX_ADC) == 0) {
 1232              		.loc 4 26 7
 1233 0052 1E4B     		ldr	r3, .L62
 1234 0054 1800     		movs	r0, r3
 1235 0056 FFF7FEFF 		bl	LL_ADC_IsEnabled
 1236 005a 031E     		subs	r3, r0, #0
 1237              		.loc 4 26 6
 1238 005c 0BD1     		bne	.L59
  27:adc.c         ****     LL_ADC_SetClock(FLEX_ADC, LL_ADC_CLOCK_SYNC_PCLK_DIV2);
 1239              		.loc 4 27 5
 1240 005e 8023     		movs	r3, #128
 1241 0060 DB05     		lsls	r3, r3, #23
 1242 0062 1A4A     		ldr	r2, .L62
 1243 0064 1900     		movs	r1, r3
 1244 0066 1000     		movs	r0, r2
 1245 0068 FFF7FEFF 		bl	LL_ADC_SetClock
  28:adc.c         ****     LL_ADC_SetSamplingTimeCommonChannels(FLEX_ADC, LL_ADC_SAMPLINGTIME_39CYCLES_5);
 1246              		.loc 4 28 5
 1247 006c 174B     		ldr	r3, .L62
 1248 006e 0521     		movs	r1, #5
 1249 0070 1800     		movs	r0, r3
 1250 0072 FFF7FEFF 		bl	LL_ADC_SetSamplingTimeCommonChannels
 1251              	.L59:
  29:adc.c         ****   }
  30:adc.c         **** 
  31:adc.c         ****   if ((LL_ADC_IsEnabled(FLEX_ADC) == 0) || (LL_ADC_REG_IsConversionOngoing(FLEX_ADC) == 0)) {
 1252              		.loc 4 31 8
 1253 0076 154B     		ldr	r3, .L62
 1254 0078 1800     		movs	r0, r3
 1255 007a FFF7FEFF 		bl	LL_ADC_IsEnabled
 1256 007e 031E     		subs	r3, r0, #0
 1257              		.loc 4 31 6
 1258 0080 05D0     		beq	.L60
 1259              		.loc 4 31 45 discriminator 1
 1260 0082 124B     		ldr	r3, .L62
 1261 0084 1800     		movs	r0, r3
 1262 0086 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 1263 008a 031E     		subs	r3, r0, #0
 1264              		.loc 4 31 41 discriminator 1
 1265 008c 16D1     		bne	.L61
 1266              	.L60:
  32:adc.c         ****     LL_ADC_REG_SetTriggerSource(FLEX_ADC, LL_ADC_REG_TRIG_SOFTWARE);
 1267              		.loc 4 32 5
 1268 008e 0F4B     		ldr	r3, .L62
 1269 0090 0021     		movs	r1, #0
 1270 0092 1800     		movs	r0, r3
 1271 0094 FFF7FEFF 		bl	LL_ADC_REG_SetTriggerSource
  33:adc.c         ****     LL_ADC_REG_SetContinuousMode(FLEX_ADC, LL_ADC_REG_CONV_SINGLE);
 1272              		.loc 4 33 5
ARM GAS  /tmp/cctetIQd.s 			page 123


 1273 0098 0C4B     		ldr	r3, .L62
 1274 009a 0021     		movs	r1, #0
 1275 009c 1800     		movs	r0, r3
 1276 009e FFF7FEFF 		bl	LL_ADC_REG_SetContinuousMode
  34:adc.c         ****     LL_ADC_REG_SetOverrun(FLEX_ADC, LL_ADC_REG_OVR_DATA_OVERWRITTEN);
 1277              		.loc 4 34 5
 1278 00a2 8023     		movs	r3, #128
 1279 00a4 5B01     		lsls	r3, r3, #5
 1280 00a6 094A     		ldr	r2, .L62
 1281 00a8 1900     		movs	r1, r3
 1282 00aa 1000     		movs	r0, r2
 1283 00ac FFF7FEFF 		bl	LL_ADC_REG_SetOverrun
  35:adc.c         ****     LL_ADC_REG_SetSequencerChannels(FLEX_ADC, FLEX_ADC_CHANNEL);
 1284              		.loc 4 35 5
 1285 00b0 074A     		ldr	r2, .L62+4
 1286 00b2 064B     		ldr	r3, .L62
 1287 00b4 1100     		movs	r1, r2
 1288 00b6 1800     		movs	r0, r3
 1289 00b8 FFF7FEFF 		bl	LL_ADC_REG_SetSequencerChannels
 1290              	.L61:
  36:adc.c         ****   }
  37:adc.c         **** 
  38:adc.c         ****   LL_ADC_EnableIT_OVR(FLEX_ADC);
 1291              		.loc 4 38 3
 1292 00bc 034B     		ldr	r3, .L62
 1293 00be 1800     		movs	r0, r3
 1294 00c0 FFF7FEFF 		bl	LL_ADC_EnableIT_OVR
  39:adc.c         **** }
 1295              		.loc 4 39 1
 1296 00c4 C046     		nop
 1297 00c6 BD46     		mov	sp, r7
 1298 00c8 06B0     		add	sp, sp, #24
 1299              		@ sp needed
 1300 00ca 80BD     		pop	{r7, pc}
 1301              	.L63:
 1302              		.align	2
 1303              	.L62:
 1304 00cc 00240140 		.word	1073816576
 1305 00d0 10000010 		.word	268435472
 1306              		.cfi_endproc
 1307              	.LFE1186:
 1309              		.section	.text.adc_enable,"ax",%progbits
 1310              		.align	1
 1311              		.global	adc_enable
 1312              		.syntax unified
 1313              		.code	16
 1314              		.thumb_func
 1315              		.fpu softvfp
 1317              	adc_enable:
 1318              	.LFB1187:
  40:adc.c         **** 
  41:adc.c         **** void adc_enable(void)
  42:adc.c         **** {
 1319              		.loc 4 42 1
 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 8
 1322              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cctetIQd.s 			page 124


 1323 0000 80B5     		push	{r7, lr}
 1324              		.cfi_def_cfa_offset 8
 1325              		.cfi_offset 7, -8
 1326              		.cfi_offset 14, -4
 1327 0002 82B0     		sub	sp, sp, #8
 1328              		.cfi_def_cfa_offset 16
 1329 0004 00AF     		add	r7, sp, #0
 1330              		.cfi_def_cfa_register 7
  43:adc.c         ****   uint32_t wait_loop_index = 0;
 1331              		.loc 4 43 12
 1332 0006 0023     		movs	r3, #0
 1333 0008 7B60     		str	r3, [r7, #4]
  44:adc.c         **** 
  45:adc.c         ****   if (LL_ADC_IsEnabled(FLEX_ADC) == 0) {
 1334              		.loc 4 45 7
 1335 000a 164B     		ldr	r3, .L71
 1336 000c 1800     		movs	r0, r3
 1337 000e FFF7FEFF 		bl	LL_ADC_IsEnabled
 1338 0012 031E     		subs	r3, r0, #0
 1339              		.loc 4 45 6
 1340 0014 14D1     		bne	.L65
  46:adc.c         ****     LL_ADC_StartCalibration(FLEX_ADC);
 1341              		.loc 4 46 5
 1342 0016 134B     		ldr	r3, .L71
 1343 0018 1800     		movs	r0, r3
 1344 001a FFF7FEFF 		bl	LL_ADC_StartCalibration
  47:adc.c         **** 
  48:adc.c         ****     while (LL_ADC_IsCalibrationOnGoing(FLEX_ADC) != 0);
 1345              		.loc 4 48 11
 1346 001e C046     		nop
 1347              	.L66:
 1348              		.loc 4 48 12 discriminator 1
 1349 0020 104B     		ldr	r3, .L71
 1350 0022 1800     		movs	r0, r3
 1351 0024 FFF7FEFF 		bl	LL_ADC_IsCalibrationOnGoing
 1352 0028 031E     		subs	r3, r0, #0
 1353              		.loc 4 48 11 discriminator 1
 1354 002a F9D1     		bne	.L66
  49:adc.c         **** 
  50:adc.c         ****     wait_loop_index = (ADC_DELAY_CALIB_ENABLE_CPU_CYCLES >> 1);
 1355              		.loc 4 50 21
 1356 002c 2023     		movs	r3, #32
 1357 002e 7B60     		str	r3, [r7, #4]
  51:adc.c         ****     while (wait_loop_index != 0)
 1358              		.loc 4 51 11
 1359 0030 02E0     		b	.L67
 1360              	.L68:
  52:adc.c         ****       wait_loop_index--;
 1361              		.loc 4 52 22
 1362 0032 7B68     		ldr	r3, [r7, #4]
 1363 0034 013B     		subs	r3, r3, #1
 1364 0036 7B60     		str	r3, [r7, #4]
 1365              	.L67:
  51:adc.c         ****     while (wait_loop_index != 0)
 1366              		.loc 4 51 11
 1367 0038 7B68     		ldr	r3, [r7, #4]
 1368 003a 002B     		cmp	r3, #0
ARM GAS  /tmp/cctetIQd.s 			page 125


 1369 003c F9D1     		bne	.L68
 1370 003e 01E0     		b	.L69
 1371              	.L65:
  53:adc.c         ****   }
  54:adc.c         ****   else {
  55:adc.c         ****     error_handler();
 1372              		.loc 4 55 5
 1373 0040 FFF7FEFF 		bl	error_handler
 1374              	.L69:
  56:adc.c         ****   }
  57:adc.c         **** 
  58:adc.c         ****   LL_ADC_Enable(FLEX_ADC);
 1375              		.loc 4 58 3
 1376 0044 074B     		ldr	r3, .L71
 1377 0046 1800     		movs	r0, r3
 1378 0048 FFF7FEFF 		bl	LL_ADC_Enable
  59:adc.c         **** 
  60:adc.c         ****   while (LL_ADC_IsActiveFlag_ADRDY(FLEX_ADC) == 0);
 1379              		.loc 4 60 9
 1380 004c C046     		nop
 1381              	.L70:
 1382              		.loc 4 60 10 discriminator 1
 1383 004e 054B     		ldr	r3, .L71
 1384 0050 1800     		movs	r0, r3
 1385 0052 FFF7FEFF 		bl	LL_ADC_IsActiveFlag_ADRDY
 1386 0056 031E     		subs	r3, r0, #0
 1387              		.loc 4 60 9 discriminator 1
 1388 0058 F9D0     		beq	.L70
  61:adc.c         **** }
 1389              		.loc 4 61 1
 1390 005a C046     		nop
 1391 005c C046     		nop
 1392 005e BD46     		mov	sp, r7
 1393 0060 02B0     		add	sp, sp, #8
 1394              		@ sp needed
 1395 0062 80BD     		pop	{r7, pc}
 1396              	.L72:
 1397              		.align	2
 1398              	.L71:
 1399 0064 00240140 		.word	1073816576
 1400              		.cfi_endproc
 1401              	.LFE1187:
 1403              		.section	.text.adc_disable,"ax",%progbits
 1404              		.align	1
 1405              		.global	adc_disable
 1406              		.syntax unified
 1407              		.code	16
 1408              		.thumb_func
 1409              		.fpu softvfp
 1411              	adc_disable:
 1412              	.LFB1188:
  62:adc.c         **** 
  63:adc.c         **** void adc_disable(void)
  64:adc.c         **** {
 1413              		.loc 4 64 1
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cctetIQd.s 			page 126


 1416              		@ frame_needed = 1, uses_anonymous_args = 0
 1417 0000 80B5     		push	{r7, lr}
 1418              		.cfi_def_cfa_offset 8
 1419              		.cfi_offset 7, -8
 1420              		.cfi_offset 14, -4
 1421 0002 00AF     		add	r7, sp, #0
 1422              		.cfi_def_cfa_register 7
  65:adc.c         ****   if (LL_ADC_IsEnabled(FLEX_ADC) == 1) {
 1423              		.loc 4 65 7
 1424 0004 0B4B     		ldr	r3, .L78
 1425 0006 1800     		movs	r0, r3
 1426 0008 FFF7FEFF 		bl	LL_ADC_IsEnabled
 1427 000c 0300     		movs	r3, r0
 1428              		.loc 4 65 6
 1429 000e 012B     		cmp	r3, #1
 1430 0010 0BD1     		bne	.L74
  66:adc.c         ****     while (LL_ADC_REG_IsConversionOngoing(ADC1) != 0);
 1431              		.loc 4 66 11
 1432 0012 C046     		nop
 1433              	.L75:
 1434              		.loc 4 66 12 discriminator 1
 1435 0014 074B     		ldr	r3, .L78
 1436 0016 1800     		movs	r0, r3
 1437 0018 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 1438 001c 031E     		subs	r3, r0, #0
 1439              		.loc 4 66 11 discriminator 1
 1440 001e F9D1     		bne	.L75
  67:adc.c         ****     LL_ADC_Disable(FLEX_ADC);
 1441              		.loc 4 67 5
 1442 0020 044B     		ldr	r3, .L78
 1443 0022 1800     		movs	r0, r3
 1444 0024 FFF7FEFF 		bl	LL_ADC_Disable
  68:adc.c         ****   }
  69:adc.c         ****   else {
  70:adc.c         ****     error_handler();
  71:adc.c         ****   }
  72:adc.c         **** }
 1445              		.loc 4 72 1
 1446 0028 01E0     		b	.L77
 1447              	.L74:
  70:adc.c         ****   }
 1448              		.loc 4 70 5
 1449 002a FFF7FEFF 		bl	error_handler
 1450              	.L77:
 1451              		.loc 4 72 1
 1452 002e C046     		nop
 1453 0030 BD46     		mov	sp, r7
 1454              		@ sp needed
 1455 0032 80BD     		pop	{r7, pc}
 1456              	.L79:
 1457              		.align	2
 1458              	.L78:
 1459 0034 00240140 		.word	1073816576
 1460              		.cfi_endproc
 1461              	.LFE1188:
 1463              		.section	.text.ADC1_COMP_IRQHandler,"ax",%progbits
 1464              		.align	1
ARM GAS  /tmp/cctetIQd.s 			page 127


 1465              		.global	ADC1_COMP_IRQHandler
 1466              		.syntax unified
 1467              		.code	16
 1468              		.thumb_func
 1469              		.fpu softvfp
 1471              	ADC1_COMP_IRQHandler:
 1472              	.LFB1189:
  73:adc.c         **** 
  74:adc.c         **** void FLEX_ADC_IRQHandler(void)
  75:adc.c         **** {}
 1473              		.loc 4 75 1
 1474              		.cfi_startproc
 1475              		@ args = 0, pretend = 0, frame = 0
 1476              		@ frame_needed = 1, uses_anonymous_args = 0
 1477 0000 80B5     		push	{r7, lr}
 1478              		.cfi_def_cfa_offset 8
 1479              		.cfi_offset 7, -8
 1480              		.cfi_offset 14, -4
 1481 0002 00AF     		add	r7, sp, #0
 1482              		.cfi_def_cfa_register 7
 1483              		.loc 4 75 1
 1484 0004 C046     		nop
 1485 0006 BD46     		mov	sp, r7
 1486              		@ sp needed
 1487 0008 80BD     		pop	{r7, pc}
 1488              		.cfi_endproc
 1489              	.LFE1189:
 1491              		.global	__aeabi_uidiv
 1492              		.section	.text.adc_read,"ax",%progbits
 1493              		.align	1
 1494              		.global	adc_read
 1495              		.syntax unified
 1496              		.code	16
 1497              		.thumb_func
 1498              		.fpu softvfp
 1500              	adc_read:
 1501              	.LFB1190:
  76:adc.c         **** 
  77:adc.c         **** uint16_t adc_read(void)
  78:adc.c         **** {
 1502              		.loc 4 78 1
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 8
 1505              		@ frame_needed = 1, uses_anonymous_args = 0
 1506 0000 90B5     		push	{r4, r7, lr}
 1507              		.cfi_def_cfa_offset 12
 1508              		.cfi_offset 4, -12
 1509              		.cfi_offset 7, -8
 1510              		.cfi_offset 14, -4
 1511 0002 83B0     		sub	sp, sp, #12
 1512              		.cfi_def_cfa_offset 24
 1513 0004 00AF     		add	r7, sp, #0
 1514              		.cfi_def_cfa_register 7
  79:adc.c         ****   uint16_t adc_data_raw = VAR_CONVERTED_DATA_INIT_VALUE;
 1515              		.loc 4 79 12
 1516 0006 BB1D     		adds	r3, r7, #6
 1517 0008 8022     		movs	r2, #128
ARM GAS  /tmp/cctetIQd.s 			page 128


 1518 000a 5201     		lsls	r2, r2, #5
 1519 000c 1A80     		strh	r2, [r3]
  80:adc.c         ****   uint16_t adc_data_mvolt = 0;
 1520              		.loc 4 80 12
 1521 000e 3B1D     		adds	r3, r7, #4
 1522 0010 0022     		movs	r2, #0
 1523 0012 1A80     		strh	r2, [r3]
  81:adc.c         **** 
  82:adc.c         ****   if ((LL_ADC_IsEnabled(ADC1) == 1) &&
 1524              		.loc 4 82 8
 1525 0014 1E4B     		ldr	r3, .L86
 1526 0016 1800     		movs	r0, r3
 1527 0018 FFF7FEFF 		bl	LL_ADC_IsEnabled
 1528 001c 0300     		movs	r3, r0
 1529              		.loc 4 82 6
 1530 001e 012B     		cmp	r3, #1
 1531 0020 10D1     		bne	.L82
  83:adc.c         ****       (LL_ADC_IsDisableOngoing(ADC1) == 0) &&
 1532              		.loc 4 83 8 discriminator 1
 1533 0022 1B4B     		ldr	r3, .L86
 1534 0024 1800     		movs	r0, r3
 1535 0026 FFF7FEFF 		bl	LL_ADC_IsDisableOngoing
 1536 002a 031E     		subs	r3, r0, #0
  82:adc.c         ****       (LL_ADC_IsDisableOngoing(ADC1) == 0) &&
 1537              		.loc 4 82 37 discriminator 1
 1538 002c 0AD1     		bne	.L82
  84:adc.c         ****       (LL_ADC_REG_IsConversionOngoing(ADC1) == 0)) {
 1539              		.loc 4 84 8
 1540 002e 184B     		ldr	r3, .L86
 1541 0030 1800     		movs	r0, r3
 1542 0032 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 1543 0036 031E     		subs	r3, r0, #0
  83:adc.c         ****       (LL_ADC_IsDisableOngoing(ADC1) == 0) &&
 1544              		.loc 4 83 44
 1545 0038 04D1     		bne	.L82
  85:adc.c         ****     LL_ADC_REG_StartConversion(FLEX_ADC);
 1546              		.loc 4 85 5
 1547 003a 154B     		ldr	r3, .L86
 1548 003c 1800     		movs	r0, r3
 1549 003e FFF7FEFF 		bl	LL_ADC_REG_StartConversion
 1550 0042 01E0     		b	.L83
 1551              	.L82:
  86:adc.c         ****   }
  87:adc.c         ****   else {
  88:adc.c         ****     error_handler();
 1552              		.loc 4 88 5
 1553 0044 FFF7FEFF 		bl	error_handler
 1554              	.L83:
  89:adc.c         ****   }
  90:adc.c         **** 
  91:adc.c         ****   while (LL_ADC_IsActiveFlag_EOC(FLEX_ADC) == 0);
 1555              		.loc 4 91 9
 1556 0048 C046     		nop
 1557              	.L84:
 1558              		.loc 4 91 10 discriminator 1
 1559 004a 114B     		ldr	r3, .L86
 1560 004c 1800     		movs	r0, r3
ARM GAS  /tmp/cctetIQd.s 			page 129


 1561 004e FFF7FEFF 		bl	LL_ADC_IsActiveFlag_EOC
 1562 0052 031E     		subs	r3, r0, #0
 1563              		.loc 4 91 9 discriminator 1
 1564 0054 F9D0     		beq	.L84
  92:adc.c         **** 
  93:adc.c         ****   LL_ADC_ClearFlag_EOS(FLEX_ADC);
 1565              		.loc 4 93 3
 1566 0056 0E4B     		ldr	r3, .L86
 1567 0058 1800     		movs	r0, r3
 1568 005a FFF7FEFF 		bl	LL_ADC_ClearFlag_EOS
  94:adc.c         **** 
  95:adc.c         ****   adc_data_raw = LL_ADC_REG_ReadConversionData12(FLEX_ADC);
 1569              		.loc 4 95 18
 1570 005e BC1D     		adds	r4, r7, #6
 1571 0060 0B4B     		ldr	r3, .L86
 1572 0062 1800     		movs	r0, r3
 1573 0064 FFF7FEFF 		bl	LL_ADC_REG_ReadConversionData12
 1574 0068 0300     		movs	r3, r0
 1575 006a 2380     		strh	r3, [r4]
  96:adc.c         **** 
  97:adc.c         ****   adc_data_mvolt = __LL_ADC_CALC_DATA_TO_VOLTAGE(VREF, adc_data_raw, LL_ADC_RESOLUTION_12B);
 1576              		.loc 4 97 20
 1577 006c BB1D     		adds	r3, r7, #6
 1578 006e 1B88     		ldrh	r3, [r3]
 1579 0070 084A     		ldr	r2, .L86+4
 1580 0072 5343     		muls	r3, r2
 1581 0074 0849     		ldr	r1, .L86+8
 1582 0076 1800     		movs	r0, r3
 1583 0078 FFF7FEFF 		bl	__aeabi_uidiv
 1584              	.LVL0:
 1585 007c 0300     		movs	r3, r0
 1586 007e 1A00     		movs	r2, r3
 1587              		.loc 4 97 18
 1588 0080 3B1D     		adds	r3, r7, #4
 1589 0082 1A80     		strh	r2, [r3]
  98:adc.c         **** 
  99:adc.c         ****   return adc_data_mvolt;
 1590              		.loc 4 99 10
 1591 0084 3B1D     		adds	r3, r7, #4
 1592 0086 1B88     		ldrh	r3, [r3]
 100:adc.c         **** }
 1593              		.loc 4 100 1
 1594 0088 1800     		movs	r0, r3
 1595 008a BD46     		mov	sp, r7
 1596 008c 03B0     		add	sp, sp, #12
 1597              		@ sp needed
 1598 008e 90BD     		pop	{r4, r7, pc}
 1599              	.L87:
 1600              		.align	2
 1601              	.L86:
 1602 0090 00240140 		.word	1073816576
 1603 0094 E40C0000 		.word	3300
 1604 0098 FF0F0000 		.word	4095
 1605              		.cfi_endproc
 1606              	.LFE1190:
 1608              		.text
 1609              	.Letext0:
ARM GAS  /tmp/cctetIQd.s 			page 130


 1610              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1611              		.file 6 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l053xx.h"
 1612              		.file 7 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx
 1613              		.file 8 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h"
 1614              		.file 9 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h"
 1615              		.file 10 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_tim.h"
ARM GAS  /tmp/cctetIQd.s 			page 131


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/cctetIQd.s:16     .text.__NVIC_EnableIRQ:0000000000000000 $t
     /tmp/cctetIQd.s:23     .text.__NVIC_EnableIRQ:0000000000000000 __NVIC_EnableIRQ
     /tmp/cctetIQd.s:70     .text.__NVIC_EnableIRQ:0000000000000030 $d
     /tmp/cctetIQd.s:75     .text.__NVIC_SetPriority:0000000000000000 $t
     /tmp/cctetIQd.s:81     .text.__NVIC_SetPriority:0000000000000000 __NVIC_SetPriority
     /tmp/cctetIQd.s:238    .text.__NVIC_SetPriority:00000000000000d4 $d
     /tmp/cctetIQd.s:244    .text.LL_ADC_SetClock:0000000000000000 $t
     /tmp/cctetIQd.s:250    .text.LL_ADC_SetClock:0000000000000000 LL_ADC_SetClock
     /tmp/cctetIQd.s:286    .text.LL_ADC_SetSamplingTimeCommonChannels:0000000000000000 $t
     /tmp/cctetIQd.s:292    .text.LL_ADC_SetSamplingTimeCommonChannels:0000000000000000 LL_ADC_SetSamplingTimeCommonChannels
     /tmp/cctetIQd.s:328    .text.LL_ADC_REG_SetTriggerSource:0000000000000000 $t
     /tmp/cctetIQd.s:334    .text.LL_ADC_REG_SetTriggerSource:0000000000000000 LL_ADC_REG_SetTriggerSource
     /tmp/cctetIQd.s:368    .text.LL_ADC_REG_SetTriggerSource:0000000000000024 $d
     /tmp/cctetIQd.s:373    .text.LL_ADC_REG_SetSequencerChannels:0000000000000000 $t
     /tmp/cctetIQd.s:379    .text.LL_ADC_REG_SetSequencerChannels:0000000000000000 LL_ADC_REG_SetSequencerChannels
     /tmp/cctetIQd.s:411    .text.LL_ADC_REG_SetContinuousMode:0000000000000000 $t
     /tmp/cctetIQd.s:417    .text.LL_ADC_REG_SetContinuousMode:0000000000000000 LL_ADC_REG_SetContinuousMode
     /tmp/cctetIQd.s:451    .text.LL_ADC_REG_SetContinuousMode:0000000000000024 $d
     /tmp/cctetIQd.s:456    .text.LL_ADC_REG_SetOverrun:0000000000000000 $t
     /tmp/cctetIQd.s:462    .text.LL_ADC_REG_SetOverrun:0000000000000000 LL_ADC_REG_SetOverrun
     /tmp/cctetIQd.s:496    .text.LL_ADC_REG_SetOverrun:0000000000000024 $d
     /tmp/cctetIQd.s:501    .text.LL_ADC_Enable:0000000000000000 $t
     /tmp/cctetIQd.s:507    .text.LL_ADC_Enable:0000000000000000 LL_ADC_Enable
     /tmp/cctetIQd.s:540    .text.LL_ADC_Enable:0000000000000020 $d
     /tmp/cctetIQd.s:545    .text.LL_ADC_Disable:0000000000000000 $t
     /tmp/cctetIQd.s:551    .text.LL_ADC_Disable:0000000000000000 LL_ADC_Disable
     /tmp/cctetIQd.s:584    .text.LL_ADC_Disable:0000000000000020 $d
     /tmp/cctetIQd.s:589    .text.LL_ADC_IsEnabled:0000000000000000 $t
     /tmp/cctetIQd.s:595    .text.LL_ADC_IsEnabled:0000000000000000 LL_ADC_IsEnabled
     /tmp/cctetIQd.s:630    .text.LL_ADC_IsDisableOngoing:0000000000000000 $t
     /tmp/cctetIQd.s:636    .text.LL_ADC_IsDisableOngoing:0000000000000000 LL_ADC_IsDisableOngoing
     /tmp/cctetIQd.s:671    .text.LL_ADC_StartCalibration:0000000000000000 $t
     /tmp/cctetIQd.s:677    .text.LL_ADC_StartCalibration:0000000000000000 LL_ADC_StartCalibration
     /tmp/cctetIQd.s:711    .text.LL_ADC_StartCalibration:0000000000000024 $d
     /tmp/cctetIQd.s:716    .text.LL_ADC_IsCalibrationOnGoing:0000000000000000 $t
     /tmp/cctetIQd.s:722    .text.LL_ADC_IsCalibrationOnGoing:0000000000000000 LL_ADC_IsCalibrationOnGoing
     /tmp/cctetIQd.s:760    .text.LL_ADC_REG_StartConversion:0000000000000000 $t
     /tmp/cctetIQd.s:766    .text.LL_ADC_REG_StartConversion:0000000000000000 LL_ADC_REG_StartConversion
     /tmp/cctetIQd.s:799    .text.LL_ADC_REG_StartConversion:0000000000000020 $d
     /tmp/cctetIQd.s:804    .text.LL_ADC_REG_IsConversionOngoing:0000000000000000 $t
     /tmp/cctetIQd.s:810    .text.LL_ADC_REG_IsConversionOngoing:0000000000000000 LL_ADC_REG_IsConversionOngoing
     /tmp/cctetIQd.s:845    .text.LL_ADC_REG_ReadConversionData12:0000000000000000 $t
     /tmp/cctetIQd.s:851    .text.LL_ADC_REG_ReadConversionData12:0000000000000000 LL_ADC_REG_ReadConversionData12
     /tmp/cctetIQd.s:881    .text.LL_ADC_IsActiveFlag_ADRDY:0000000000000000 $t
     /tmp/cctetIQd.s:887    .text.LL_ADC_IsActiveFlag_ADRDY:0000000000000000 LL_ADC_IsActiveFlag_ADRDY
     /tmp/cctetIQd.s:922    .text.LL_ADC_IsActiveFlag_EOC:0000000000000000 $t
     /tmp/cctetIQd.s:928    .text.LL_ADC_IsActiveFlag_EOC:0000000000000000 LL_ADC_IsActiveFlag_EOC
     /tmp/cctetIQd.s:963    .text.LL_ADC_ClearFlag_EOS:0000000000000000 $t
     /tmp/cctetIQd.s:969    .text.LL_ADC_ClearFlag_EOS:0000000000000000 LL_ADC_ClearFlag_EOS
     /tmp/cctetIQd.s:998    .text.LL_ADC_EnableIT_OVR:0000000000000000 $t
     /tmp/cctetIQd.s:1004   .text.LL_ADC_EnableIT_OVR:0000000000000000 LL_ADC_EnableIT_OVR
     /tmp/cctetIQd.s:1036   .text.LL_APB2_GRP1_EnableClock:0000000000000000 $t
     /tmp/cctetIQd.s:1042   .text.LL_APB2_GRP1_EnableClock:0000000000000000 LL_APB2_GRP1_EnableClock
     /tmp/cctetIQd.s:1083   .text.LL_APB2_GRP1_EnableClock:0000000000000028 $d
     /tmp/cctetIQd.s:1088   .text.LL_IOP_GRP1_EnableClock:0000000000000000 $t
ARM GAS  /tmp/cctetIQd.s 			page 132


     /tmp/cctetIQd.s:1094   .text.LL_IOP_GRP1_EnableClock:0000000000000000 LL_IOP_GRP1_EnableClock
     /tmp/cctetIQd.s:1134   .text.LL_IOP_GRP1_EnableClock:0000000000000028 $d
     /tmp/cctetIQd.s:1139   .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
     /tmp/cctetIQd.s:1142   .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
     /tmp/cctetIQd.s:1145   .rodata.OFFSET_TAB_CCMRx:0000000000000000 $d
     /tmp/cctetIQd.s:1148   .rodata.OFFSET_TAB_CCMRx:0000000000000000 OFFSET_TAB_CCMRx
     /tmp/cctetIQd.s:1151   .rodata.SHIFT_TAB_OCxx:0000000000000000 $d
     /tmp/cctetIQd.s:1154   .rodata.SHIFT_TAB_OCxx:0000000000000000 SHIFT_TAB_OCxx
     /tmp/cctetIQd.s:1157   .rodata.SHIFT_TAB_ICxx:0000000000000000 $d
     /tmp/cctetIQd.s:1160   .rodata.SHIFT_TAB_ICxx:0000000000000000 SHIFT_TAB_ICxx
     /tmp/cctetIQd.s:1163   .rodata.SHIFT_TAB_CCxP:0000000000000000 $d
     /tmp/cctetIQd.s:1166   .rodata.SHIFT_TAB_CCxP:0000000000000000 SHIFT_TAB_CCxP
     /tmp/cctetIQd.s:1169   .text.adc_init:0000000000000000 $t
     /tmp/cctetIQd.s:1176   .text.adc_init:0000000000000000 adc_init
     /tmp/cctetIQd.s:1304   .text.adc_init:00000000000000cc $d
     /tmp/cctetIQd.s:1310   .text.adc_enable:0000000000000000 $t
     /tmp/cctetIQd.s:1317   .text.adc_enable:0000000000000000 adc_enable
     /tmp/cctetIQd.s:1399   .text.adc_enable:0000000000000064 $d
     /tmp/cctetIQd.s:1404   .text.adc_disable:0000000000000000 $t
     /tmp/cctetIQd.s:1411   .text.adc_disable:0000000000000000 adc_disable
     /tmp/cctetIQd.s:1459   .text.adc_disable:0000000000000034 $d
     /tmp/cctetIQd.s:1464   .text.ADC1_COMP_IRQHandler:0000000000000000 $t
     /tmp/cctetIQd.s:1471   .text.ADC1_COMP_IRQHandler:0000000000000000 ADC1_COMP_IRQHandler
     /tmp/cctetIQd.s:1493   .text.adc_read:0000000000000000 $t
     /tmp/cctetIQd.s:1500   .text.adc_read:0000000000000000 adc_read
     /tmp/cctetIQd.s:1602   .text.adc_read:0000000000000090 $d
                           .group:0000000000000000 wm4.0.0ccbabe563133fc225e2d8e0f610ba9f
                           .group:0000000000000000 wm4.stdint.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:0000000000000000 wm4.stm32l0xx.h.41.7b64cc93e03e8878c239b019b0203858
                           .group:0000000000000000 wm4.stm32l053xx.h.37.ca2b7421d255c88f6356eb3a3a2ee1bf
                           .group:0000000000000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:0000000000000000 wm4.core_cm0plus.h.66.bb83319bcb10b4c5f12c477f85f2aa51
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.ee5bffeddf1dfc3eae08637d3a2ff2e9
                           .group:0000000000000000 wm4.core_cm0plus.h.127.cfee784d07c850b645554dc8add78e69
                           .group:0000000000000000 wm4.mpu_armv7.h.32.27b4593cb2f8d3152ca5d97a9d72b321
                           .group:0000000000000000 wm4.stm32l053xx.h.614.694649dd621f0085702f358f34f2e881
                           .group:0000000000000000 wm4.stm32l0xx.h.181.12fc143042e31117baaa7481c9b3a4da
                           .group:0000000000000000 wm4.stm32l0xx_ll_adc.h.53.91d59053932c36ec7ab0113730073858
                           .group:0000000000000000 wm4.stm32l0xx_ll_bus.h.39.0510174e5f715ad27b7a3ab14a00f67f
                           .group:0000000000000000 wm4.stm32l0xx_ll_cortex.h.36.79806d0582701c757eec56b9283c8db9
                           .group:0000000000000000 wm4.stm32l0xx_ll_dma.h.22.2c7ed561e963f82ffce8c2bce65b6553
                           .group:0000000000000000 wm4.stm32l0xx_ll_exti.h.22.40dada7a5d00275d94259df1c6059451
                           .group:0000000000000000 wm4.stm32l0xx_ll_gpio.h.22.2d480da0be320d9dd6c23b35850d228e
                           .group:0000000000000000 wm4.stm32l0xx_ll_i2c.h.22.725accc0a52325f50ab3a978af524a24
                           .group:0000000000000000 wm4.stm32l0xx_ll_lpuart.h.22.6020d530b61d554b81cf28e59330a90d
                           .group:0000000000000000 wm4.stm32l0xx_ll_pwr.h.22.37f0d8ce0f44f5122f24332e7c6edbd0
                           .group:0000000000000000 wm4.stm32l0xx_ll_rcc.h.22.3a6b3922d12b176ce51cb12e1f8867c4
                           .group:0000000000000000 wm4.stm32l0xx_ll_system.h.34.d04c425d3668e616038a98754635b261
                           .group:0000000000000000 wm4.stm32l0xx_ll_tim.h.22.59fb8166bd8c25f1f07b60ae6d7944da
                           .group:0000000000000000 wm4.stm32l0xx_ll_usart.h.22.15bd106c8b738649c65f9703ee30f935
                           .group:0000000000000000 wm4.stm32l0xx_ll_utils.h.34.15360273e66a16baad8d70fb7aab35d9
                           .group:0000000000000000 wm4.nucleo_board.h.19.e3019b1074b7ca9a1ad379de5c504b44
                           .group:0000000000000000 wm4.common.h.9.9862d16395f6d712cb62bb1aea663ff0

UNDEFINED SYMBOLS
memset
LL_GPIO_Init
ARM GAS  /tmp/cctetIQd.s 			page 133


error_handler
__aeabi_uidiv
