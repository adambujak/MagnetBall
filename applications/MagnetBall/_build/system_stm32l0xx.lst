ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32l0xx.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	SystemCoreClock
  16              		.section	.data.SystemCoreClock,"aw"
  17              		.align	2
  20              	SystemCoreClock:
  21 0000 00002000 		.word	2097152
  22              		.global	AHBPrescTable
  23              		.section	.rodata.AHBPrescTable,"a"
  24              		.align	2
  27              	AHBPrescTable:
  28 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
  28      00000000 
  28      01020304 
  28      06
  29 000d 070809   		.ascii	"\007\010\011"
  30              		.global	APBPrescTable
  31              		.section	.rodata.APBPrescTable,"a"
  32              		.align	2
  35              	APBPrescTable:
  36 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
  36      01020304 
  37              		.global	PLLMulTable
  38              		.section	.rodata.PLLMulTable,"a"
  39              		.align	2
  42              	PLLMulTable:
  43 0000 03040608 		.ascii	"\003\004\006\010\014\020\030 0"
  43      0C101820 
  43      30
  44              		.section	.text.SystemInit,"ax",%progbits
  45              		.align	1
  46              		.global	SystemInit
  47              		.arch armv6s-m
  48              		.syntax unified
  49              		.code	16
  50              		.thumb_func
  51              		.fpu softvfp
  53              	SystemInit:
  54              	.LFB47:
  55              		.file 1 "system_stm32l0xx.c"
   1:system_stm32l0xx.c **** /**
   2:system_stm32l0xx.c ****  ******************************************************************************
   3:system_stm32l0xx.c ****  * @file    system_stm32l0xx.c
   4:system_stm32l0xx.c ****  * @author  MCD Application Team
   5:system_stm32l0xx.c ****  * @brief   CMSIS Cortex-M0+ Device Peripheral Access Layer System Source File.
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s 			page 2


   6:system_stm32l0xx.c ****  *
   7:system_stm32l0xx.c ****  *   This file provides two functions and one global variable to be called from
   8:system_stm32l0xx.c ****  *   user application:
   9:system_stm32l0xx.c ****  *      - SystemInit(): This function is called at startup just after reset and
  10:system_stm32l0xx.c ****  *                      before branch to main program. This call is made inside
  11:system_stm32l0xx.c ****  *                      the "startup_stm32l0xx.s" file.
  12:system_stm32l0xx.c ****  *
  13:system_stm32l0xx.c ****  *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:system_stm32l0xx.c ****  *                                  by the user application to setup the SysTick
  15:system_stm32l0xx.c ****  *                                  timer or configure other parameters.
  16:system_stm32l0xx.c ****  *
  17:system_stm32l0xx.c ****  *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:system_stm32l0xx.c ****  *                                 be called whenever the core clock is changed
  19:system_stm32l0xx.c ****  *                                 during program execution.
  20:system_stm32l0xx.c ****  *
  21:system_stm32l0xx.c ****  *
  22:system_stm32l0xx.c ****  ******************************************************************************
  23:system_stm32l0xx.c ****  * @attention
  24:system_stm32l0xx.c ****  *
  25:system_stm32l0xx.c ****  * <h2><center>&copy; Copyright(c) 2016 STMicroelectronics.
  26:system_stm32l0xx.c ****  * All rights reserved.</center></h2>
  27:system_stm32l0xx.c ****  *
  28:system_stm32l0xx.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  29:system_stm32l0xx.c ****  * the "License"; You may not use this file except in compliance with the
  30:system_stm32l0xx.c ****  * License. You may obtain a copy of the License at:
  31:system_stm32l0xx.c ****  *                        opensource.org/licenses/BSD-3-Clause
  32:system_stm32l0xx.c ****  *
  33:system_stm32l0xx.c ****  ******************************************************************************
  34:system_stm32l0xx.c ****  */
  35:system_stm32l0xx.c **** 
  36:system_stm32l0xx.c **** /** @addtogroup CMSIS
  37:system_stm32l0xx.c ****  * @{
  38:system_stm32l0xx.c ****  */
  39:system_stm32l0xx.c **** 
  40:system_stm32l0xx.c **** /** @addtogroup stm32l0xx_system
  41:system_stm32l0xx.c ****  * @{
  42:system_stm32l0xx.c ****  */
  43:system_stm32l0xx.c **** 
  44:system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Includes
  45:system_stm32l0xx.c ****  * @{
  46:system_stm32l0xx.c ****  */
  47:system_stm32l0xx.c **** 
  48:system_stm32l0xx.c **** #include "stm32l0xx.h"
  49:system_stm32l0xx.c **** 
  50:system_stm32l0xx.c **** #if !defined  (HSE_VALUE)
  51:system_stm32l0xx.c ****   #define HSE_VALUE    ((uint32_t) 8000000U) /*!< Value of the External oscillator in Hz */
  52:system_stm32l0xx.c **** #endif /* HSE_VALUE */
  53:system_stm32l0xx.c **** 
  54:system_stm32l0xx.c **** #if !defined  (MSI_VALUE)
  55:system_stm32l0xx.c ****   #define MSI_VALUE    ((uint32_t) 2097152U) /*!< Value of the Internal oscillator in Hz*/
  56:system_stm32l0xx.c **** #endif /* MSI_VALUE */
  57:system_stm32l0xx.c **** 
  58:system_stm32l0xx.c **** #if !defined  (HSI_VALUE)
  59:system_stm32l0xx.c ****   #define HSI_VALUE    ((uint32_t) 16000000U) /*!< Value of the Internal oscillator in Hz*/
  60:system_stm32l0xx.c **** #endif /* HSI_VALUE */
  61:system_stm32l0xx.c **** 
  62:system_stm32l0xx.c **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s 			page 3


  63:system_stm32l0xx.c **** /**
  64:system_stm32l0xx.c ****  * @}
  65:system_stm32l0xx.c ****  */
  66:system_stm32l0xx.c **** 
  67:system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_TypesDefinitions
  68:system_stm32l0xx.c ****  * @{
  69:system_stm32l0xx.c ****  */
  70:system_stm32l0xx.c **** 
  71:system_stm32l0xx.c **** /**
  72:system_stm32l0xx.c ****  * @}
  73:system_stm32l0xx.c ****  */
  74:system_stm32l0xx.c **** 
  75:system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Defines
  76:system_stm32l0xx.c ****  * @{
  77:system_stm32l0xx.c ****  */
  78:system_stm32l0xx.c **** /************************* Miscellaneous Configuration ************************/
  79:system_stm32l0xx.c **** 
  80:system_stm32l0xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  81:system_stm32l0xx.c ****  *   Internal SRAM. */
  82:system_stm32l0xx.c **** /* #define VECT_TAB_SRAM */
  83:system_stm32l0xx.c **** #define VECT_TAB_OFFSET    0x00U /*!< Vector Table base offset field.
  84:system_stm32l0xx.c ****                                   *  This value must be a multiple of 0x100. */
  85:system_stm32l0xx.c **** /******************************************************************************/
  86:system_stm32l0xx.c **** 
  87:system_stm32l0xx.c **** /**
  88:system_stm32l0xx.c ****  * @}
  89:system_stm32l0xx.c ****  */
  90:system_stm32l0xx.c **** 
  91:system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Macros
  92:system_stm32l0xx.c ****  * @{
  93:system_stm32l0xx.c ****  */
  94:system_stm32l0xx.c **** 
  95:system_stm32l0xx.c **** /**
  96:system_stm32l0xx.c ****  * @}
  97:system_stm32l0xx.c ****  */
  98:system_stm32l0xx.c **** 
  99:system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Variables
 100:system_stm32l0xx.c ****  * @{
 101:system_stm32l0xx.c ****  */
 102:system_stm32l0xx.c **** 
 103:system_stm32l0xx.c **** /* This variable is updated in three ways:
 104:system_stm32l0xx.c ****  *  1) by calling CMSIS function SystemCoreClockUpdate()
 105:system_stm32l0xx.c ****  *  2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 106:system_stm32l0xx.c ****  *  3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 107:system_stm32l0xx.c ****  *     Note: If you use this function to configure the system clock; then there
 108:system_stm32l0xx.c ****  *           is no need to call the 2 first functions listed above, since SystemCoreClock
 109:system_stm32l0xx.c ****  *           variable is updated automatically.
 110:system_stm32l0xx.c ****  */
 111:system_stm32l0xx.c **** uint32_t SystemCoreClock = 2097152U;   /* 32.768 kHz * 2^6 */
 112:system_stm32l0xx.c **** const uint8_t AHBPrescTable[16] = { 0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9U 
 113:system_stm32l0xx.c **** const uint8_t APBPrescTable[8] = { 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U };
 114:system_stm32l0xx.c **** const uint8_t PLLMulTable[9] = { 3U, 4U, 6U, 8U, 12U, 16U, 24U, 32U, 48U };
 115:system_stm32l0xx.c **** 
 116:system_stm32l0xx.c **** /**
 117:system_stm32l0xx.c ****  * @}
 118:system_stm32l0xx.c ****  */
 119:system_stm32l0xx.c **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s 			page 4


 120:system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_FunctionPrototypes
 121:system_stm32l0xx.c ****  * @{
 122:system_stm32l0xx.c ****  */
 123:system_stm32l0xx.c **** 
 124:system_stm32l0xx.c **** /**
 125:system_stm32l0xx.c ****  * @}
 126:system_stm32l0xx.c ****  */
 127:system_stm32l0xx.c **** 
 128:system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Functions
 129:system_stm32l0xx.c ****  * @{
 130:system_stm32l0xx.c ****  */
 131:system_stm32l0xx.c **** 
 132:system_stm32l0xx.c **** /**
 133:system_stm32l0xx.c ****  * @brief  Setup the microcontroller system.
 134:system_stm32l0xx.c ****  * @param  None
 135:system_stm32l0xx.c ****  * @retval None
 136:system_stm32l0xx.c ****  */
 137:system_stm32l0xx.c **** void SystemInit(void)
 138:system_stm32l0xx.c **** {
  56              		.loc 1 138 1
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 1, uses_anonymous_args = 0
  60 0000 80B5     		push	{r7, lr}
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 7, -8
  63              		.cfi_offset 14, -4
  64 0002 00AF     		add	r7, sp, #0
  65              		.cfi_def_cfa_register 7
 139:system_stm32l0xx.c **** /*!< Set MSION bit */
 140:system_stm32l0xx.c ****   RCC->CR |= (uint32_t) 0x00000100U;
  66              		.loc 1 140 11
  67 0004 174B     		ldr	r3, .L2
  68 0006 1A68     		ldr	r2, [r3]
  69 0008 164B     		ldr	r3, .L2
  70 000a 8021     		movs	r1, #128
  71 000c 4900     		lsls	r1, r1, #1
  72 000e 0A43     		orrs	r2, r1
  73 0010 1A60     		str	r2, [r3]
 141:system_stm32l0xx.c **** 
 142:system_stm32l0xx.c ****   /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
 143:system_stm32l0xx.c ****   RCC->CFGR &= (uint32_t) 0x88FF400CU;
  74              		.loc 1 143 13
  75 0012 144B     		ldr	r3, .L2
  76 0014 DA68     		ldr	r2, [r3, #12]
  77 0016 134B     		ldr	r3, .L2
  78 0018 1349     		ldr	r1, .L2+4
  79 001a 0A40     		ands	r2, r1
  80 001c DA60     		str	r2, [r3, #12]
 144:system_stm32l0xx.c **** 
 145:system_stm32l0xx.c ****   /*!< Reset HSION, HSIDIVEN, HSEON, CSSON and PLLON bits */
 146:system_stm32l0xx.c ****   RCC->CR &= (uint32_t) 0xFEF6FFF6U;
  81              		.loc 1 146 11
  82 001e 114B     		ldr	r3, .L2
  83 0020 1A68     		ldr	r2, [r3]
  84 0022 104B     		ldr	r3, .L2
  85 0024 1149     		ldr	r1, .L2+8
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s 			page 5


  86 0026 0A40     		ands	r2, r1
  87 0028 1A60     		str	r2, [r3]
 147:system_stm32l0xx.c **** 
 148:system_stm32l0xx.c ****   /*!< Reset HSI48ON  bit */
 149:system_stm32l0xx.c ****   RCC->CRRCR &= (uint32_t) 0xFFFFFFFEU;
  88              		.loc 1 149 14
  89 002a 0E4B     		ldr	r3, .L2
  90 002c 9A68     		ldr	r2, [r3, #8]
  91 002e 0D4B     		ldr	r3, .L2
  92 0030 0121     		movs	r1, #1
  93 0032 8A43     		bics	r2, r1
  94 0034 9A60     		str	r2, [r3, #8]
 150:system_stm32l0xx.c **** 
 151:system_stm32l0xx.c ****   /*!< Reset HSEBYP bit */
 152:system_stm32l0xx.c ****   RCC->CR &= (uint32_t) 0xFFFBFFFFU;
  95              		.loc 1 152 11
  96 0036 0B4B     		ldr	r3, .L2
  97 0038 1A68     		ldr	r2, [r3]
  98 003a 0A4B     		ldr	r3, .L2
  99 003c 0C49     		ldr	r1, .L2+12
 100 003e 0A40     		ands	r2, r1
 101 0040 1A60     		str	r2, [r3]
 153:system_stm32l0xx.c **** 
 154:system_stm32l0xx.c ****   /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
 155:system_stm32l0xx.c ****   RCC->CFGR &= (uint32_t) 0xFF02FFFFU;
 102              		.loc 1 155 13
 103 0042 084B     		ldr	r3, .L2
 104 0044 DA68     		ldr	r2, [r3, #12]
 105 0046 074B     		ldr	r3, .L2
 106 0048 0A49     		ldr	r1, .L2+16
 107 004a 0A40     		ands	r2, r1
 108 004c DA60     		str	r2, [r3, #12]
 156:system_stm32l0xx.c **** 
 157:system_stm32l0xx.c ****   /*!< Disable all interrupts */
 158:system_stm32l0xx.c ****   RCC->CIER = 0x00000000U;
 109              		.loc 1 158 6
 110 004e 054B     		ldr	r3, .L2
 111              		.loc 1 158 13
 112 0050 0022     		movs	r2, #0
 113 0052 1A61     		str	r2, [r3, #16]
 159:system_stm32l0xx.c **** 
 160:system_stm32l0xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 161:system_stm32l0xx.c **** #ifdef VECT_TAB_SRAM
 162:system_stm32l0xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET;  /* Vector Table Relocation in Internal SRAM */
 163:system_stm32l0xx.c **** #else
 164:system_stm32l0xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 114              		.loc 1 164 6
 115 0054 084B     		ldr	r3, .L2+20
 116              		.loc 1 164 13
 117 0056 8022     		movs	r2, #128
 118 0058 1205     		lsls	r2, r2, #20
 119 005a 9A60     		str	r2, [r3, #8]
 165:system_stm32l0xx.c **** #endif
 166:system_stm32l0xx.c **** }
 120              		.loc 1 166 1
 121 005c C046     		nop
 122 005e BD46     		mov	sp, r7
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s 			page 6


 123              		@ sp needed
 124 0060 80BD     		pop	{r7, pc}
 125              	.L3:
 126 0062 C046     		.align	2
 127              	.L2:
 128 0064 00100240 		.word	1073876992
 129 0068 0C40FF88 		.word	-1996537844
 130 006c F6FFF6FE 		.word	-17367050
 131 0070 FFFFFBFF 		.word	-262145
 132 0074 FFFF02FF 		.word	-16580609
 133 0078 00ED00E0 		.word	-536810240
 134              		.cfi_endproc
 135              	.LFE47:
 137              		.global	__aeabi_uidiv
 138              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 139              		.align	1
 140              		.global	SystemCoreClockUpdate
 141              		.syntax unified
 142              		.code	16
 143              		.thumb_func
 144              		.fpu softvfp
 146              	SystemCoreClockUpdate:
 147              	.LFB48:
 167:system_stm32l0xx.c **** 
 168:system_stm32l0xx.c **** /**
 169:system_stm32l0xx.c ****  * @brief  Update SystemCoreClock according to Clock Register Values
 170:system_stm32l0xx.c ****  *         The SystemCoreClock variable contains the core clock (HCLK), it can
 171:system_stm32l0xx.c ****  *         be used by the user application to setup the SysTick timer or configure
 172:system_stm32l0xx.c ****  *         other parameters.
 173:system_stm32l0xx.c ****  *
 174:system_stm32l0xx.c ****  * @note   Each time the core clock (HCLK) changes, this function must be called
 175:system_stm32l0xx.c ****  *         to update SystemCoreClock variable value. Otherwise, any configuration
 176:system_stm32l0xx.c ****  *         based on this variable will be incorrect.
 177:system_stm32l0xx.c ****  *
 178:system_stm32l0xx.c ****  * @note   - The system frequency computed by this function is not the real
 179:system_stm32l0xx.c ****  *           frequency in the chip. It is calculated based on the predefined
 180:system_stm32l0xx.c ****  *           constant and the selected clock source:
 181:system_stm32l0xx.c ****  *
 182:system_stm32l0xx.c ****  *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI
 183:system_stm32l0xx.c ****  *             value as defined by the MSI range.
 184:system_stm32l0xx.c ****  *
 185:system_stm32l0xx.c ****  *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 186:system_stm32l0xx.c ****  *
 187:system_stm32l0xx.c ****  *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 188:system_stm32l0xx.c ****  *
 189:system_stm32l0xx.c ****  *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 190:system_stm32l0xx.c ****  *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 191:system_stm32l0xx.c ****  *
 192:system_stm32l0xx.c ****  *         (*) HSI_VALUE is a constant defined in stm32l0xx_hal.h file (default value
 193:system_stm32l0xx.c ****  *             16 MHz) but the real value may vary depending on the variations
 194:system_stm32l0xx.c ****  *             in voltage and temperature.
 195:system_stm32l0xx.c ****  *
 196:system_stm32l0xx.c ****  *         (**) HSE_VALUE is a constant defined in stm32l0xx_hal.h file (default value
 197:system_stm32l0xx.c ****  *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 198:system_stm32l0xx.c ****  *              frequency of the crystal used. Otherwise, this function may
 199:system_stm32l0xx.c ****  *              have wrong result.
 200:system_stm32l0xx.c ****  *
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s 			page 7


 201:system_stm32l0xx.c ****  *         - The result of this function could be not correct when using fractional
 202:system_stm32l0xx.c ****  *           value for HSE crystal.
 203:system_stm32l0xx.c ****  * @param  None
 204:system_stm32l0xx.c ****  * @retval None
 205:system_stm32l0xx.c ****  */
 206:system_stm32l0xx.c **** void SystemCoreClockUpdate(void)
 207:system_stm32l0xx.c **** {
 148              		.loc 1 207 1
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 24
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152 0000 80B5     		push	{r7, lr}
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 7, -8
 155              		.cfi_offset 14, -4
 156 0002 86B0     		sub	sp, sp, #24
 157              		.cfi_def_cfa_offset 32
 158 0004 00AF     		add	r7, sp, #0
 159              		.cfi_def_cfa_register 7
 208:system_stm32l0xx.c ****   uint32_t tmp = 0U, pllmul = 0U, plldiv = 0U, pllsource = 0U, msirange = 0U;
 160              		.loc 1 208 12
 161 0006 0023     		movs	r3, #0
 162 0008 7B61     		str	r3, [r7, #20]
 163              		.loc 1 208 22
 164 000a 0023     		movs	r3, #0
 165 000c 3B61     		str	r3, [r7, #16]
 166              		.loc 1 208 35
 167 000e 0023     		movs	r3, #0
 168 0010 FB60     		str	r3, [r7, #12]
 169              		.loc 1 208 48
 170 0012 0023     		movs	r3, #0
 171 0014 BB60     		str	r3, [r7, #8]
 172              		.loc 1 208 64
 173 0016 0023     		movs	r3, #0
 174 0018 7B60     		str	r3, [r7, #4]
 209:system_stm32l0xx.c **** 
 210:system_stm32l0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 211:system_stm32l0xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 175              		.loc 1 211 12
 176 001a 4E4B     		ldr	r3, .L16
 177 001c DB68     		ldr	r3, [r3, #12]
 178              		.loc 1 211 7
 179 001e 0C22     		movs	r2, #12
 180 0020 1340     		ands	r3, r2
 181 0022 7B61     		str	r3, [r7, #20]
 212:system_stm32l0xx.c **** 
 213:system_stm32l0xx.c ****   switch (tmp) {
 182              		.loc 1 213 3
 183 0024 7B69     		ldr	r3, [r7, #20]
 184 0026 082B     		cmp	r3, #8
 185 0028 24D0     		beq	.L5
 186 002a 7B69     		ldr	r3, [r7, #20]
 187 002c 082B     		cmp	r3, #8
 188 002e 25D8     		bhi	.L6
 189 0030 7B69     		ldr	r3, [r7, #20]
 190 0032 002B     		cmp	r3, #0
 191 0034 03D0     		beq	.L7
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s 			page 8


 192 0036 7B69     		ldr	r3, [r7, #20]
 193 0038 042B     		cmp	r3, #4
 194 003a 0ED0     		beq	.L8
 195 003c 1EE0     		b	.L6
 196              	.L7:
 214:system_stm32l0xx.c ****   case 0x00U:    /* MSI used as system clock */
 215:system_stm32l0xx.c ****     msirange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE) >> RCC_ICSCR_MSIRANGE_Pos;
 197              		.loc 1 215 20
 198 003e 454B     		ldr	r3, .L16
 199 0040 5B68     		ldr	r3, [r3, #4]
 200              		.loc 1 215 50
 201 0042 5B0B     		lsrs	r3, r3, #13
 202              		.loc 1 215 14
 203 0044 0722     		movs	r2, #7
 204 0046 1340     		ands	r3, r2
 205 0048 7B60     		str	r3, [r7, #4]
 216:system_stm32l0xx.c ****     SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 206              		.loc 1 216 50
 207 004a 7B68     		ldr	r3, [r7, #4]
 208 004c 0133     		adds	r3, r3, #1
 209              		.loc 1 216 31
 210 004e 8022     		movs	r2, #128
 211 0050 1202     		lsls	r2, r2, #8
 212 0052 9A40     		lsls	r2, r2, r3
 213              		.loc 1 216 21
 214 0054 404B     		ldr	r3, .L16+4
 215 0056 1A60     		str	r2, [r3]
 217:system_stm32l0xx.c ****     break;
 216              		.loc 1 217 5
 217 0058 69E0     		b	.L9
 218              	.L8:
 218:system_stm32l0xx.c **** 
 219:system_stm32l0xx.c ****   case 0x04U:    /* HSI used as system clock */
 220:system_stm32l0xx.c ****     if ((RCC->CR & RCC_CR_HSIDIVF) != 0U) {
 219              		.loc 1 220 13
 220 005a 3E4B     		ldr	r3, .L16
 221 005c 1B68     		ldr	r3, [r3]
 222              		.loc 1 220 18
 223 005e 1022     		movs	r2, #16
 224 0060 1340     		ands	r3, r2
 225              		.loc 1 220 8
 226 0062 03D0     		beq	.L10
 221:system_stm32l0xx.c ****       SystemCoreClock = HSI_VALUE / 4U;
 227              		.loc 1 221 23
 228 0064 3C4B     		ldr	r3, .L16+4
 229 0066 3D4A     		ldr	r2, .L16+8
 230 0068 1A60     		str	r2, [r3]
 222:system_stm32l0xx.c ****     }
 223:system_stm32l0xx.c ****     else{
 224:system_stm32l0xx.c ****       SystemCoreClock = HSI_VALUE;
 225:system_stm32l0xx.c ****     }
 226:system_stm32l0xx.c ****     break;
 231              		.loc 1 226 5
 232 006a 60E0     		b	.L9
 233              	.L10:
 224:system_stm32l0xx.c ****     }
 234              		.loc 1 224 23
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s 			page 9


 235 006c 3A4B     		ldr	r3, .L16+4
 236 006e 3C4A     		ldr	r2, .L16+12
 237 0070 1A60     		str	r2, [r3]
 238              		.loc 1 226 5
 239 0072 5CE0     		b	.L9
 240              	.L5:
 227:system_stm32l0xx.c **** 
 228:system_stm32l0xx.c ****   case 0x08U:    /* HSE used as system clock */
 229:system_stm32l0xx.c ****     SystemCoreClock = HSE_VALUE;
 241              		.loc 1 229 21
 242 0074 384B     		ldr	r3, .L16+4
 243 0076 3B4A     		ldr	r2, .L16+16
 244 0078 1A60     		str	r2, [r3]
 230:system_stm32l0xx.c ****     break;
 245              		.loc 1 230 5
 246 007a 58E0     		b	.L9
 247              	.L6:
 231:system_stm32l0xx.c **** 
 232:system_stm32l0xx.c ****   default:    /* PLL used as system clock */
 233:system_stm32l0xx.c ****     /* Get PLL clock source and multiplication factor ----------------------*/
 234:system_stm32l0xx.c ****     pllmul = RCC->CFGR & RCC_CFGR_PLLMUL;
 248              		.loc 1 234 17
 249 007c 354B     		ldr	r3, .L16
 250 007e DA68     		ldr	r2, [r3, #12]
 251              		.loc 1 234 12
 252 0080 F023     		movs	r3, #240
 253 0082 9B03     		lsls	r3, r3, #14
 254 0084 1340     		ands	r3, r2
 255 0086 3B61     		str	r3, [r7, #16]
 235:system_stm32l0xx.c ****     plldiv = RCC->CFGR & RCC_CFGR_PLLDIV;
 256              		.loc 1 235 17
 257 0088 324B     		ldr	r3, .L16
 258 008a DA68     		ldr	r2, [r3, #12]
 259              		.loc 1 235 12
 260 008c C023     		movs	r3, #192
 261 008e 1B04     		lsls	r3, r3, #16
 262 0090 1340     		ands	r3, r2
 263 0092 FB60     		str	r3, [r7, #12]
 236:system_stm32l0xx.c ****     pllmul = PLLMulTable[(pllmul >> RCC_CFGR_PLLMUL_Pos)];
 264              		.loc 1 236 34
 265 0094 3B69     		ldr	r3, [r7, #16]
 266 0096 9B0C     		lsrs	r3, r3, #18
 267              		.loc 1 236 25
 268 0098 334A     		ldr	r2, .L16+20
 269 009a D35C     		ldrb	r3, [r2, r3]
 270              		.loc 1 236 12
 271 009c 3B61     		str	r3, [r7, #16]
 237:system_stm32l0xx.c ****     plldiv = (plldiv >> RCC_CFGR_PLLDIV_Pos) + 1U;
 272              		.loc 1 237 22
 273 009e FB68     		ldr	r3, [r7, #12]
 274 00a0 9B0D     		lsrs	r3, r3, #22
 275              		.loc 1 237 12
 276 00a2 0133     		adds	r3, r3, #1
 277 00a4 FB60     		str	r3, [r7, #12]
 238:system_stm32l0xx.c **** 
 239:system_stm32l0xx.c ****     pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 278              		.loc 1 239 20
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s 			page 10


 279 00a6 2B4B     		ldr	r3, .L16
 280 00a8 DA68     		ldr	r2, [r3, #12]
 281              		.loc 1 239 15
 282 00aa 8023     		movs	r3, #128
 283 00ac 5B02     		lsls	r3, r3, #9
 284 00ae 1340     		ands	r3, r2
 285 00b0 BB60     		str	r3, [r7, #8]
 240:system_stm32l0xx.c **** 
 241:system_stm32l0xx.c ****     if (pllsource == 0x00U) {
 286              		.loc 1 241 8
 287 00b2 BB68     		ldr	r3, [r7, #8]
 288 00b4 002B     		cmp	r3, #0
 289 00b6 28D1     		bne	.L12
 242:system_stm32l0xx.c ****       /* HSI oscillator clock selected as PLL clock entry */
 243:system_stm32l0xx.c ****       if ((RCC->CR & RCC_CR_HSIDIVF) != 0U) {
 290              		.loc 1 243 15
 291 00b8 264B     		ldr	r3, .L16
 292 00ba 1B68     		ldr	r3, [r3]
 293              		.loc 1 243 20
 294 00bc 1022     		movs	r2, #16
 295 00be 1340     		ands	r3, r2
 296              		.loc 1 243 10
 297 00c0 11D0     		beq	.L13
 244:system_stm32l0xx.c ****         SystemCoreClock = (((HSI_VALUE / 4U) * pllmul) / plldiv);
 298              		.loc 1 244 46
 299 00c2 3969     		ldr	r1, [r7, #16]
 300 00c4 0A00     		movs	r2, r1
 301 00c6 5201     		lsls	r2, r2, #5
 302 00c8 521A     		subs	r2, r2, r1
 303 00ca 9301     		lsls	r3, r2, #6
 304 00cc 9B1A     		subs	r3, r3, r2
 305 00ce DB00     		lsls	r3, r3, #3
 306 00d0 5B18     		adds	r3, r3, r1
 307 00d2 1B02     		lsls	r3, r3, #8
 308              		.loc 1 244 56
 309 00d4 F968     		ldr	r1, [r7, #12]
 310 00d6 1800     		movs	r0, r3
 311 00d8 FFF7FEFF 		bl	__aeabi_uidiv
 312 00dc 0300     		movs	r3, r0
 313 00de 1A00     		movs	r2, r3
 314              		.loc 1 244 25
 315 00e0 1D4B     		ldr	r3, .L16+4
 316 00e2 1A60     		str	r2, [r3]
 245:system_stm32l0xx.c ****       }
 246:system_stm32l0xx.c ****       else{
 247:system_stm32l0xx.c ****         SystemCoreClock = (((HSI_VALUE) *pllmul) / plldiv);
 248:system_stm32l0xx.c ****       }
 249:system_stm32l0xx.c ****     }
 250:system_stm32l0xx.c ****     else{
 251:system_stm32l0xx.c ****       /* HSE selected as PLL clock entry */
 252:system_stm32l0xx.c ****       SystemCoreClock = (((HSE_VALUE) *pllmul) / plldiv);
 253:system_stm32l0xx.c ****     }
 254:system_stm32l0xx.c ****     break;
 317              		.loc 1 254 5
 318 00e4 22E0     		b	.L15
 319              	.L13:
 247:system_stm32l0xx.c ****       }
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s 			page 11


 320              		.loc 1 247 41
 321 00e6 3969     		ldr	r1, [r7, #16]
 322 00e8 0A00     		movs	r2, r1
 323 00ea 5201     		lsls	r2, r2, #5
 324 00ec 521A     		subs	r2, r2, r1
 325 00ee 9301     		lsls	r3, r2, #6
 326 00f0 9B1A     		subs	r3, r3, r2
 327 00f2 DB00     		lsls	r3, r3, #3
 328 00f4 5B18     		adds	r3, r3, r1
 329 00f6 9B02     		lsls	r3, r3, #10
 247:system_stm32l0xx.c ****       }
 330              		.loc 1 247 50
 331 00f8 F968     		ldr	r1, [r7, #12]
 332 00fa 1800     		movs	r0, r3
 333 00fc FFF7FEFF 		bl	__aeabi_uidiv
 334 0100 0300     		movs	r3, r0
 335 0102 1A00     		movs	r2, r3
 247:system_stm32l0xx.c ****       }
 336              		.loc 1 247 25
 337 0104 144B     		ldr	r3, .L16+4
 338 0106 1A60     		str	r2, [r3]
 339              		.loc 1 254 5
 340 0108 10E0     		b	.L15
 341              	.L12:
 252:system_stm32l0xx.c ****     }
 342              		.loc 1 252 39
 343 010a 3969     		ldr	r1, [r7, #16]
 344 010c 0A00     		movs	r2, r1
 345 010e 5201     		lsls	r2, r2, #5
 346 0110 521A     		subs	r2, r2, r1
 347 0112 9301     		lsls	r3, r2, #6
 348 0114 9B1A     		subs	r3, r3, r2
 349 0116 DB00     		lsls	r3, r3, #3
 350 0118 5B18     		adds	r3, r3, r1
 351 011a 5B02     		lsls	r3, r3, #9
 252:system_stm32l0xx.c ****     }
 352              		.loc 1 252 48
 353 011c F968     		ldr	r1, [r7, #12]
 354 011e 1800     		movs	r0, r3
 355 0120 FFF7FEFF 		bl	__aeabi_uidiv
 356 0124 0300     		movs	r3, r0
 357 0126 1A00     		movs	r2, r3
 252:system_stm32l0xx.c ****     }
 358              		.loc 1 252 23
 359 0128 0B4B     		ldr	r3, .L16+4
 360 012a 1A60     		str	r2, [r3]
 361              	.L15:
 362              		.loc 1 254 5
 363 012c C046     		nop
 364              	.L9:
 255:system_stm32l0xx.c ****   }
 256:system_stm32l0xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 257:system_stm32l0xx.c ****   /* Get HCLK prescaler */
 258:system_stm32l0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 365              		.loc 1 258 28
 366 012e 094B     		ldr	r3, .L16
 367 0130 DB68     		ldr	r3, [r3, #12]
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s 			page 12


 368              		.loc 1 258 52
 369 0132 1B09     		lsrs	r3, r3, #4
 370 0134 0F22     		movs	r2, #15
 371 0136 1340     		ands	r3, r2
 372              		.loc 1 258 22
 373 0138 0C4A     		ldr	r2, .L16+24
 374 013a D35C     		ldrb	r3, [r2, r3]
 375              		.loc 1 258 7
 376 013c 7B61     		str	r3, [r7, #20]
 259:system_stm32l0xx.c ****   /* HCLK clock frequency */
 260:system_stm32l0xx.c ****   SystemCoreClock >>= tmp;
 377              		.loc 1 260 19
 378 013e 064B     		ldr	r3, .L16+4
 379 0140 1A68     		ldr	r2, [r3]
 380 0142 7B69     		ldr	r3, [r7, #20]
 381 0144 DA40     		lsrs	r2, r2, r3
 382 0146 044B     		ldr	r3, .L16+4
 383 0148 1A60     		str	r2, [r3]
 261:system_stm32l0xx.c **** }
 384              		.loc 1 261 1
 385 014a C046     		nop
 386 014c BD46     		mov	sp, r7
 387 014e 06B0     		add	sp, sp, #24
 388              		@ sp needed
 389 0150 80BD     		pop	{r7, pc}
 390              	.L17:
 391 0152 C046     		.align	2
 392              	.L16:
 393 0154 00100240 		.word	1073876992
 394 0158 00000000 		.word	SystemCoreClock
 395 015c 00093D00 		.word	4000000
 396 0160 0024F400 		.word	16000000
 397 0164 00127A00 		.word	8000000
 398 0168 00000000 		.word	PLLMulTable
 399 016c 00000000 		.word	AHBPrescTable
 400              		.cfi_endproc
 401              	.LFE48:
 403              		.text
 404              	.Letext0:
 405              		.file 2 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 406              		.file 3 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 407              		.file 4 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h"
 408              		.file 5 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx
 409              		.file 6 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l053xx.h"
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32l0xx.c
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s:20     .data.SystemCoreClock:0000000000000000 SystemCoreClock
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s:17     .data.SystemCoreClock:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s:27     .rodata.AHBPrescTable:0000000000000000 AHBPrescTable
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s:24     .rodata.AHBPrescTable:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s:35     .rodata.APBPrescTable:0000000000000000 APBPrescTable
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s:32     .rodata.APBPrescTable:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s:42     .rodata.PLLMulTable:0000000000000000 PLLMulTable
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s:39     .rodata.PLLMulTable:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s:45     .text.SystemInit:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s:53     .text.SystemInit:0000000000000000 SystemInit
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s:128    .text.SystemInit:0000000000000064 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s:139    .text.SystemCoreClockUpdate:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s:146    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cct8V53z.s:393    .text.SystemCoreClockUpdate:0000000000000154 $d
                           .group:0000000000000000 wm4.0.a3d41f74abc56016cdc4c153f9dbdba1
                           .group:0000000000000000 wm4.stm32l0xx.h.41.7b64cc93e03e8878c239b019b0203858
                           .group:0000000000000000 wm4.stm32l053xx.h.37.ca2b7421d255c88f6356eb3a3a2ee1bf
                           .group:0000000000000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:0000000000000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:0000000000000000 wm4.core_cm0plus.h.66.bb83319bcb10b4c5f12c477f85f2aa51
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.60b910ef2cf8eb62703f669ce6a864b2
                           .group:0000000000000000 wm4.core_cm0plus.h.127.cfee784d07c850b645554dc8add78e69
                           .group:0000000000000000 wm4.mpu_armv7.h.32.27b4593cb2f8d3152ca5d97a9d72b321
                           .group:0000000000000000 wm4.stm32l053xx.h.614.694649dd621f0085702f358f34f2e881
                           .group:0000000000000000 wm4.stm32l0xx.h.181.12fc143042e31117baaa7481c9b3a4da

UNDEFINED SYMBOLS
__aeabi_uidiv
