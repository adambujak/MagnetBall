ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"log_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.__NVIC_EnableIRQ,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	__NVIC_EnableIRQ:
  24              	.LFB25:
  25              		.file 1 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h"
   1:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**************************************************************************//**
   2:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * @file     core_cm0plus.h
   3:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * @brief    CMSIS Cortex-M0+ Core Peripheral Access Layer Header File
   4:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * @version  V5.0.6
   5:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * @date     28. May 2018
   6:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
   7:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*
   8:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *
  10:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *
  12:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * not use this file except in compliance with the License.
  14:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * You may obtain a copy of the License at
  15:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *
  16:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *
  18:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * See the License for the specific language governing permissions and
  22:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  * limitations under the License.
  23:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
  24:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  25:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if   defined ( __ICCARM__ )
  26:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined (__clang__)
  28:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
  30:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  31:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_GENERIC
  32:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_GENERIC
  33:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 2


  34:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #include <stdint.h>
  35:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  36:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
  37:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  extern "C" {
  38:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
  39:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  40:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
  41:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  44:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  47:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****      Unions are used for effective representation of core registers.
  49:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  50:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****      Function-like macros are used to allow more efficient code.
  52:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
  53:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  54:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  55:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
  56:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *                 CMSIS definitions
  57:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
  58:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
  59:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup Cortex-M0+
  60:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
  61:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
  62:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  63:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #include "cmsis_version.h"
  64:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  
  65:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*  CMSIS CM0+ definitions */
  66:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_MAIN (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [3
  67:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_SUB  (__CM_CMSIS_VERSION_SUB)                   /*!< \deprecated [1
  68:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION      ((__CM0PLUS_CMSIS_VERSION_MAIN << 16U) | \
  69:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****                                        __CM0PLUS_CMSIS_VERSION_SUB           )  /*!< \deprecated CM
  70:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  71:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORTEX_M                   (0U)                                       /*!< Cortex-M Core 
  72:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  73:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     This core does not support an FPU at all
  75:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
  76:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __FPU_USED       0U
  77:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  78:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined ( __CC_ARM )
  79:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __TARGET_FPU_VFP
  80:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  82:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  83:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __ARM_PCS_VFP
  85:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  87:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  88:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __GNUC__ )
  89:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 3


  91:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  92:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  93:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __ICCARM__ )
  94:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __ARMVFP__
  95:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  97:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
  98:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TI_ARM__ )
  99:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __TI_VFP_SUPPORT__
 100:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 102:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 103:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TASKING__ )
 104:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __FPU_VFP__
 105:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 107:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 108:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __CSMC__ )
 109:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #if ( __CSMC__ & 0x400U)
 110:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 112:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 113:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 114:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 115:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 117:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 118:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 119:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 120:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 121:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 122:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif /* __CORE_CM0PLUS_H_GENERIC */
 123:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 124:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CMSIS_GENERIC
 125:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 126:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_DEPENDANT
 127:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_DEPENDANT
 128:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 129:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 130:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  extern "C" {
 131:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 132:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 133:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* check device defines and use defaults */
 134:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined __CHECK_DEVICE_DEFINES
 135:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __CM0PLUS_REV
 136:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __CM0PLUS_REV             0x0000U
 137:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__CM0PLUS_REV not defined in device header file; using default!"
 138:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 139:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 140:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __MPU_PRESENT
 141:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __MPU_PRESENT             0U
 142:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 143:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 144:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 145:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __VTOR_PRESENT
 146:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __VTOR_PRESENT            0U
 147:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 4


 148:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 149:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 150:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __NVIC_PRIO_BITS
 151:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __NVIC_PRIO_BITS          2U
 152:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 153:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 154:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 155:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __Vendor_SysTickConfig
 156:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define __Vendor_SysTickConfig    0U
 157:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 158:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 159:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 160:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 161:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* IO definitions (access restrictions to peripheral registers) */
 162:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 163:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 164:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 165:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     <strong>IO Type Qualifiers</strong> are used
 166:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     \li to specify the access to peripheral variables.
 167:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     \li for automatic generation of peripheral register debug information.
 168:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 169:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 170:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 171:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #else
 172:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 173:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 174:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 175:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 176:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 177:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* following defines should be used for structure members */
 178:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 179:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 180:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 181:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 182:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group Cortex-M0+ */
 183:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 184:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 185:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 186:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 187:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *                 Register Abstraction
 188:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   Core Register contain:
 189:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core Register
 190:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Register
 191:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SCB Register
 192:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Register
 193:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core MPU Register
 194:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 195:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 196:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 197:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 198:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 199:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 200:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 201:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 202:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 203:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Core Register type definitions.
 204:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 5


 205:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 206:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 207:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 208:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 209:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 210:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 211:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 212:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 213:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 214:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 215:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 216:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 217:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 218:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 219:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 220:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 221:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } APSR_Type;
 222:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 223:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* APSR Register Definitions */
 224:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 225:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 226:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 227:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 228:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 229:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 230:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 231:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 232:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 233:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 234:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 235:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 236:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 237:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 238:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 239:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 240:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 241:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 242:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 243:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 244:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 245:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 246:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 247:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 248:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } IPSR_Type;
 249:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 250:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* IPSR Register Definitions */
 251:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 252:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 253:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 254:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 255:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 256:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 257:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 258:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 259:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 260:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 261:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 6


 262:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 263:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 264:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 265:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 266:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 267:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 268:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 269:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 270:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 271:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 272:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } xPSR_Type;
 273:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 274:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* xPSR Register Definitions */
 275:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 276:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 277:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 278:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 279:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 280:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 281:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 282:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 283:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 284:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 285:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 286:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 287:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 288:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 289:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 290:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 291:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 292:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 293:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 294:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 295:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Control Registers (CONTROL).
 296:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 297:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 298:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 299:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 300:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 301:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 302:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 303:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 304:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 305:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } CONTROL_Type;
 307:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 308:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* CONTROL Register Definitions */
 309:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 310:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 311:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 312:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 313:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 314:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 315:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CORE */
 316:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 317:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 318:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 7


 319:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 320:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 321:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Type definitions for the NVIC Registers
 322:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 323:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 324:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 325:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 326:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 327:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 328:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 329:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 330:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 331:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0[31U];
 332:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 333:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RSERVED1[31U];
 334:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 335:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED2[31U];
 336:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 337:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED3[31U];
 338:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED4[64U];
 339:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 340:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }  NVIC_Type;
 341:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 342:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_NVIC */
 343:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 344:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 345:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 346:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 347:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 348:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Control Block Registers
 349:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 350:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 351:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 352:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 353:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Control Block (SCB).
 354:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 355:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 356:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 357:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 358:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 359:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 360:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 361:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #else
 362:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0;
 363:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 364:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 365:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 366:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 367:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED1;
 368:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 369:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 370:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } SCB_Type;
 371:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 372:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB CPUID Register Definitions */
 373:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 374:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 375:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 8


 376:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 377:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 378:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 379:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 380:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 381:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 382:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 383:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 384:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 385:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 386:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 387:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 388:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 389:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 390:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 391:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 392:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 393:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 394:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 395:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 396:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 397:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 398:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 399:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 400:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 401:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 402:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 403:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 404:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 405:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 406:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 407:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 408:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 409:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 410:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 411:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 412:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 413:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 414:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 415:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 416:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 417:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 418:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Pos                 8U                                            /*!< SCB 
 419:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Msk                (0xFFFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 420:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 421:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 422:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 423:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 424:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 425:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 426:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 427:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 428:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 429:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 430:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 431:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 432:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 9


 433:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 434:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 435:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 436:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 437:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 438:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB System Control Register Definitions */
 439:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 440:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 441:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 442:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 443:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 444:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 445:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 446:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 447:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 448:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Configuration Control Register Definitions */
 449:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 450:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 451:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 452:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 453:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 454:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 455:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB System Handler Control and State Register Definitions */
 456:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 457:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 458:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 459:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SCB */
 460:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 461:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 462:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 463:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 464:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 465:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Timer Registers.
 466:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 467:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 468:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 469:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 470:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Timer (SysTick).
 471:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 472:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 473:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 474:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 475:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 476:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 477:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 478:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } SysTick_Type;
 479:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 480:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Control / Status Register Definitions */
 481:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 482:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 483:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 484:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 485:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 486:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 487:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 488:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 489:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 10


 490:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 491:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 492:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 493:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Reload Register Definitions */
 494:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 495:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 496:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 497:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Current Register Definitions */
 498:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 499:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 500:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 501:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Calibration Register Definitions */
 502:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 503:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 504:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 505:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 506:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 507:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 508:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 509:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 510:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 511:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SysTick */
 512:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 513:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 514:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 515:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 516:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
 517:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
 518:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 519:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 520:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 521:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 522:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
 523:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 524:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 525:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 526:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
 527:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
 528:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
 529:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 530:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 531:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** } MPU_Type;
 532:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 533:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_RALIASES                  1U
 534:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 535:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Type Register Definitions */
 536:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
 537:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 538:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 539:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
 540:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 541:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 542:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
 543:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
 544:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 545:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Control Register Definitions */
 546:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 11


 547:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 548:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 549:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
 550:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 551:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 552:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
 553:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
 554:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 555:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Number Register Definitions */
 556:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
 557:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
 558:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 559:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Base Address Register Definitions */
 560:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Pos                   8U                                            /*!< MPU 
 561:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Msk                  (0xFFFFFFUL << MPU_RBAR_ADDR_Pos)              /*!< MPU 
 562:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 563:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
 564:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 565:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 566:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
 567:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
 568:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 569:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Attribute and Size Register Definitions */
 570:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
 571:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
 572:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 573:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
 574:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
 575:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 576:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
 577:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
 578:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 579:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
 580:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
 581:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 582:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
 583:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
 584:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 585:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
 586:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
 587:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 588:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
 589:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
 590:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 591:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
 592:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 593:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 594:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
 595:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 596:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 597:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
 598:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
 599:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 600:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_MPU */
 601:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 602:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 603:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 12


 604:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 605:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 606:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 607:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Cortex-M0+ Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ov
 608:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****             Therefore they are not covered by the Cortex-M0+ header file.
 609:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 610:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 611:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CoreDebug */
 612:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 613:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 614:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 615:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 616:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 617:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 618:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 619:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 620:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 621:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 622:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 623:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 624:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 625:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted value.
 626:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 627:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 628:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 629:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 630:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 631:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 632:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 633:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted bit field value.
 634:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 635:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 636:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 637:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_core_bitfield */
 638:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 639:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 640:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 641:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 642:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_base     Core Definitions
 643:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Definitions for base addresses, unions, and structures.
 644:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 645:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 646:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 647:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* Memory mapping of Core Hardware */
 648:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 649:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 650:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 651:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 652:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 653:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 654:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 655:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 656:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 657:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 658:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
 659:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
 660:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 13


 661:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 662:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*@} */
 663:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 664:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 665:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 666:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 667:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  *                Hardware Abstraction Layer
 668:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   Core Function Interface contains:
 669:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Functions
 670:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Functions
 671:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   - Core Register Access Functions
 672:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 673:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 674:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 675:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** */
 676:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 677:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 678:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 679:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* ##########################   NVIC functions  #################################### */
 680:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 681:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_Core_FunctionInterface
 682:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 683:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 684:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 685:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 686:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 687:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef CMSIS_NVIC_VIRTUAL
 688:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 689:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 690:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 691:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 692:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #else
 693:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 694:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 695:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 696:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 697:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 698:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 699:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 700:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 701:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0+ */
 702:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 703:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 704:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 705:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 706:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 707:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 708:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 709:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 710:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 711:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 712:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #else
 713:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetVector              __NVIC_SetVector
 714:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetVector              __NVIC_GetVector
 715:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 716:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 717:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC_USER_IRQ_OFFSET          16
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 14


 718:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 719:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 720:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 721:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 722:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 723:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 724:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 725:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 726:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 727:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /* The following MACROS handle generation of the register offset and byte masks */
 728:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 729:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 730:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 731:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 732:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 733:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 734:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 735:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 736:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Enable Interrupt
 737:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 738:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 739:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 740:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 741:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 742:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
  26              		.loc 1 742 1
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 7, -8
  33              		.cfi_offset 14, -4
  34 0002 82B0     		sub	sp, sp, #8
  35              		.cfi_def_cfa_offset 16
  36 0004 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  38 0006 0200     		movs	r2, r0
  39 0008 FB1D     		adds	r3, r7, #7
  40 000a 1A70     		strb	r2, [r3]
 743:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
  41              		.loc 1 743 6
  42 000c FB1D     		adds	r3, r7, #7
  43 000e 1B78     		ldrb	r3, [r3]
  44 0010 7F2B     		cmp	r3, #127
  45 0012 09D8     		bhi	.L3
 744:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 745:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  46              		.loc 1 745 58
  47 0014 FB1D     		adds	r3, r7, #7
  48 0016 1B78     		ldrb	r3, [r3]
  49 0018 1A00     		movs	r2, r3
  50 001a 1F23     		movs	r3, #31
  51 001c 1A40     		ands	r2, r3
  52              		.loc 1 745 9
  53 001e 044B     		ldr	r3, .L4
  54              		.loc 1 745 22
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 15


  55 0020 0121     		movs	r1, #1
  56 0022 9140     		lsls	r1, r1, r2
  57 0024 0A00     		movs	r2, r1
  58              		.loc 1 745 20
  59 0026 1A60     		str	r2, [r3]
  60              	.L3:
 746:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 747:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
  61              		.loc 1 747 1
  62 0028 C046     		nop
  63 002a BD46     		mov	sp, r7
  64 002c 02B0     		add	sp, sp, #8
  65              		@ sp needed
  66 002e 80BD     		pop	{r7, pc}
  67              	.L5:
  68              		.align	2
  69              	.L4:
  70 0030 00E100E0 		.word	-536813312
  71              		.cfi_endproc
  72              	.LFE25:
  74              		.section	.text.__NVIC_SetPriority,"ax",%progbits
  75              		.align	1
  76              		.syntax unified
  77              		.code	16
  78              		.thumb_func
  79              		.fpu softvfp
  81              	__NVIC_SetPriority:
  82              	.LFB31:
 748:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 749:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 750:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 751:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Get Interrupt Enable status
 752:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 753:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 754:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return             0  Interrupt is not enabled.
 755:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return             1  Interrupt is enabled.
 756:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 757:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 758:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 759:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 760:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 761:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 762:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 763:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 764:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   else
 765:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 766:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     return(0U);
 767:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 768:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 769:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 770:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 771:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 772:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Disable Interrupt
 773:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 774:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 775:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 776:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 16


 777:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 778:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 779:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 780:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 781:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 782:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     __DSB();
 783:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     __ISB();
 784:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 785:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 786:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 787:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 788:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 789:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Get Pending Interrupt
 790:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 791:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 792:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return             0  Interrupt status is not pending.
 793:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \return             1  Interrupt status is pending.
 794:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 795:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 796:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 797:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 798:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 799:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 800:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 801:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 802:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   else
 803:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 804:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     return(0U);
 805:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 806:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 807:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 808:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 809:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 810:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Set Pending Interrupt
 811:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
 812:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 813:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 814:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 815:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 816:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 817:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 818:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 819:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 820:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 821:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 822:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 823:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 824:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 825:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Clear Pending Interrupt
 826:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 827:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 828:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 829:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 830:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 831:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
 832:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 833:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 17


 834:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 835:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 836:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 837:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 838:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** 
 839:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** /**
 840:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Set Interrupt Priority
 841:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
 842:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****            The interrupt number can be positive to specify a device specific interrupt,
 843:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****            or negative to specify a processor exception.
 844:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Interrupt number.
 845:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]  priority  Priority to set.
 846:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   \note    The priority cannot be set for every processor exception.
 847:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****  */
 848:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 849:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** {
  83              		.loc 1 849 1
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 8
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87 0000 90B5     		push	{r4, r7, lr}
  88              		.cfi_def_cfa_offset 12
  89              		.cfi_offset 4, -12
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 83B0     		sub	sp, sp, #12
  93              		.cfi_def_cfa_offset 24
  94 0004 00AF     		add	r7, sp, #0
  95              		.cfi_def_cfa_register 7
  96 0006 0200     		movs	r2, r0
  97 0008 3960     		str	r1, [r7]
  98 000a FB1D     		adds	r3, r7, #7
  99 000c 1A70     		strb	r2, [r3]
 850:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 100              		.loc 1 850 6
 101 000e FB1D     		adds	r3, r7, #7
 102 0010 1B78     		ldrb	r3, [r3]
 103 0012 7F2B     		cmp	r3, #127
 104 0014 28D8     		bhi	.L7
 851:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 105              		.loc 1 852 48
 106 0016 2F4A     		ldr	r2, .L10
 107              		.loc 1 852 53
 108 0018 FB1D     		adds	r3, r7, #7
 109 001a 1B78     		ldrb	r3, [r3]
 110 001c 5BB2     		sxtb	r3, r3
 111 001e 9B08     		lsrs	r3, r3, #2
 112              		.loc 1 852 52
 113 0020 C033     		adds	r3, r3, #192
 114 0022 9B00     		lsls	r3, r3, #2
 115 0024 9B58     		ldr	r3, [r3, r2]
 116              		.loc 1 852 83
 117 0026 FA1D     		adds	r2, r7, #7
 118 0028 1278     		ldrb	r2, [r2]
 119 002a 1100     		movs	r1, r2
 120 002c 0322     		movs	r2, #3
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 18


 121 002e 0A40     		ands	r2, r1
 122 0030 D200     		lsls	r2, r2, #3
 123              		.loc 1 852 80
 124 0032 FF21     		movs	r1, #255
 125 0034 9140     		lsls	r1, r1, r2
 126 0036 0A00     		movs	r2, r1
 127              		.loc 1 852 71
 128 0038 D243     		mvns	r2, r2
 129              		.loc 1 852 33
 130 003a 1A40     		ands	r2, r3
 131 003c 1100     		movs	r1, r2
 853:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 132              		.loc 1 853 20
 133 003e 3B68     		ldr	r3, [r7]
 134 0040 9B01     		lsls	r3, r3, #6
 135              		.loc 1 853 48
 136 0042 FF22     		movs	r2, #255
 137 0044 1A40     		ands	r2, r3
 138              		.loc 1 853 71
 139 0046 FB1D     		adds	r3, r7, #7
 140 0048 1B78     		ldrb	r3, [r3]
 141 004a 1800     		movs	r0, r3
 142 004c 0323     		movs	r3, #3
 143 004e 0340     		ands	r3, r0
 144 0050 DB00     		lsls	r3, r3, #3
 145              		.loc 1 853 68
 146 0052 9A40     		lsls	r2, r2, r3
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 147              		.loc 1 852 9
 148 0054 1F48     		ldr	r0, .L10
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 149              		.loc 1 852 14
 150 0056 FB1D     		adds	r3, r7, #7
 151 0058 1B78     		ldrb	r3, [r3]
 152 005a 5BB2     		sxtb	r3, r3
 153 005c 9B08     		lsrs	r3, r3, #2
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 154              		.loc 1 852 102
 155 005e 0A43     		orrs	r2, r1
 852:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 156              		.loc 1 852 30
 157 0060 C033     		adds	r3, r3, #192
 158 0062 9B00     		lsls	r3, r3, #2
 159 0064 1A50     		str	r2, [r3, r0]
 854:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 855:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   else
 856:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   {
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 859:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 860:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h **** }
 160              		.loc 1 860 1
 161 0066 31E0     		b	.L9
 162              	.L7:
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 163              		.loc 1 857 47
 164 0068 1B4A     		ldr	r2, .L10+4
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 19


 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 165              		.loc 1 857 53
 166 006a FB1D     		adds	r3, r7, #7
 167 006c 1B78     		ldrb	r3, [r3]
 168 006e 1900     		movs	r1, r3
 169 0070 0F23     		movs	r3, #15
 170 0072 0B40     		ands	r3, r1
 171 0074 083B     		subs	r3, r3, #8
 172 0076 9B08     		lsrs	r3, r3, #2
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 173              		.loc 1 857 52
 174 0078 0633     		adds	r3, r3, #6
 175 007a 9B00     		lsls	r3, r3, #2
 176 007c D318     		adds	r3, r2, r3
 177 007e 0433     		adds	r3, r3, #4
 178 0080 1B68     		ldr	r3, [r3]
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 179              		.loc 1 857 83
 180 0082 FA1D     		adds	r2, r7, #7
 181 0084 1278     		ldrb	r2, [r2]
 182 0086 1100     		movs	r1, r2
 183 0088 0322     		movs	r2, #3
 184 008a 0A40     		ands	r2, r1
 185 008c D200     		lsls	r2, r2, #3
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 186              		.loc 1 857 80
 187 008e FF21     		movs	r1, #255
 188 0090 9140     		lsls	r1, r1, r2
 189 0092 0A00     		movs	r2, r1
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 190              		.loc 1 857 71
 191 0094 D243     		mvns	r2, r2
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 192              		.loc 1 857 33
 193 0096 1A40     		ands	r2, r3
 194 0098 1100     		movs	r1, r2
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 195              		.loc 1 858 20
 196 009a 3B68     		ldr	r3, [r7]
 197 009c 9B01     		lsls	r3, r3, #6
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 198              		.loc 1 858 48
 199 009e FF22     		movs	r2, #255
 200 00a0 1A40     		ands	r2, r3
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 201              		.loc 1 858 71
 202 00a2 FB1D     		adds	r3, r7, #7
 203 00a4 1B78     		ldrb	r3, [r3]
 204 00a6 1800     		movs	r0, r3
 205 00a8 0323     		movs	r3, #3
 206 00aa 0340     		ands	r3, r0
 207 00ac DB00     		lsls	r3, r3, #3
 858:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****   }
 208              		.loc 1 858 68
 209 00ae 9A40     		lsls	r2, r2, r3
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 210              		.loc 1 857 8
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 20


 211 00b0 0948     		ldr	r0, .L10+4
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 212              		.loc 1 857 14
 213 00b2 FB1D     		adds	r3, r7, #7
 214 00b4 1B78     		ldrb	r3, [r3]
 215 00b6 1C00     		movs	r4, r3
 216 00b8 0F23     		movs	r3, #15
 217 00ba 2340     		ands	r3, r4
 218 00bc 083B     		subs	r3, r3, #8
 219 00be 9B08     		lsrs	r3, r3, #2
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 220              		.loc 1 857 102
 221 00c0 0A43     		orrs	r2, r1
 857:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 222              		.loc 1 857 30
 223 00c2 0633     		adds	r3, r3, #6
 224 00c4 9B00     		lsls	r3, r3, #2
 225 00c6 C318     		adds	r3, r0, r3
 226 00c8 0433     		adds	r3, r3, #4
 227 00ca 1A60     		str	r2, [r3]
 228              	.L9:
 229              		.loc 1 860 1
 230 00cc C046     		nop
 231 00ce BD46     		mov	sp, r7
 232 00d0 03B0     		add	sp, sp, #12
 233              		@ sp needed
 234 00d2 90BD     		pop	{r4, r7, pc}
 235              	.L11:
 236              		.align	2
 237              	.L10:
 238 00d4 00E100E0 		.word	-536813312
 239 00d8 00ED00E0 		.word	-536810240
 240              		.cfi_endproc
 241              	.LFE31:
 243              		.section	.text.LL_APB1_GRP1_EnableClock,"ax",%progbits
 244              		.align	1
 245              		.syntax unified
 246              		.code	16
 247              		.thumb_func
 248              		.fpu softvfp
 250              	LL_APB1_GRP1_EnableClock:
 251              	.LFB157:
 252              		.file 2 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h"
   1:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
   2:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
   3:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @file    stm32l0xx_ll_bus.h
   4:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @author  MCD Application Team
   5:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
   7:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   @verbatim
   8:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ==============================================================================
  10:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****     [..]
  11:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       from/to registers.
  14:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 21


  15:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  17:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****     [..]
  18:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       Workarounds:
  19:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  22:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   @endverbatim
  23:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
  24:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @attention
  25:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  26:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * <h2><center>&copy; Copyright(c) 2016 STMicroelectronics.
  27:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  29:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the
  31:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
  34:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   ******************************************************************************
  35:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  36:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  37:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #ifndef __STM32L0xx_LL_BUS_H
  39:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define __STM32L0xx_LL_BUS_H
  40:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  41:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #ifdef __cplusplus
  42:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** extern "C" {
  43:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
  44:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  45:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #include "stm32l0xx.h"
  47:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  48:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @addtogroup STM32L0xx_LL_Driver
  49:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  50:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  51:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  52:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(RCC)
  53:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  54:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  56:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  57:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  58:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  61:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  63:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  64:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  65:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  66:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  69:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  70:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  71:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 22


  72:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  73:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  74:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  75:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN      /*!< DMA1 clock enable */
  76:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_MIF            RCC_AHBENR_MIFEN       /*!< MIF clock enable */
  77:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBSMENR_SRAMSMEN  /*!< Sleep Mode SRAM clock enable
  78:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN       /*!< CRC clock enable */
  79:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TSC)
  80:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_TSC            RCC_AHBENR_TSCEN       /*!< TSC clock enable */
  81:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*TSC*/
  82:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(RNG)
  83:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_RNG            RCC_AHBENR_RNGEN       /*!< RNG clock enable */
  84:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*RNG*/
  85:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(AES)
  86:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRYP           RCC_AHBENR_CRYPEN      /*!< CRYP clock enable */
  87:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*AES*/
  88:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
  89:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
  90:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  91:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  92:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
  93:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
  94:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
  95:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
  96:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  97:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APB1ENR_TIM2EN     /*!< TIM2 clock enable */
  98:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM3)
  99:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APB1ENR_TIM3EN     /*!< TIM3 clock enable */
 100:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 101:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM6)
 102:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APB1ENR_TIM6EN     /*!< TIM6 clock enable */
 103:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 104:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM7)
 105:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APB1ENR_TIM7EN     /*!< TIM7 clock enable */
 106:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 107:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(LCD)
 108:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LCD            RCC_APB1ENR_LCDEN      /*!< LCD clock enable */
 109:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*LCD*/
 110:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APB1ENR_WWDGEN     /*!< WWDG clock enable */
 111:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(SPI2)
 112:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APB1ENR_SPI2EN     /*!< SPI2 clock enable */
 113:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 114:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APB1ENR_USART2EN   /*!< USART2 clock enable */
 115:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPUART1        RCC_APB1ENR_LPUART1EN  /*!< LPUART1 clock enable */
 116:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART4)
 117:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APB1ENR_USART4EN   /*!< USART4 clock enable */
 118:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 119:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART5)
 120:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART5         RCC_APB1ENR_USART5EN   /*!< USART5 clock enable */
 121:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 122:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APB1ENR_I2C1EN     /*!< I2C1 clock enable */
 123:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(I2C2)
 124:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APB1ENR_I2C2EN     /*!< I2C2 clock enable */
 125:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 126:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USB)
 127:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USB            RCC_APB1ENR_USBEN      /*!< USB clock enable */
 128:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*USB*/
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 23


 129:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(CRS)
 130:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CRS            RCC_APB1ENR_CRSEN      /*!< CRS clock enable */
 131:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*CRS*/
 132:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APB1ENR_PWREN      /*!< PWR clock enable */
 133:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(DAC)
 134:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APB1ENR_DACEN      /*!< DAC clock enable */
 135:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 136:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(I2C3)
 137:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C3           RCC_APB1ENR_I2C3EN     /*!< I2C3 clock enable */
 138:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 139:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APB1ENR_LPTIM1EN   /*!< LPTIM1 clock enable */
 140:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 141:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 142:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 143:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 144:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 145:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 146:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 147:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 148:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 149:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 150:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 151:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APB2ENR_SYSCFGEN  /*!< SYSCFG clock enable */
 152:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM21          RCC_APB2ENR_TIM21EN   /*!< TIM21 clock enable */
 153:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(TIM22)
 154:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM22          RCC_APB2ENR_TIM22EN   /*!< TIM22 clock enable */
 155:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 156:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_FW             RCC_APB2ENR_FWEN      /*!< FireWall clock enable */
 157:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC1           RCC_APB2ENR_ADC1EN    /*!< ADC1 clock enable */
 158:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APB2ENR_SPI1EN    /*!< SPI1 clock enable */
 159:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(USART1)
 160:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APB2ENR_USART1EN  /*!< USART1 clock enable */
 161:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif
 162:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_DBGMCU         RCC_APB2ENR_DBGMCUEN  /*!< DBGMCU clock enable */
 163:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 164:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 165:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 166:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 167:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 168:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 169:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 170:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_IOP_GRP1_PERIPH  IOP GRP1 PERIPH
 171:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 172:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 173:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_ALL             0xFFFFFFFFU
 174:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOA           RCC_IOPENR_GPIOAEN    /*!< GPIO port A control */
 175:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOB           RCC_IOPENR_GPIOBEN    /*!< GPIO port B control */
 176:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOC           RCC_IOPENR_GPIOCEN    /*!< GPIO port C control */
 177:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOD)
 178:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOD           RCC_IOPENR_GPIODEN    /*!< GPIO port D control */
 179:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOD*/
 180:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOE)
 181:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOE           RCC_IOPENR_GPIOEEN    /*!< GPIO port H control */
 182:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOE*/
 183:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #if defined(GPIOH)
 184:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOH           RCC_IOPENR_GPIOHEN    /*!< GPIO port H control */
 185:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** #endif /*GPIOH*/
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 24


 186:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 187:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 188:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 189:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 190:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 191:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 192:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 193:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 194:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 195:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 196:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 197:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 198:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 199:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 200:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 201:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 202:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 203:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 204:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 205:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 206:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 207:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_EnableClock\n
 208:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_EnableClock\n
 209:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_EnableClock\n
 210:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_EnableClock\n
 211:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_EnableClock\n
 212:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_EnableClock
 213:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 214:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 215:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 216:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 217:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 218:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 219:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 220:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 221:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 222:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 223:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 224:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 225:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 226:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 227:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 228:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 229:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 230:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 231:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 232:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 233:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 234:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 235:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_IsEnabledClock\n
 236:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_IsEnabledClock\n
 237:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_IsEnabledClock\n
 238:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_IsEnabledClock\n
 239:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_IsEnabledClock\n
 240:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_IsEnabledClock
 241:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 242:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 25


 243:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 244:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 245:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 246:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 247:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 248:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 249:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 250:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 251:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 252:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 253:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 254:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->AHBENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 255:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 256:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 257:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 258:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 259:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBENR      DMAEN        LL_AHB1_GRP1_DisableClock\n
 260:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      MIFEN        LL_AHB1_GRP1_DisableClock\n
 261:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRCEN        LL_AHB1_GRP1_DisableClock\n
 262:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      TSCEN        LL_AHB1_GRP1_DisableClock\n
 263:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      RNGEN        LL_AHB1_GRP1_DisableClock\n
 264:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBENR      CRYPEN       LL_AHB1_GRP1_DisableClock
 265:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 266:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 267:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 268:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 269:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 270:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 271:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 272:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 273:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 274:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 275:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 276:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 277:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 278:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 279:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 280:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 281:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 282:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 283:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMARST        LL_AHB1_GRP1_ForceReset\n
 284:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      MIFRST        LL_AHB1_GRP1_ForceReset\n
 285:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ForceReset\n
 286:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ForceReset\n
 287:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ForceReset\n
 288:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRYPRST       LL_AHB1_GRP1_ForceReset
 289:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 290:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 291:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 292:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 293:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 294:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 295:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 296:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 297:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 298:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 299:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 26


 300:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 301:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 302:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 303:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 304:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 305:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 306:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 307:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 308:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMARST        LL_AHB1_GRP1_ReleaseReset\n
 309:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      MIFRST        LL_AHB1_GRP1_ReleaseReset\n
 310:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 311:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      TSCRST        LL_AHB1_GRP1_ReleaseReset\n
 312:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ReleaseReset\n
 313:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBRSTR      CRYPRST       LL_AHB1_GRP1_ReleaseReset
 314:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 315:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 316:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 317:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 318:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 319:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 320:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 321:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 322:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 323:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 324:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 325:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 326:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 327:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 328:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 329:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 330:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 331:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 332:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock during Low Power (Sleep) mode.
 333:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMASMEN       LL_AHB1_GRP1_EnableClockSleep\n
 334:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     MIFSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 335:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_EnableClockSleep\n
 336:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 337:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     TSCSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 338:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_EnableClockSleep\n
 339:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRYPSMEN      LL_AHB1_GRP1_EnableClockSleep
 340:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 341:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 342:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 343:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 344:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 345:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 346:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 347:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 348:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 349:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 350:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 351:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 352:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockSleep(uint32_t Periphs)
 353:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 354:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 355:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->AHBSMENR, Periphs);
 356:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 27


 357:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBSMENR, Periphs);
 358:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 359:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 360:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 361:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 362:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock during Low Power (Sleep) mode.
 363:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMASMEN       LL_AHB1_GRP1_DisableClockSleep\n
 364:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     MIFSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 365:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_DisableClockSleep\n
 366:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 367:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     TSCSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 368:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_DisableClockSleep\n
 369:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         AHBSMENR     CRYPSMEN      LL_AHB1_GRP1_DisableClockSleep
 370:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 371:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 372:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_MIF
 373:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 374:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 375:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC (*)
 376:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG (*)
 377:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 378:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 379:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 380:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 381:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 382:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockSleep(uint32_t Periphs)
 383:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 384:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBSMENR, Periphs);
 385:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 386:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 387:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 388:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 389:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 390:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 391:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 392:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 393:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 394:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 395:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 396:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 397:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_EnableClock\n
 398:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_EnableClock\n
 399:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_EnableClock\n
 400:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_EnableClock\n
 401:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_EnableClock\n
 402:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_EnableClock\n
 403:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_EnableClock\n
 404:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_EnableClock\n
 405:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_EnableClock\n
 406:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_EnableClock\n
 407:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_EnableClock\n
 408:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_EnableClock\n
 409:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_EnableClock\n
 410:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_EnableClock\n
 411:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_EnableClock\n
 412:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_EnableClock\n
 413:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_EnableClock\n
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 28


 414:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_EnableClock\n
 415:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_EnableClock
 416:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 417:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 418:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 419:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 420:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 421:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 422:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 423:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 424:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 425:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 426:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 427:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 428:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 429:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 430:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 431:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 432:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 433:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 434:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 435:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 436:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 437:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 438:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 439:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 440:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 441:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 253              		.loc 2 441 1
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 16
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 80B5     		push	{r7, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 84B0     		sub	sp, sp, #16
 262              		.cfi_def_cfa_offset 24
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
 265 0006 7860     		str	r0, [r7, #4]
 442:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 443:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1ENR, Periphs);
 266              		.loc 2 443 3
 267 0008 074B     		ldr	r3, .L13
 268 000a 996B     		ldr	r1, [r3, #56]
 269 000c 064B     		ldr	r3, .L13
 270 000e 7A68     		ldr	r2, [r7, #4]
 271 0010 0A43     		orrs	r2, r1
 272 0012 9A63     		str	r2, [r3, #56]
 444:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 445:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
 273              		.loc 2 445 12
 274 0014 044B     		ldr	r3, .L13
 275 0016 9B6B     		ldr	r3, [r3, #56]
 276 0018 7A68     		ldr	r2, [r7, #4]
 277 001a 1340     		ands	r3, r2
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 29


 278              		.loc 2 445 10
 279 001c FB60     		str	r3, [r7, #12]
 446:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 280              		.loc 2 446 3
 281 001e FB68     		ldr	r3, [r7, #12]
 447:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 282              		.loc 2 447 1
 283 0020 C046     		nop
 284 0022 BD46     		mov	sp, r7
 285 0024 04B0     		add	sp, sp, #16
 286              		@ sp needed
 287 0026 80BD     		pop	{r7, pc}
 288              	.L14:
 289              		.align	2
 290              	.L13:
 291 0028 00100240 		.word	1073876992
 292              		.cfi_endproc
 293              	.LFE157:
 295              		.section	.text.LL_IOP_GRP1_EnableClock,"ax",%progbits
 296              		.align	1
 297              		.syntax unified
 298              		.code	16
 299              		.thumb_func
 300              		.fpu softvfp
 302              	LL_IOP_GRP1_EnableClock:
 303              	.LFB171:
 448:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 449:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 450:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 451:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 452:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 453:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 454:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 455:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_IsEnabledClock\n
 456:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 457:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 458:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 459:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_IsEnabledClock\n
 460:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 461:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_IsEnabledClock\n
 462:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 463:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 464:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_IsEnabledClock\n
 465:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_IsEnabledClock\n
 466:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_IsEnabledClock\n
 467:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_IsEnabledClock\n
 468:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_IsEnabledClock\n
 469:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_IsEnabledClock
 470:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 471:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 472:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 473:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 474:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 475:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 476:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 477:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 478:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 30


 479:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 480:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 481:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 482:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 483:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 484:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 485:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 486:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 487:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 488:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 489:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 490:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 491:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 492:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 493:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 494:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 495:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 496:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->APB1ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
 497:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 498:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 499:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 500:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 501:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1ENR     TIM2EN        LL_APB1_GRP1_DisableClock\n
 502:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM3EN        LL_APB1_GRP1_DisableClock\n
 503:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM6EN        LL_APB1_GRP1_DisableClock\n
 504:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     TIM7EN        LL_APB1_GRP1_DisableClock\n
 505:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LCDEN         LL_APB1_GRP1_DisableClock\n
 506:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     WWDGEN        LL_APB1_GRP1_DisableClock\n
 507:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     SPI2EN        LL_APB1_GRP1_DisableClock\n
 508:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART2EN      LL_APB1_GRP1_DisableClock\n
 509:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPUART1EN     LL_APB1_GRP1_DisableClock\n
 510:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART4EN      LL_APB1_GRP1_DisableClock\n
 511:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USART5EN      LL_APB1_GRP1_DisableClock\n
 512:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C1EN        LL_APB1_GRP1_DisableClock\n
 513:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C2EN        LL_APB1_GRP1_DisableClock\n
 514:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     USBEN         LL_APB1_GRP1_DisableClock\n
 515:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     CRSEN         LL_APB1_GRP1_DisableClock\n
 516:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     PWREN         LL_APB1_GRP1_DisableClock\n
 517:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     DACEN         LL_APB1_GRP1_DisableClock\n
 518:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     I2C3EN        LL_APB1_GRP1_DisableClock\n
 519:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1ENR     LPTIM1EN      LL_APB1_GRP1_DisableClock
 520:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 521:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 522:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 523:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 524:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 525:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 526:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 527:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 528:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 529:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 530:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 531:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 532:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 533:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 534:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 535:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 31


 536:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 537:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 538:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 539:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 540:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 541:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 542:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 543:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 544:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 545:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 546:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1ENR, Periphs);
 547:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 548:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 549:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 550:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
 551:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ForceReset\n
 552:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ForceReset\n
 553:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ForceReset\n
 554:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ForceReset\n
 555:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LCDRST         LL_APB1_GRP1_ForceReset\n
 556:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ForceReset\n
 557:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ForceReset\n
 558:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ForceReset\n
 559:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPUART1RST     LL_APB1_GRP1_ForceReset\n
 560:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART4RST      LL_APB1_GRP1_ForceReset\n
 561:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART5RST      LL_APB1_GRP1_ForceReset\n
 562:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ForceReset\n
 563:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ForceReset\n
 564:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USBRST         LL_APB1_GRP1_ForceReset\n
 565:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     CRSRST         LL_APB1_GRP1_ForceReset\n
 566:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ForceReset\n
 567:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ForceReset\n
 568:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ForceReset\n
 569:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ForceReset
 570:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 571:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 572:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 573:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 574:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 575:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 576:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 577:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 578:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 579:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 580:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 581:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 582:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 583:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 584:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 585:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 586:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 587:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 588:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 589:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 590:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 591:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 592:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 32


 593:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 594:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 595:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 596:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 597:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1RSTR, Periphs);
 598:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 599:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 600:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 601:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
 602:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1RSTR     TIM2RST        LL_APB1_GRP1_ReleaseReset\n
 603:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM3RST        LL_APB1_GRP1_ReleaseReset\n
 604:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM6RST        LL_APB1_GRP1_ReleaseReset\n
 605:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     TIM7RST        LL_APB1_GRP1_ReleaseReset\n
 606:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LCDRST         LL_APB1_GRP1_ReleaseReset\n
 607:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     WWDGRST        LL_APB1_GRP1_ReleaseReset\n
 608:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     SPI2RST        LL_APB1_GRP1_ReleaseReset\n
 609:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART2RST      LL_APB1_GRP1_ReleaseReset\n
 610:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPUART1RST     LL_APB1_GRP1_ReleaseReset\n
 611:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART4RST      LL_APB1_GRP1_ReleaseReset\n
 612:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USART5RST      LL_APB1_GRP1_ReleaseReset\n
 613:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C1RST        LL_APB1_GRP1_ReleaseReset\n
 614:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C2RST        LL_APB1_GRP1_ReleaseReset\n
 615:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     USBRST         LL_APB1_GRP1_ReleaseReset\n
 616:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     CRSRST         LL_APB1_GRP1_ReleaseReset\n
 617:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     PWRRST         LL_APB1_GRP1_ReleaseReset\n
 618:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     DACRST         LL_APB1_GRP1_ReleaseReset\n
 619:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     I2C3RST        LL_APB1_GRP1_ReleaseReset\n
 620:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1RSTR     LPTIM1RST      LL_APB1_GRP1_ReleaseReset
 621:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 622:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 623:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 624:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 625:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 626:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 627:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 628:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 629:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 630:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 631:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 632:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 633:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 634:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 635:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 636:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 637:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 638:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 639:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 640:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 641:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 642:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 643:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 644:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 645:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 646:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 647:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 648:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1RSTR, Periphs);
 649:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 33


 650:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 651:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 652:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock during Low Power (Sleep) mode.
 653:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1SMENR    TIM2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 654:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM3SMEN      LL_APB1_GRP1_EnableClockSleep\n
 655:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM6SMEN      LL_APB1_GRP1_EnableClockSleep\n
 656:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM7SMEN      LL_APB1_GRP1_EnableClockSleep\n
 657:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LCDSMEN       LL_APB1_GRP1_EnableClockSleep\n
 658:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    WWDGSMEN      LL_APB1_GRP1_EnableClockSleep\n
 659:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    SPI2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 660:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART2SMEN    LL_APB1_GRP1_EnableClockSleep\n
 661:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPUART1SMEN   LL_APB1_GRP1_EnableClockSleep\n
 662:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART4SMEN    LL_APB1_GRP1_EnableClockSleep\n
 663:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART5SMEN    LL_APB1_GRP1_EnableClockSleep\n
 664:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C1SMEN      LL_APB1_GRP1_EnableClockSleep\n
 665:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C2SMEN      LL_APB1_GRP1_EnableClockSleep\n
 666:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USBSMEN       LL_APB1_GRP1_EnableClockSleep\n
 667:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    CRSSMEN       LL_APB1_GRP1_EnableClockSleep\n
 668:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    PWRSMEN       LL_APB1_GRP1_EnableClockSleep\n
 669:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    DACSMEN       LL_APB1_GRP1_EnableClockSleep\n
 670:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C3SMEN      LL_APB1_GRP1_EnableClockSleep\n
 671:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPTIM1SMEN    LL_APB1_GRP1_EnableClockSleep
 672:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 673:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 674:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 675:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 676:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 677:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 678:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 679:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 680:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 681:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 682:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 683:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 684:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 685:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 686:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 687:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 688:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 689:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 690:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 691:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 692:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 693:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 694:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 695:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 696:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockSleep(uint32_t Periphs)
 697:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 698:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 699:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB1SMENR, Periphs);
 700:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 701:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB1SMENR, Periphs);
 702:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 703:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 704:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 705:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 706:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock during Low Power (Sleep) mode.
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 34


 707:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB1SMENR    TIM2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 708:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM3SMEN      LL_APB1_GRP1_DisableClockSleep\n
 709:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM6SMEN      LL_APB1_GRP1_DisableClockSleep\n
 710:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    TIM7SMEN      LL_APB1_GRP1_DisableClockSleep\n
 711:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LCDSMEN       LL_APB1_GRP1_DisableClockSleep\n
 712:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    WWDGSMEN      LL_APB1_GRP1_DisableClockSleep\n
 713:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    SPI2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 714:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART2SMEN    LL_APB1_GRP1_DisableClockSleep\n
 715:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPUART1SMEN   LL_APB1_GRP1_DisableClockSleep\n
 716:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART4SMEN    LL_APB1_GRP1_DisableClockSleep\n
 717:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USART5SMEN    LL_APB1_GRP1_DisableClockSleep\n
 718:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C1SMEN      LL_APB1_GRP1_DisableClockSleep\n
 719:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C2SMEN      LL_APB1_GRP1_DisableClockSleep\n
 720:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    USBSMEN       LL_APB1_GRP1_DisableClockSleep\n
 721:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    CRSSMEN       LL_APB1_GRP1_DisableClockSleep\n
 722:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    PWRSMEN       LL_APB1_GRP1_DisableClockSleep\n
 723:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    DACSMEN       LL_APB1_GRP1_DisableClockSleep\n
 724:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    I2C3SMEN      LL_APB1_GRP1_DisableClockSleep\n
 725:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB1SMENR    LPTIM1SMEN    LL_APB1_GRP1_DisableClockSleep
 726:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 727:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2
 728:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3 (*)
 729:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6 (*)
 730:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7 (*)
 731:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LCD (*)
 732:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 733:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2 (*)
 734:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 735:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1
 736:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4 (*)
 737:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART5 (*)
 738:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 739:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2 (*)
 740:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USB (*)
 741:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CRS (*)
 742:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 743:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1 (*)
 744:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C3 (*)
 745:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1
 746:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 747:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 748:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 749:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 750:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockSleep(uint32_t Periphs)
 751:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 752:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB1SMENR, Periphs);
 753:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 754:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 755:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 756:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 757:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 758:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 759:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
 760:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 761:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 762:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 763:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 35


 764:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
 765:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_EnableClock\n
 766:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_EnableClock\n
 767:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_EnableClock\n
 768:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_EnableClock\n
 769:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_EnableClock\n
 770:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_EnableClock\n
 771:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_EnableClock\n
 772:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_EnableClock
 773:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 774:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 775:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 776:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 777:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 778:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 779:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 780:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 781:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 782:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 783:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 784:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 785:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 786:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 787:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 788:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 789:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2ENR, Periphs);
 790:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 791:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
 792:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 793:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 794:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 795:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 796:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Check if APB2 peripheral clock is enabled or not
 797:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_IsEnabledClock\n
 798:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_IsEnabledClock\n
 799:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_IsEnabledClock\n
 800:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_IsEnabledClock\n
 801:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_IsEnabledClock\n
 802:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_IsEnabledClock\n
 803:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_IsEnabledClock\n
 804:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_IsEnabledClock
 805:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 806:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 807:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 808:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 809:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 810:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 811:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 812:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 813:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 814:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 815:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 816:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 817:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 818:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB2_GRP1_IsEnabledClock(uint32_t Periphs)
 819:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 820:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   return ((READ_BIT(RCC->APB2ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 36


 821:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 822:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 823:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 824:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock.
 825:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2ENR      SYSCFGEN      LL_APB2_GRP1_DisableClock\n
 826:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM21EN       LL_APB2_GRP1_DisableClock\n
 827:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      TIM22EN       LL_APB2_GRP1_DisableClock\n
 828:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      FWEN          LL_APB2_GRP1_DisableClock\n
 829:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      ADCEN         LL_APB2_GRP1_DisableClock\n
 830:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      SPI1EN        LL_APB2_GRP1_DisableClock\n
 831:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      USART1EN      LL_APB2_GRP1_DisableClock\n
 832:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2ENR      DBGEN         LL_APB2_GRP1_DisableClock
 833:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 834:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 835:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 836:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 837:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_FW
 838:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 839:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 840:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 841:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 842:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 843:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 844:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 845:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 846:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClock(uint32_t Periphs)
 847:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 848:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2ENR, Periphs);
 849:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 850:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 851:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 852:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Force APB2 peripherals reset.
 853:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB2_GRP1_ForceReset\n
 854:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM21RST      LL_APB2_GRP1_ForceReset\n
 855:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM22RST      LL_APB2_GRP1_ForceReset\n
 856:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     ADCRST        LL_APB2_GRP1_ForceReset\n
 857:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ForceReset\n
 858:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ForceReset\n
 859:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     DBGRST        LL_APB2_GRP1_ForceReset
 860:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 861:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 862:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 863:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 864:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 865:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 866:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 867:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1 (*)
 868:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 869:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 870:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 871:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 872:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 873:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ForceReset(uint32_t Periphs)
 874:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 875:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2RSTR, Periphs);
 876:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 877:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 37


 878:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 879:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Release APB2 peripherals reset.
 880:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2RSTR     SYSCFGRST     LL_APB2_GRP1_ReleaseReset\n
 881:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM21RST      LL_APB2_GRP1_ReleaseReset\n
 882:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     TIM22RST      LL_APB2_GRP1_ReleaseReset\n
 883:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     ADCRST        LL_APB2_GRP1_ReleaseReset\n
 884:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     SPI1RST       LL_APB2_GRP1_ReleaseReset\n
 885:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     USART1RST     LL_APB2_GRP1_ReleaseReset\n
 886:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2RSTR     DBGRST        LL_APB2_GRP1_ReleaseReset
 887:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 888:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 889:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 890:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 891:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 892:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 893:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 894:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 895:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 896:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 897:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 898:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 899:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 900:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ReleaseReset(uint32_t Periphs)
 901:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 902:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2RSTR, Periphs);
 903:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 904:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 905:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 906:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock during Low Power (Sleep) mode.
 907:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2SMENR    SYSCFGSMEN    LL_APB2_GRP1_EnableClockSleep\n
 908:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM21SMEN     LL_APB2_GRP1_EnableClockSleep\n
 909:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM22SMEN     LL_APB2_GRP1_EnableClockSleep\n
 910:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    ADCSMEN       LL_APB2_GRP1_EnableClockSleep\n
 911:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    SPI1SMEN      LL_APB2_GRP1_EnableClockSleep\n
 912:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    USART1SMEN    LL_APB2_GRP1_EnableClockSleep\n
 913:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    DBGSMEN       LL_APB2_GRP1_EnableClockSleep
 914:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 915:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 916:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 917:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 918:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 919:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 920:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 921:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 922:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 923:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 924:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 925:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 926:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClockSleep(uint32_t Periphs)
 927:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 928:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 929:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->APB2SMENR, Periphs);
 930:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 931:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APB2SMENR, Periphs);
 932:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 933:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 934:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 38


 935:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 936:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock during Low Power (Sleep) mode.
 937:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll APB2SMENR    SYSCFGSMEN    LL_APB2_GRP1_DisableClockSleep\n
 938:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM21SMEN     LL_APB2_GRP1_DisableClockSleep\n
 939:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    TIM22SMEN     LL_APB2_GRP1_DisableClockSleep\n
 940:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    ADCSMEN       LL_APB2_GRP1_DisableClockSleep\n
 941:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    SPI1SMEN      LL_APB2_GRP1_DisableClockSleep\n
 942:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    USART1SMEN    LL_APB2_GRP1_DisableClockSleep\n
 943:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         APB2SMENR    DBGSMEN       LL_APB2_GRP1_DisableClockSleep
 944:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 945:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 946:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM21
 947:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM22  (*)
 948:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC1
 949:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 950:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1  (*)
 951:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_DBGMCU
 952:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 953:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 954:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 955:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 956:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClockSleep(uint32_t Periphs)
 957:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 958:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   CLEAR_BIT(RCC->APB2SMENR, Periphs);
 959:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 960:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 961:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 962:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @}
 963:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 964:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_IOP IOP
 965:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @{
 966:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   */
 967:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** 
 968:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** /**
 969:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @brief  Enable IOP peripherals clock.
 970:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @rmtoll IOPENR       GPIOAEN       LL_IOP_GRP1_EnableClock\n
 971:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOBEN       LL_IOP_GRP1_EnableClock\n
 972:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOCEN       LL_IOP_GRP1_EnableClock\n
 973:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIODEN       LL_IOP_GRP1_EnableClock\n
 974:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOEEN       LL_IOP_GRP1_EnableClock\n
 975:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         IOPENR       GPIOHEN       LL_IOP_GRP1_EnableClock
 976:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 977:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOA
 978:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOB
 979:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOC
 980:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOD (*)
 981:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOE (*)
 982:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOH (*)
 983:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *
 984:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   *         (*) value not defined in all devices.
 985:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   * @retval None
 986:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** */
 987:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** __STATIC_INLINE void LL_IOP_GRP1_EnableClock(uint32_t Periphs)
 988:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** {
 304              		.loc 2 988 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 39


 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 80B5     		push	{r7, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0002 84B0     		sub	sp, sp, #16
 313              		.cfi_def_cfa_offset 24
 314 0004 00AF     		add	r7, sp, #0
 315              		.cfi_def_cfa_register 7
 316 0006 7860     		str	r0, [r7, #4]
 989:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 990:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   SET_BIT(RCC->IOPENR, Periphs);
 317              		.loc 2 990 3
 318 0008 074B     		ldr	r3, .L16
 319 000a D96A     		ldr	r1, [r3, #44]
 320 000c 064B     		ldr	r3, .L16
 321 000e 7A68     		ldr	r2, [r7, #4]
 322 0010 0A43     		orrs	r2, r1
 323 0012 DA62     		str	r2, [r3, #44]
 991:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 992:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->IOPENR, Periphs);
 324              		.loc 2 992 12
 325 0014 044B     		ldr	r3, .L16
 326 0016 DB6A     		ldr	r3, [r3, #44]
 327 0018 7A68     		ldr	r2, [r7, #4]
 328 001a 1340     		ands	r3, r2
 329              		.loc 2 992 10
 330 001c FB60     		str	r3, [r7, #12]
 993:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h ****   (void)tmpreg;
 331              		.loc 2 993 3
 332 001e FB68     		ldr	r3, [r7, #12]
 994:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_bus.h **** }
 333              		.loc 2 994 1
 334 0020 C046     		nop
 335 0022 BD46     		mov	sp, r7
 336 0024 04B0     		add	sp, sp, #16
 337              		@ sp needed
 338 0026 80BD     		pop	{r7, pc}
 339              	.L17:
 340              		.align	2
 341              	.L16:
 342 0028 00100240 		.word	1073876992
 343              		.cfi_endproc
 344              	.LFE171:
 346              		.section	.rodata.CHANNEL_OFFSET_TAB,"a"
 347              		.align	2
 350              	CHANNEL_OFFSET_TAB:
 351 0000 081C3044 		.ascii	"\010\0340DXl\200"
 351      586C80
 352              		.section	.rodata.OFFSET_TAB_CCMRx,"a"
 353              		.align	2
 356              	OFFSET_TAB_CCMRx:
 357 0000 00000000 		.ascii	"\000\000\000\000\004\000\004"
 357      040004
 358              		.section	.rodata.SHIFT_TAB_OCxx,"a"
 359              		.align	2
 362              	SHIFT_TAB_OCxx:
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 40


 363 0000 00000800 		.ascii	"\000\000\010\000\000\000\010"
 363      000008
 364              		.section	.rodata.SHIFT_TAB_ICxx,"a"
 365              		.align	2
 368              	SHIFT_TAB_ICxx:
 369 0000 00000800 		.ascii	"\000\000\010\000\000\000\010"
 369      000008
 370              		.section	.rodata.SHIFT_TAB_CCxP,"a"
 371              		.align	2
 374              	SHIFT_TAB_CCxP:
 375 0000 00000400 		.ascii	"\000\000\004\000\010\000\014"
 375      08000C
 376              		.section	.text.LL_USART_Enable,"ax",%progbits
 377              		.align	1
 378              		.syntax unified
 379              		.code	16
 380              		.thumb_func
 381              		.fpu softvfp
 383              	LL_USART_Enable:
 384              	.LFB969:
 385              		.file 3 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h"
   1:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
   2:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ******************************************************************************
   3:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @file    stm32l0xx_ll_usart.h
   4:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @author  MCD Application Team
   5:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ******************************************************************************
   7:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @attention
   8:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *
   9:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * All rights reserved.</center></h2>
  11:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *
  12:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * the "License"; You may not use this file except in compliance with the
  14:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * License. You may obtain a copy of the License at:
  15:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *
  17:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ******************************************************************************
  18:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  19:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  20:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #ifndef STM32L0xx_LL_USART_H
  22:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define STM32L0xx_LL_USART_H
  23:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  24:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #ifdef __cplusplus
  25:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** extern "C" {
  26:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif
  27:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  28:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  29:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #include "stm32l0xx.h"
  30:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  31:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @addtogroup STM32L0xx_LL_Driver
  32:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
  33:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  34:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  35:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART4) || defined (USART5)
  36:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 41


  37:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL USART
  38:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
  39:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  40:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  41:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  42:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  43:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  44:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  45:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  46:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  47:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  48:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
  49:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  50:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
  51:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
  52:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  53:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  54:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  55:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  56:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  57:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  58:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
  59:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  60:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  61:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
  62:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  63:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
  64:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** typedef struct
  65:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
  66:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  67:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  68:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  69:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  70:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            function @ref LL_USART_SetBaudRate().*/
  71:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  72:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
  73:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
  74:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  75:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  76:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            function @ref LL_USART_SetDataWidth().*/
  77:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  78:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
  79:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
  80:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  81:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  82:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            function @ref LL_USART_SetStopBitsLength().*/
  83:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  84:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
  85:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
  86:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  87:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
  88:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            function @ref LL_USART_SetParity().*/
  89:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  90:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
  91:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
  92:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  93:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 42


  94:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            function @ref LL_USART_SetTransferDirection().*/
  95:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  96:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
  97:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
  98:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
  99:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 100:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            function @ref LL_USART_SetHWFlowCtrl().*/
 101:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 102:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 103:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 104:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 105:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary
 106:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            function @ref LL_USART_SetOverSampling().*/
 107:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 108:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** } LL_USART_InitTypeDef;
 109:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 110:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 111:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 112:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 113:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** typedef struct
 114:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 115:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 116:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 117:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 118:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 119:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 120:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 121:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 122:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 123:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 124:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 125:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 126:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            functions @ref LL_USART_SetClockPolarity().
 127:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 128:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 129:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 130:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 131:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 132:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 133:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            functions @ref LL_USART_SetClockPhase().
 134:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 135:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 136:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 137:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 138:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 139:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 140:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 141:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            functions @ref LL_USART_SetLastClkPulseOutput().
 142:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 143:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 144:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 145:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 146:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 147:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 148:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 149:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 150:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 43


 151:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 152:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 153:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 154:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 155:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 156:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLEAR_FLAG Clear Flags Defines
 157:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_WriteReg function
 158:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 159:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 160:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_PECF                       USART_ICR_PECF                /*!< Parity error cle
 161:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_FECF                       USART_ICR_FECF                /*!< Framing error cl
 162:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_NCF                        USART_ICR_NCF                 /*!< Noise error dete
 163:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_ORECF                      USART_ICR_ORECF               /*!< Overrun error cl
 164:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_IDLECF                     USART_ICR_IDLECF              /*!< Idle line detect
 165:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_TCCF                       USART_ICR_TCCF                /*!< Transmission com
 166:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
 167:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_TCBGTCF                    USART_ICR_TCBGTCF             /*!< Transmission com
 168:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
 169:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_LBDCF                      USART_ICR_LBDCF               /*!< LIN break detect
 170:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_CTSCF                      USART_ICR_CTSCF               /*!< CTS clear flag *
 171:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_RTOCF                      USART_ICR_RTOCF               /*!< Receiver timeout
 172:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_EOBCF                      USART_ICR_EOBCF               /*!< End of block cle
 173:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_CMCF                       USART_ICR_CMCF                /*!< Character match 
 174:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ICR_WUCF                       USART_ICR_WUCF                /*!< Wakeup from Stop
 175:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 176:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 177:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 178:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 179:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 180:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 181:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 182:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 183:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_PE                         USART_ISR_PE                  /*!< Parity error fla
 184:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_FE                         USART_ISR_FE                  /*!< Framing error fl
 185:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_NE                         USART_ISR_NE                  /*!< Noise detected f
 186:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_ORE                        USART_ISR_ORE                 /*!< Overrun error fl
 187:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_IDLE                       USART_ISR_IDLE                /*!< Idle line detect
 188:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_RXNE                       USART_ISR_RXNE                /*!< Read data regist
 189:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_TC                         USART_ISR_TC                  /*!< Transmission com
 190:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_TXE                        USART_ISR_TXE                 /*!< Transmit data re
 191:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_LBDF                       USART_ISR_LBDF                /*!< LIN break detect
 192:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_CTSIF                      USART_ISR_CTSIF               /*!< CTS interrupt fl
 193:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_CTS                        USART_ISR_CTS                 /*!< CTS flag */
 194:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_RTOF                       USART_ISR_RTOF                /*!< Receiver timeout
 195:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_EOBF                       USART_ISR_EOBF                /*!< End of block fla
 196:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_ABRE                       USART_ISR_ABRE                /*!< Auto baud rate e
 197:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_ABRF                       USART_ISR_ABRF                /*!< Auto baud rate f
 198:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_BUSY                       USART_ISR_BUSY                /*!< Busy flag */
 199:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_CMF                        USART_ISR_CMF                 /*!< Character match 
 200:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_SBKF                       USART_ISR_SBKF                /*!< Send break flag 
 201:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_RWU                        USART_ISR_RWU                 /*!< Receiver wakeup 
 202:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_WUF                        USART_ISR_WUF                 /*!< Wakeup from Stop
 203:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_TEACK                      USART_ISR_TEACK               /*!< Transmit enable 
 204:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_REACK                      USART_ISR_REACK               /*!< Receive enable a
 205:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
 206:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ISR_TCBGT                      USART_ISR_TCBGT               /*!< Transmission com
 207:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 44


 208:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 209:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 210:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 211:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 212:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 213:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 214:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 215:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 216:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 217:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
 218:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 219:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 220:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 221:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_CMIE                       USART_CR1_CMIE                /*!< Character match 
 222:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_RTOIE                      USART_CR1_RTOIE               /*!< Receiver timeout
 223:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR1_EOBIE                      USART_CR1_EOBIE               /*!< End of Block int
 224:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 225:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 226:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 227:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR3_WUFIE                      USART_CR3_WUFIE               /*!< Wakeup from Stop
 228:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
 229:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CR3_TCBGTIE                    USART_CR3_TCBGTIE             /*!< Transmission com
 230:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
 231:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 232:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 233:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 234:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 235:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 236:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 237:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 238:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 239:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 240:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 241:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 242:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 243:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 244:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 245:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 246:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 247:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 248:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 249:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 250:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 251:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 252:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 253:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 254:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 255:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 256:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 257:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 258:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 259:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 260:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 261:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 262:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 263:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 264:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 45


 265:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 266:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 267:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 268:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_7B                   USART_CR1_M1            /*!< 7 bits word length : S
 269:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 270:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M0            /*!< 9 bits word length : S
 271:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 272:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 273:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 274:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 275:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 276:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 277:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 278:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 279:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 280:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 281:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 282:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 283:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 284:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 285:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 286:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 287:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 288:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 289:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 290:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 291:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 292:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 293:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 294:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 295:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 296:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 297:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 298:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 299:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 300:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 301:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 302:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 303:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 304:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 305:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 306:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 307:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 308:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 309:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 310:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 311:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 312:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 313:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 314:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 315:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 316:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 317:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 318:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 319:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 320:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 321:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 46


 322:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 323:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 324:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 325:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 326:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 327:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 328:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 329:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 330:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 331:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 332:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 333:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 334:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXRX TX RX Pins Swap
 335:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 336:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 337:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_TXRX_STANDARD                  0x00000000U           /*!< TX/RX pins are used as d
 338:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_TXRX_SWAPPED                   (USART_CR2_SWAP)      /*!< TX and RX pins functions
 339:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 340:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 341:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 342:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 343:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_RXPIN_LEVEL RX Pin Active Level Inversion
 344:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 345:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 346:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_STANDARD           0x00000000U           /*!< RX pin signal works usin
 347:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_INVERTED           (USART_CR2_RXINV)     /*!< RX pin signal values are
 348:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 349:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 350:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 351:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 352:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXPIN_LEVEL TX Pin Active Level Inversion
 353:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 354:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 355:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_STANDARD           0x00000000U           /*!< TX pin signal works usin
 356:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_INVERTED           (USART_CR2_TXINV)     /*!< TX pin signal values are
 357:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 358:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 359:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 360:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 361:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_BINARY_LOGIC Binary Data Inversion
 362:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 363:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 364:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_POSITIVE          0x00000000U           /*!< Logical data from the da
 365:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_NEGATIVE          USART_CR2_DATAINV     /*!< Logical data from the da
 366:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 367:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 368:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 369:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 370:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_BITORDER Bit Order
 371:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 372:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 373:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_BITORDER_LSBFIRST              0x00000000U           /*!< data is transmitted/rece
 374:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_BITORDER_MSBFIRST              USART_CR2_MSBFIRST    /*!< data is transmitted/rece
 375:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 376:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 377:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 378:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 47


 379:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_AUTOBAUD_DETECT_ON Autobaud Detection
 380:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 381:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 382:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_STARTBIT    0x00000000U                                 /*!< Me
 383:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE USART_CR2_ABRMODE_0                         /*!< Fa
 384:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME    USART_CR2_ABRMODE_1                         /*!< 0x
 385:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_55_FRAME    (USART_CR2_ABRMODE_1 | USART_CR2_ABRMODE_0) /*!< 0x
 386:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 387:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 388:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 389:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 390:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_ADDRESS_DETECT Address Length Detection
 391:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 392:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 393:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_4B              0x00000000U           /*!< 4-bit address detection 
 394:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_7B              USART_CR2_ADDM7       /*!< 7-bit address detection 
 395:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 396:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 397:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 398:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 399:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 400:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 401:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 402:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 403:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 404:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 405:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 406:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 407:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 408:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 409:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 410:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP_ON Wakeup Activation
 411:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 412:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 413:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_ADDRESS              0x00000000U                             /*!< Wake u
 414:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_STARTBIT             USART_CR3_WUS_1                         /*!< Wake u
 415:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_RXNE                 (USART_CR3_WUS_0 | USART_CR3_WUS_1)     /*!< Wake u
 416:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 417:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 418:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 419:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 420:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 421:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 422:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 423:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 424:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 425:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 426:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 427:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 428:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 429:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 430:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 431:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 432:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 433:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 434:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 435:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 48


 436:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 437:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 438:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DE_POLARITY Driver Enable Polarity
 439:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 440:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 441:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DE_POLARITY_HIGH               0x00000000U           /*!< DE signal is active high
 442:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DE_POLARITY_LOW                USART_CR3_DEP         /*!< DE signal is active low 
 443:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 444:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 445:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 446:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 447:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DMA_REG_DATA DMA Register Data
 448:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 449:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 450:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_TRANSMIT          0x00000000U          /*!< Get address of data regis
 451:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_RECEIVE           0x00000001U          /*!< Get address of data regis
 452:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 453:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 454:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 455:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 456:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 457:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 458:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 459:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 460:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 461:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 462:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 463:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 464:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 465:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 466:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 467:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 468:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 469:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 470:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Write a value in USART register
 471:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 472:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __REG__ Register to be written
 473:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 474:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 475:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 476:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 477:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 478:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 479:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Read a value in USART register
 480:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 481:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __REG__ Register to be read
 482:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Register value
 483:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 484:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 485:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 486:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 487:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 488:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 489:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 490:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 491:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 492:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 49


 493:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 494:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 495:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 496:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 497:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 498:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 499:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 500:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__) ((((__PERIPHCLK__)*2U)\
 501:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                                                 + ((__BAUDRATE__)/2U))/(__BAUDRATE_
 502:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 503:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 504:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 505:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 506:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 507:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 508:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 509:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 510:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__) (((__PERIPHCLK__) + ((__BAUDRATE__)/
 511:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 512:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 513:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 514:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 515:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 516:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 517:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
 518:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 519:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 520:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 521:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 522:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 523:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 524:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 525:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 526:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 527:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
 528:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 529:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 530:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 531:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  USART Enable
 532:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 533:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 534:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 535:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 536:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 537:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 386              		.loc 3 537 1
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 8
 389              		@ frame_needed = 1, uses_anonymous_args = 0
 390 0000 80B5     		push	{r7, lr}
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              		.cfi_def_cfa_offset 16
 396 0004 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 50


 398 0006 7860     		str	r0, [r7, #4]
 538:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 399              		.loc 3 538 3
 400 0008 7B68     		ldr	r3, [r7, #4]
 401 000a 1B68     		ldr	r3, [r3]
 402 000c 0122     		movs	r2, #1
 403 000e 1A43     		orrs	r2, r3
 404 0010 7B68     		ldr	r3, [r7, #4]
 405 0012 1A60     		str	r2, [r3]
 539:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 406              		.loc 3 539 1
 407 0014 C046     		nop
 408 0016 BD46     		mov	sp, r7
 409 0018 02B0     		add	sp, sp, #8
 410              		@ sp needed
 411 001a 80BD     		pop	{r7, pc}
 412              		.cfi_endproc
 413              	.LFE969:
 415              		.section	.text.LL_USART_ConfigAsyncMode,"ax",%progbits
 416              		.align	1
 417              		.syntax unified
 418              		.code	16
 419              		.thumb_func
 420              		.fpu softvfp
 422              	LL_USART_ConfigAsyncMode:
 423              	.LFB1085:
 540:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 541:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 542:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 543:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 544:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 545:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         flags, in the USARTx_ISR are set to their default values.
 546:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 547:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 548:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 549:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 550:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 551:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 552:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 553:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 554:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 555:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 556:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 557:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 558:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 559:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 560:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 561:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 562:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 563:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE)) ? 1UL : 0UL);
 564:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 565:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 566:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 567:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  USART enabled in STOP Mode.
 568:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   When this function is enabled, USART is able to wake up the MCU from Stop mode, provide
 569:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         USART clock selection is HSI or LSE in RCC.
 570:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 51


 571:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 572:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_EnableInStopMode
 573:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 574:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 575:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 576:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableInStopMode(USART_TypeDef *USARTx)
 577:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 578:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_UESM);
 579:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 580:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 581:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 582:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  USART disabled in STOP Mode.
 583:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   When this function is disabled, USART is not able to wake up the MCU from Stop mode
 584:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 585:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 586:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_DisableInStopMode
 587:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 588:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 589:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 590:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableInStopMode(USART_TypeDef *USARTx)
 591:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 592:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_UESM);
 593:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 594:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 595:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 596:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if USART is enabled in STOP Mode (able to wake up MCU from Stop mode or not)
 597:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 598:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 599:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_IsEnabledInStopMode
 600:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 601:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 602:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 603:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledInStopMode(USART_TypeDef *USARTx)
 604:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 605:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UESM) == (USART_CR1_UESM)) ? 1UL : 0UL);
 606:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 607:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 608:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 609:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  USART Clock enabled in STOP Mode
 610:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   When this function is called, USART Clock is enabled while in STOP mode
 611:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          UCESM         LL_USART_EnableClockInStopMode
 612:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 613:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 614:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 615:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableClockInStopMode(USART_TypeDef *USARTx)
 616:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 617:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_UCESM);
 618:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 619:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 620:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 621:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  USART clock disabled in STOP Mode
 622:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   When this function is called, USART Clock is disabled while in STOP mode
 623:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          UCESM         LL_USART_DisableClockInStopMode
 624:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 625:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 626:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 627:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableClockInStopMode(USART_TypeDef *USARTx)
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 52


 628:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 629:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_UCESM);
 630:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 631:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 632:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 633:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if USART clock is enabled in STOP Mode
 634:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          UCESM         LL_USART_IsClockEnabledInStopMode
 635:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 636:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 637:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 638:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsClockEnabledInStopMode(USART_TypeDef *USARTx)
 639:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 640:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_UCESM) == (USART_CR3_UCESM));
 641:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 642:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 643:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 644:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 645:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 646:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 647:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 648:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 649:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 650:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 651:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RE);
 652:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 653:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 654:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 655:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Receiver Disable
 656:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 657:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 658:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 659:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 660:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 661:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 662:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 663:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 664:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 665:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 666:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Transmitter Enable
 667:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 668:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 669:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 670:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 671:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 672:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 673:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TE);
 674:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 675:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 676:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 677:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Transmitter Disable
 678:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 679:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 680:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 681:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 682:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 683:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 684:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 53


 685:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 686:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 687:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 688:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 689:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         of Transmitter and Receiver
 690:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 691:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 692:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 693:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 694:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 695:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 696:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 697:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 698:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 699:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 700:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 701:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 702:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 703:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 704:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 705:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 706:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 707:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 708:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 709:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 710:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 711:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 712:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 713:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 714:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 715:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 716:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
 717:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 718:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 719:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 720:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 721:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 722:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
 723:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 724:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 725:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
 726:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
 727:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
 728:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 729:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 730:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 731:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 732:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 733:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 734:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 735:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
 736:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 737:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 738:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 739:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 740:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 741:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 54


 742:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
 743:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
 744:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 745:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 746:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 747:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 748:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 749:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 750:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
 751:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 752:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 753:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 754:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 755:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 756:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 757:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
 758:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 759:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
 760:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 761:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 762:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 763:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 764:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
 765:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 766:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
 767:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 768:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 769:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 770:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 771:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
 772:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 773:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 774:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 775:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 776:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 777:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
 778:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 779:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
 780:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 781:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 782:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 783:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
 784:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_SetDataWidth\n
 785:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          M1            LL_USART_SetDataWidth
 786:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 787:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 788:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
 789:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 790:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 791:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 792:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 793:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
 794:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 795:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
 796:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 797:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 798:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 55


 799:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 800:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_GetDataWidth\n
 801:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          M1            LL_USART_GetDataWidth
 802:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 803:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 804:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
 805:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 806:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 807:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 808:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
 809:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 810:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
 811:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 812:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 813:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 814:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Allow switch between Mute Mode and Active mode
 815:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_EnableMuteMode
 816:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 817:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 818:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 819:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableMuteMode(USART_TypeDef *USARTx)
 820:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 821:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_MME);
 822:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 823:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 824:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 825:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Prevent Mute Mode use. Set Receiver in active mode permanently.
 826:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_DisableMuteMode
 827:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 828:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 829:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 830:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableMuteMode(USART_TypeDef *USARTx)
 831:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 832:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_MME);
 833:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 834:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 835:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 836:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if switch between Mute Mode and Active mode is allowed
 837:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_IsEnabledMuteMode
 838:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 839:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 840:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 841:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledMuteMode(USART_TypeDef *USARTx)
 842:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 843:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_MME) == (USART_CR1_MME)) ? 1UL : 0UL);
 844:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 845:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 846:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 847:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
 848:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
 849:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 850:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
 851:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 852:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 853:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 854:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 855:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 56


 856:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 857:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
 858:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 859:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 860:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 861:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Oversampling mode
 862:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
 863:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 864:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 865:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 866:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 867:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 868:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
 869:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 870:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
 871:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 872:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 873:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 874:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
 875:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 876:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 877:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
 878:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 879:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
 880:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 881:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 882:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 883:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 884:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
 885:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 886:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
 887:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 888:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 889:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 890:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
 891:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
 892:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 893:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 894:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
 895:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 896:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 897:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 898:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 899:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 900:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
 901:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 902:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
 903:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 904:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 905:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 906:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
 907:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 908:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 909:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
 910:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 911:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
 912:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 57


 913:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 914:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 915:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 916:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
 917:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 918:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
 919:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 920:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 921:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 922:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
 923:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 924:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 925:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
 926:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 927:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 928:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 929:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 930:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 931:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
 932:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 933:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
 934:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 935:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 936:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 937:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
 938:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 939:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 940:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
 941:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 942:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 943:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 944:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 945:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 946:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 947:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
 948:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 949:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
 950:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 951:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 952:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 953:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
 954:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 955:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 956:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
 957:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 958:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 959:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 960:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 961:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 962:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
 963:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 964:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
 965:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 966:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 967:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 968:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
 969:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 58


 970:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 971:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 972:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
 973:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
 974:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
 975:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
 976:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
 977:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
 978:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
 979:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
 980:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 981:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 982:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
 983:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 984:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 985:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
 986:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 987:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 988:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
 989:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
 990:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
 991:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 992:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
 993:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 994:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
 995:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
 996:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
 997:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
 998:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 999:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
1000:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1001:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1002:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1003:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
1004:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1005:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1006:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1007:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1008:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1009:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
1010:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1011:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1012:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
1013:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1014:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1015:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1016:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
1017:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1018:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
1019:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1020:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1021:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1022:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
1023:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
1024:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1025:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
1026:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 59


1027:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1028:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1029:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
1030:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1031:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN)) ? 1UL : 0UL);
1032:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1033:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1034:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1035:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set the length of the stop bits
1036:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
1037:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1038:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1039:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1040:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1041:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1042:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1043:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1044:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1045:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
1046:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1047:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1048:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1049:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1050:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1051:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
1052:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
1053:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1054:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1055:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1056:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1057:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1058:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1059:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1060:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
1061:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1062:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
1063:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1064:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1065:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1066:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
1067:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1068:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
1069:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
1070:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
1071:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
1072:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
1073:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          M0            LL_USART_ConfigCharacter\n
1074:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR1          M1            LL_USART_ConfigCharacter\n
1075:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
1076:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1077:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
1078:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
1079:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1080:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1081:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
1082:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1083:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 60


1084:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1085:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1086:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1087:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1088:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1089:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1090:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1091:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1092:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
1093:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                               uint32_t StopBits)
1094:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1095:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
1096:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1097:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1098:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1099:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1100:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure TX/RX pins swapping setting.
1101:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_SetTXRXSwap
1102:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1103:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  SwapConfig This parameter can be one of the following values:
1104:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1105:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1106:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1107:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1108:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXRXSwap(USART_TypeDef *USARTx, uint32_t SwapConfig)
1109:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1110:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_SWAP, SwapConfig);
1111:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1112:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1113:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1114:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Retrieve TX/RX pins swapping configuration.
1115:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_GetTXRXSwap
1116:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1117:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1118:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1119:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1120:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1121:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXRXSwap(USART_TypeDef *USARTx)
1122:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1123:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_SWAP));
1124:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1125:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1126:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1127:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure RX pin active level logic
1128:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_SetRXPinLevel
1129:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1130:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1131:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1132:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1133:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1134:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1135:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1136:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1137:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_RXINV, PinInvMethod);
1138:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1139:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1140:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 61


1141:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Retrieve RX pin active level logic configuration
1142:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_GetRXPinLevel
1143:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1144:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1145:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1146:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1147:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1148:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXPinLevel(USART_TypeDef *USARTx)
1149:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1150:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_RXINV));
1151:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1152:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1153:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1154:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure TX pin active level logic
1155:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_SetTXPinLevel
1156:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1157:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1158:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1159:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1160:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1161:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1162:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1163:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1164:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_TXINV, PinInvMethod);
1165:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1166:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1167:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1168:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Retrieve TX pin active level logic configuration
1169:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_GetTXPinLevel
1170:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1171:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1172:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1173:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1174:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1175:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXPinLevel(USART_TypeDef *USARTx)
1176:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1177:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_TXINV));
1178:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1179:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1180:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1181:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure Binary data logic.
1182:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Allow to define how Logical data from the data register are send/received :
1183:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         either in positive/direct logic (1=H, 0=L) or in negative/inverse logic (1=L, 0=H)
1184:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_SetBinaryDataLogic
1185:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1186:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  DataLogic This parameter can be one of the following values:
1187:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1188:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1189:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1190:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1191:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBinaryDataLogic(USART_TypeDef *USARTx, uint32_t DataLogic)
1192:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1193:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_DATAINV, DataLogic);
1194:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1195:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1196:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1197:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Retrieve Binary data configuration
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 62


1198:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_GetBinaryDataLogic
1199:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1200:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1201:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1202:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1203:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1204:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBinaryDataLogic(USART_TypeDef *USARTx)
1205:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1206:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_DATAINV));
1207:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1208:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1209:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1210:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure transfer bit order (either Less or Most Significant Bit First)
1211:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1212:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1213:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_SetTransferBitOrder
1214:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1215:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  BitOrder This parameter can be one of the following values:
1216:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1217:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1218:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1219:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1220:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferBitOrder(USART_TypeDef *USARTx, uint32_t BitOrder)
1221:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1222:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_MSBFIRST, BitOrder);
1223:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1224:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1225:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1226:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return transfer bit order (either Less or Most Significant Bit First)
1227:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1228:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1229:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_GetTransferBitOrder
1230:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1231:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1232:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1233:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1234:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1235:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferBitOrder(USART_TypeDef *USARTx)
1236:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1237:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_MSBFIRST));
1238:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1239:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1240:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1241:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Auto Baud-Rate Detection
1242:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1243:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1244:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_EnableAutoBaudRate
1245:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1246:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1247:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1248:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableAutoBaudRate(USART_TypeDef *USARTx)
1249:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1250:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_ABREN);
1251:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1252:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1253:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1254:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Auto Baud-Rate Detection
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 63


1255:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1256:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1257:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_DisableAutoBaudRate
1258:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1259:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1260:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1261:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableAutoBaudRate(USART_TypeDef *USARTx)
1262:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1263:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_ABREN);
1264:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1265:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1266:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1267:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Auto Baud-Rate Detection mechanism is enabled
1268:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1269:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1270:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_IsEnabledAutoBaud
1271:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1272:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1273:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1274:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledAutoBaud(USART_TypeDef *USARTx)
1275:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1276:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_ABREN) == (USART_CR2_ABREN)) ? 1UL : 0UL);
1277:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1278:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1279:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1280:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Auto Baud-Rate mode bits
1281:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1282:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1283:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_SetAutoBaudRateMode
1284:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1285:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  AutoBaudRateMode This parameter can be one of the following values:
1286:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1287:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1288:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME
1289:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME
1290:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1291:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1292:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetAutoBaudRateMode(USART_TypeDef *USARTx, uint32_t AutoBaudRateMode)
1293:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1294:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ABRMODE, AutoBaudRateMode);
1295:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1296:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1297:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1298:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Auto Baud-Rate mode
1299:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
1300:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1301:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_GetAutoBaudRateMode
1302:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1303:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1304:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1305:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1306:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME
1307:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME
1308:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1309:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetAutoBaudRateMode(USART_TypeDef *USARTx)
1310:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1311:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ABRMODE));
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 64


1312:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1313:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1314:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1315:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Receiver Timeout
1316:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_EnableRxTimeout
1317:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1318:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1319:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1320:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRxTimeout(USART_TypeDef *USARTx)
1321:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1322:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_RTOEN);
1323:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1324:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1325:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1326:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Receiver Timeout
1327:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_DisableRxTimeout
1328:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1329:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1330:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1331:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRxTimeout(USART_TypeDef *USARTx)
1332:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1333:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_RTOEN);
1334:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1335:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1336:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1337:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Receiver Timeout feature is enabled
1338:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_IsEnabledRxTimeout
1339:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1340:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1341:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1342:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledRxTimeout(USART_TypeDef *USARTx)
1343:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1344:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_RTOEN) == (USART_CR2_RTOEN)) ? 1UL : 0UL);
1345:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1346:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1347:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1348:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Address of the USART node.
1349:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
1350:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         for wake up with address mark detection.
1351:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   4bits address node is used when 4-bit Address Detection is selected in ADDM7.
1352:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (b7-b4 should be set to 0)
1353:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         8bits address node is used when 7-bit Address Detection is selected in ADDM7.
1354:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (This is used in multiprocessor communication during Mute mode or Stop mode,
1355:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         for wake up with 7-bit address mark detection.
1356:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         The MSB of the character sent by the transmitter should be equal to 1.
1357:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         It may also be used for character detection during normal reception,
1358:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Mute mode inactive (for example, end of block detection in ModBus protocol).
1359:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         In this case, the whole received character (8-bit) is compared to the ADD[7:0]
1360:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         value and CMF flag is set on match)
1361:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_ConfigNodeAddress\n
1362:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          ADDM7         LL_USART_ConfigNodeAddress
1363:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1364:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  AddressLen This parameter can be one of the following values:
1365:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1366:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1367:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  NodeAddress 4 or 7 bit Address of the USART node.
1368:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 65


1369:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1370:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigNodeAddress(USART_TypeDef *USARTx, uint32_t AddressLen, uint32_
1371:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1372:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD | USART_CR2_ADDM7,
1373:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****              (uint32_t)(AddressLen | (NodeAddress << USART_CR2_ADD_Pos)));
1374:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1375:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1376:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1377:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return 8 bit Address of the USART node as set in ADD field of CR2.
1378:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   If 4-bit Address Detection is selected in ADDM7,
1379:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
1380:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         If 7-bit Address Detection is selected in ADDM7,
1381:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         only 8bits (b7-b0) of returned value are relevant (b31-b8 are not relevant)
1382:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
1383:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1384:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
1385:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1386:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
1387:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1388:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD) >> USART_CR2_ADD_Pos);
1389:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1390:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1391:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1392:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Length of Node Address used in Address Detection mode (7-bit or 4-bit)
1393:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          ADDM7         LL_USART_GetNodeAddressLen
1394:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1395:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1396:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1397:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1398:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1399:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddressLen(USART_TypeDef *USARTx)
1400:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1401:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADDM7));
1402:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1403:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1404:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1405:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
1406:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1407:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1408:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
1409:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1410:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1411:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1412:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1413:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1414:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
1415:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1416:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1417:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1418:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
1419:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1420:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1421:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
1422:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1423:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1424:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1425:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 66


1426:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1427:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
1428:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1429:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1430:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1431:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
1432:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1433:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1434:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
1435:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1436:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1437:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1438:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1439:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1440:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
1441:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1442:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1443:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1444:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
1445:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1446:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1447:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
1448:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1449:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1450:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1451:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1452:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1453:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
1454:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1455:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1456:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1457:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
1458:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1459:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1460:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
1461:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
1462:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1463:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
1464:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1465:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1466:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1467:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1468:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1469:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1470:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
1471:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1472:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
1473:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1474:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1475:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1476:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
1477:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1478:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1479:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
1480:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
1481:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1482:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 67


1483:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1484:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1485:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1486:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1487:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1488:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
1489:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1490:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
1491:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1492:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1493:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1494:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable One bit sampling method
1495:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
1496:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1497:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1498:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1499:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
1500:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1501:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1502:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1503:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1504:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1505:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable One bit sampling method
1506:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
1507:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1508:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1509:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1510:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
1511:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1512:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1513:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1514:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1515:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1516:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
1517:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
1518:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1519:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1520:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1521:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1522:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1523:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT)) ? 1UL : 0UL);
1524:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1525:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1526:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1527:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Overrun detection
1528:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_EnableOverrunDetect
1529:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1530:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1531:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1532:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOverrunDetect(USART_TypeDef *USARTx)
1533:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1534:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1535:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1536:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1537:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1538:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Overrun detection
1539:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_DisableOverrunDetect
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 68


1540:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1541:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1542:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1543:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOverrunDetect(USART_TypeDef *USARTx)
1544:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1545:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1546:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1547:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1548:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1549:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Overrun detection is enabled
1550:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_IsEnabledOverrunDetect
1551:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1552:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1553:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1554:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOverrunDetect(USART_TypeDef *USARTx)
1555:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1556:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_OVRDIS) != USART_CR3_OVRDIS) ? 1UL : 0UL);
1557:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1558:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1559:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1560:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Select event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1561:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1562:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1563:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_SetWKUPType
1564:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1565:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Type This parameter can be one of the following values:
1566:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1567:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1568:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1569:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1570:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1571:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWKUPType(USART_TypeDef *USARTx, uint32_t Type)
1572:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1573:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_WUS, Type);
1574:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1575:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1576:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1577:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1578:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1579:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1580:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_GetWKUPType
1581:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1582:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1583:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1584:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1585:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1586:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1587:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWKUPType(USART_TypeDef *USARTx)
1588:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1589:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_WUS));
1590:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1591:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1592:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1593:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1594:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1595:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1596:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 69


1597:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (Baud rate value != 0)
1598:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
1599:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1600:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1601:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1602:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1603:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1604:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1605:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1606:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1607:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1608:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
1609:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****                                           uint32_t BaudRate)
1610:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1611:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t usartdiv;
1612:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t brrtemp;
1613:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1614:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1615:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   {
1616:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
1617:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     brrtemp = usartdiv & 0xFFF0U;
1618:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
1619:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     USARTx->BRR = brrtemp;
1620:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   }
1621:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   else
1622:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   {
1623:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
1624:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   }
1625:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1626:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1627:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1628:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
1629:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
1630:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1631:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
1632:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
1633:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1634:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1635:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1636:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1637:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1638:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Baud Rate
1639:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1640:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t O
1641:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1642:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t usartdiv;
1643:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t brrresult = 0x0U;
1644:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1645:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   usartdiv = USARTx->BRR;
1646:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1647:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   if (usartdiv == 0U)
1648:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   {
1649:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     /* Do not perform a division by 0 */
1650:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   }
1651:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   else if (OverSampling == LL_USART_OVERSAMPLING_8)
1652:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   {
1653:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     usartdiv = (uint16_t)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 70


1654:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     if (usartdiv != 0U)
1655:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     {
1656:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****       brrresult = (PeriphClk * 2U) / usartdiv;
1657:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     }
1658:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   }
1659:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   else
1660:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   {
1661:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     if ((usartdiv & 0xFFFFU) != 0U)
1662:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     {
1663:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****       brrresult = PeriphClk / usartdiv;
1664:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     }
1665:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   }
1666:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (brrresult);
1667:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1668:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1669:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1670:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Receiver Time Out Value (expressed in nb of bits duration)
1671:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_SetRxTimeout
1672:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1673:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Timeout Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
1674:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1675:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1676:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRxTimeout(USART_TypeDef *USARTx, uint32_t Timeout)
1677:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1678:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_RTO, Timeout);
1679:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1680:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1681:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1682:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Get Receiver Time Out Value (expressed in nb of bits duration)
1683:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll RTOR         RTO           LL_USART_GetRxTimeout
1684:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1685:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x00FFFFFF
1686:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1687:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRxTimeout(USART_TypeDef *USARTx)
1688:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1689:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_RTO));
1690:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1691:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1692:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1693:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Block Length value in reception
1694:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_SetBlockLength
1695:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1696:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  BlockLength Value between Min_Data=0x00 and Max_Data=0xFF
1697:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1698:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1699:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBlockLength(USART_TypeDef *USARTx, uint32_t BlockLength)
1700:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1701:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->RTOR, USART_RTOR_BLEN, BlockLength << USART_RTOR_BLEN_Pos);
1702:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1703:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1704:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1705:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Get Block Length value in reception
1706:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll RTOR         BLEN          LL_USART_GetBlockLength
1707:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1708:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
1709:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1710:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBlockLength(USART_TypeDef *USARTx)
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 71


1711:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1712:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->RTOR, USART_RTOR_BLEN) >> USART_RTOR_BLEN_Pos);
1713:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1714:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1715:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1716:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
1717:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1718:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1719:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_IRDA Configuration functions related to Irda feature
1720:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
1721:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1722:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1723:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1724:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable IrDA mode
1725:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1726:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1727:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_EnableIrda
1728:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1729:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1730:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1731:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIrda(USART_TypeDef *USARTx)
1732:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1733:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1734:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1735:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1736:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1737:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable IrDA mode
1738:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1739:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1740:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_DisableIrda
1741:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1742:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1743:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1744:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIrda(USART_TypeDef *USARTx)
1745:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1746:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_IREN);
1747:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1748:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1749:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1750:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if IrDA mode is enabled
1751:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1752:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1753:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_IsEnabledIrda
1754:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1755:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1756:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1757:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIrda(USART_TypeDef *USARTx)
1758:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1759:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_IREN) == (USART_CR3_IREN)) ? 1UL : 0UL);
1760:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1761:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1762:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1763:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Configure IrDA Power Mode (Normal or Low Power)
1764:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1765:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1766:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_SetIrdaPowerMode
1767:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 72


1768:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  PowerMode This parameter can be one of the following values:
1769:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1770:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_LOW
1771:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1772:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1773:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPowerMode(USART_TypeDef *USARTx, uint32_t PowerMode)
1774:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1775:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_IRLP, PowerMode);
1776:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1777:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1778:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1779:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Retrieve IrDA Power Mode configuration (Normal or Low Power)
1780:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1781:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1782:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_GetIrdaPowerMode
1783:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1784:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1785:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1786:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1787:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1788:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPowerMode(USART_TypeDef *USARTx)
1789:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1790:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_IRLP));
1791:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1792:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1793:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1794:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Irda prescaler value, used for dividing the USART clock source
1795:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1796:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1797:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1798:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetIrdaPrescaler
1799:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1800:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0x00 and Max_Data=0xFF
1801:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1802:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1803:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1804:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1805:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, (uint16_t)USART_GTPR_PSC, (uint16_t)PrescalerValue);
1806:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1807:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1808:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1809:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Irda prescaler value, used for dividing the USART clock source
1810:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1811:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1812:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1813:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetIrdaPrescaler
1814:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1815:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Irda prescaler value (Value between Min_Data=0x00 and Max_Data=0xFF)
1816:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1817:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPrescaler(USART_TypeDef *USARTx)
1818:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1819:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1820:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1821:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1822:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1823:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
1824:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 73


1825:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1826:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_Smartcard Configuration functions related to Smartcard feat
1827:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
1828:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1829:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1830:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1831:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Smartcard NACK transmission
1832:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1833:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1834:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_EnableSmartcardNACK
1835:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1836:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1837:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1838:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcardNACK(USART_TypeDef *USARTx)
1839:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1840:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_NACK);
1841:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1842:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1843:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1844:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Smartcard NACK transmission
1845:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1846:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1847:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_DisableSmartcardNACK
1848:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1849:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1850:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1851:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcardNACK(USART_TypeDef *USARTx)
1852:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1853:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_NACK);
1854:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1855:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1856:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1857:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Smartcard NACK transmission is enabled
1858:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1859:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1860:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_IsEnabledSmartcardNACK
1861:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1862:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1863:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1864:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcardNACK(USART_TypeDef *USARTx)
1865:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1866:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_NACK) == (USART_CR3_NACK)) ? 1UL : 0UL);
1867:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1868:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1869:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1870:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Smartcard mode
1871:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1872:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1873:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_EnableSmartcard
1874:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1875:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1876:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1877:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcard(USART_TypeDef *USARTx)
1878:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1879:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1880:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1881:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 74


1882:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1883:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Smartcard mode
1884:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1885:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1886:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_DisableSmartcard
1887:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1888:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1889:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1890:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcard(USART_TypeDef *USARTx)
1891:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1892:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_SCEN);
1893:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1894:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1895:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1896:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Smartcard mode is enabled
1897:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1898:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1899:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_IsEnabledSmartcard
1900:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1901:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1902:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1903:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcard(USART_TypeDef *USARTx)
1904:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1905:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_SCEN) == (USART_CR3_SCEN)) ? 1UL : 0UL);
1906:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1907:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1908:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1909:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
1910:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1911:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1912:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   This bit-field specifies the number of retries in transmit and receive, in Smartcard mo
1913:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         In transmission mode, it specifies the number of automatic retransmission retries, befo
1914:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         generating a transmission error (FE bit set).
1915:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         In reception mode, it specifies the number or erroneous reception trials, before genera
1916:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         reception error (RXNE and PE bits set)
1917:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_SetSmartcardAutoRetryCount
1918:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1919:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  AutoRetryCount Value between Min_Data=0 and Max_Data=7
1920:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1921:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1922:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardAutoRetryCount(USART_TypeDef *USARTx, uint32_t AutoRetryC
1923:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1924:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_SCARCNT, AutoRetryCount << USART_CR3_SCARCNT_Pos);
1925:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1926:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1927:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1928:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Smartcard Auto-Retry Count value (SCARCNT[2:0] bits)
1929:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1930:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1931:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          SCARCNT       LL_USART_GetSmartcardAutoRetryCount
1932:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1933:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Smartcard Auto-Retry Count value (Value between Min_Data=0 and Max_Data=7)
1934:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1935:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardAutoRetryCount(USART_TypeDef *USARTx)
1936:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1937:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_SCARCNT) >> USART_CR3_SCARCNT_Pos);
1938:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 75


1939:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1940:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1941:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Smartcard prescaler value, used for dividing the USART clock
1942:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1943:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1944:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1945:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetSmartcardPrescaler
1946:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1947:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0 and Max_Data=31
1948:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1949:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1950:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1951:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1952:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, (uint16_t)USART_GTPR_PSC, (uint16_t)PrescalerValue);
1953:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1954:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1955:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1956:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Smartcard prescaler value, used for dividing the USART clock
1957:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1958:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1959:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1960:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetSmartcardPrescaler
1961:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1962:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Smartcard prescaler value (Value between Min_Data=0 and Max_Data=31)
1963:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1964:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardPrescaler(USART_TypeDef *USARTx)
1965:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1966:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1967:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1968:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1969:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1970:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set Smartcard Guard time value, expressed in nb of baud clocks periods
1971:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1972:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1973:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1974:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_SetSmartcardGuardTime
1975:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1976:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  GuardTime Value between Min_Data=0x00 and Max_Data=0xFF
1977:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
1978:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1979:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardGuardTime(USART_TypeDef *USARTx, uint32_t GuardTime)
1980:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1981:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, (uint16_t)USART_GTPR_GT, (uint16_t)(GuardTime << USART_GTPR_GT_Pos));
1982:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1983:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1984:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1985:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Smartcard Guard time value, expressed in nb of baud clocks periods
1986:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1987:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1988:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1989:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_GetSmartcardGuardTime
1990:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
1991:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Smartcard Guard time value (Value between Min_Data=0x00 and Max_Data=0xFF)
1992:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
1993:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardGuardTime(USART_TypeDef *USARTx)
1994:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
1995:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_GT) >> USART_GTPR_GT_Pos);
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 76


1996:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
1997:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
1998:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
1999:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
2000:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2001:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2002:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex f
2003:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
2004:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2005:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2006:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2007:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Single Wire Half-Duplex mode
2008:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2009:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2010:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_EnableHalfDuplex
2011:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2012:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2013:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2014:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableHalfDuplex(USART_TypeDef *USARTx)
2015:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2016:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
2017:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2018:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2019:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2020:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Single Wire Half-Duplex mode
2021:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2022:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2023:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_DisableHalfDuplex
2024:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2025:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2026:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2027:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableHalfDuplex(USART_TypeDef *USARTx)
2028:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2029:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
2030:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2031:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2032:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2033:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
2034:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2035:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2036:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_IsEnabledHalfDuplex
2037:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2038:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2039:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2040:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledHalfDuplex(USART_TypeDef *USARTx)
2041:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2042:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL)) ? 1UL : 0UL);
2043:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2044:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2045:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2046:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
2047:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2048:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2049:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_LIN Configuration functions related to LIN feature
2050:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
2051:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2052:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 77


2053:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2054:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set LIN Break Detection Length
2055:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2056:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2057:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_SetLINBrkDetectionLen
2058:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2059:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  LINBDLength This parameter can be one of the following values:
2060:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2061:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2062:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2063:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2064:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLINBrkDetectionLen(USART_TypeDef *USARTx, uint32_t LINBDLength)
2065:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2066:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBDL, LINBDLength);
2067:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2068:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2069:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2070:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return LIN Break Detection Length
2071:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2072:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2073:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_GetLINBrkDetectionLen
2074:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2075:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2076:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
2077:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
2078:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2079:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLINBrkDetectionLen(USART_TypeDef *USARTx)
2080:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2081:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBDL));
2082:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2083:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2084:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2085:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable LIN mode
2086:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2087:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2088:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_EnableLIN
2089:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2090:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2091:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2092:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableLIN(USART_TypeDef *USARTx)
2093:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2094:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
2095:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2096:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2097:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2098:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable LIN mode
2099:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2100:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2101:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_DisableLIN
2102:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2103:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2104:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2105:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableLIN(USART_TypeDef *USARTx)
2106:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2107:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LINEN);
2108:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2109:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 78


2110:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2111:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if LIN mode is enabled
2112:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2113:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2114:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_IsEnabledLIN
2115:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2116:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2117:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2118:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledLIN(USART_TypeDef *USARTx)
2119:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2120:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_LINEN) == (USART_CR2_LINEN)) ? 1UL : 0UL);
2121:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2122:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2123:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2124:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
2125:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2126:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2127:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_DE Configuration functions related to Driver Enable feature
2128:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
2129:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2130:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2131:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2132:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set DEDT (Driver Enable De-Assertion Time), Time value expressed on 5 bits ([4:0] bits)
2133:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2134:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2135:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_SetDEDeassertionTime
2136:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2137:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2138:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2139:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2140:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEDeassertionTime(USART_TypeDef *USARTx, uint32_t Time)
2141:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2142:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEDT, Time << USART_CR1_DEDT_Pos);
2143:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2144:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2145:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2146:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return DEDT (Driver Enable De-Assertion Time)
2147:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2148:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2149:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          DEDT          LL_USART_GetDEDeassertionTime
2150:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2151:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2152:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2153:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEDeassertionTime(USART_TypeDef *USARTx)
2154:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2155:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEDT) >> USART_CR1_DEDT_Pos);
2156:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2157:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2158:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2159:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Set DEAT (Driver Enable Assertion Time), Time value expressed on 5 bits ([4:0] bits).
2160:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2161:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2162:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_SetDEAssertionTime
2163:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2164:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
2165:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2166:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 79


2167:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDEAssertionTime(USART_TypeDef *USARTx, uint32_t Time)
2168:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2169:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_DEAT, Time << USART_CR1_DEAT_Pos);
2170:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2171:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2172:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2173:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return DEAT (Driver Enable Assertion Time)
2174:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2175:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2176:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          DEAT          LL_USART_GetDEAssertionTime
2177:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2178:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Value between Min_Data=0 and Max_Data=31
2179:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2180:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDEAssertionTime(USART_TypeDef *USARTx)
2181:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2182:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_DEAT) >> USART_CR1_DEAT_Pos);
2183:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2184:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2185:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2186:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Driver Enable (DE) Mode
2187:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2188:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2189:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_EnableDEMode
2190:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2191:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2192:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2193:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDEMode(USART_TypeDef *USARTx)
2194:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2195:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_DEM);
2196:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2197:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2198:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2199:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Driver Enable (DE) Mode
2200:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2201:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2202:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_DisableDEMode
2203:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2204:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2205:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2206:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDEMode(USART_TypeDef *USARTx)
2207:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2208:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_DEM);
2209:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2210:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2211:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2212:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if Driver Enable (DE) Mode is enabled
2213:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2214:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2215:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DEM           LL_USART_IsEnabledDEMode
2216:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2217:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2218:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2219:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDEMode(USART_TypeDef *USARTx)
2220:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2221:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DEM) == (USART_CR3_DEM)) ? 1UL : 0UL);
2222:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2223:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 80


2224:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2225:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Select Driver Enable Polarity
2226:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2227:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2228:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_SetDESignalPolarity
2229:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2230:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
2231:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2232:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2233:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2234:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2235:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDESignalPolarity(USART_TypeDef *USARTx, uint32_t Polarity)
2236:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2237:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_DEP, Polarity);
2238:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2239:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2240:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2241:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Return Driver Enable Polarity
2242:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_DRIVER_ENABLE_INSTANCE(USARTx) can be used to check whether or not
2243:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Driver Enable feature is supported by the USARTx instance.
2244:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DEP           LL_USART_GetDESignalPolarity
2245:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2246:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
2247:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_HIGH
2248:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DE_POLARITY_LOW
2249:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2250:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDESignalPolarity(USART_TypeDef *USARTx)
2251:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2252:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_DEP));
2253:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2254:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2255:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2256:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
2257:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2258:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2259:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_AdvancedConfiguration Advanced Configurations services
2260:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
2261:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2262:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2263:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2264:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Asynchronous Mode (UART)
2265:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   In UART mode, the following bits must be kept cleared:
2266:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2267:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2268:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2269:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2270:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2271:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2272:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2273:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2274:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2275:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2276:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2277:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Asynchronous Mode
2278:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2279:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         dedicated functions
2280:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigAsyncMode\n
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 81


2281:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigAsyncMode\n
2282:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigAsyncMode\n
2283:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigAsyncMode\n
2284:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigAsyncMode
2285:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2286:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2287:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2288:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
2289:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 424              		.loc 3 2289 1
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 8
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428 0000 80B5     		push	{r7, lr}
 429              		.cfi_def_cfa_offset 8
 430              		.cfi_offset 7, -8
 431              		.cfi_offset 14, -4
 432 0002 82B0     		sub	sp, sp, #8
 433              		.cfi_def_cfa_offset 16
 434 0004 00AF     		add	r7, sp, #0
 435              		.cfi_def_cfa_register 7
 436 0006 7860     		str	r0, [r7, #4]
2290:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* In Asynchronous mode, the following bits must be kept cleared:
2291:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - LINEN, CLKEN bits in the USART_CR2 register,
2292:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.
2293:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2294:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 437              		.loc 3 2294 3
 438 0008 7B68     		ldr	r3, [r7, #4]
 439 000a 5B68     		ldr	r3, [r3, #4]
 440 000c 074A     		ldr	r2, .L20
 441 000e 1A40     		ands	r2, r3
 442 0010 7B68     		ldr	r3, [r7, #4]
 443 0012 5A60     		str	r2, [r3, #4]
2295:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
 444              		.loc 3 2295 3
 445 0014 7B68     		ldr	r3, [r7, #4]
 446 0016 9B68     		ldr	r3, [r3, #8]
 447 0018 2A22     		movs	r2, #42
 448 001a 9343     		bics	r3, r2
 449 001c 1A00     		movs	r2, r3
 450 001e 7B68     		ldr	r3, [r7, #4]
 451 0020 9A60     		str	r2, [r3, #8]
2296:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 452              		.loc 3 2296 1
 453 0022 C046     		nop
 454 0024 BD46     		mov	sp, r7
 455 0026 02B0     		add	sp, sp, #8
 456              		@ sp needed
 457 0028 80BD     		pop	{r7, pc}
 458              	.L21:
 459 002a C046     		.align	2
 460              	.L20:
 461 002c FFB7FFFF 		.word	-18433
 462              		.cfi_endproc
 463              	.LFE1085:
 465              		.section	.text.LL_USART_IsActiveFlag_RXNE,"ax",%progbits
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 82


 466              		.align	1
 467              		.syntax unified
 468              		.code	16
 469              		.thumb_func
 470              		.fpu softvfp
 472              	LL_USART_IsActiveFlag_RXNE:
 473              	.LFB1097:
2297:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2298:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2299:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Synchronous Mode
2300:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   In Synchronous mode, the following bits must be kept cleared:
2301:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2302:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2303:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2304:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2305:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         This function also sets the USART in Synchronous mode.
2306:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_INSTANCE(USARTx) can be used to check whether or not
2307:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
2308:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2309:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2310:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2311:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2312:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2313:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
2314:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Synchronous Mode
2315:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, Clock Polarity, ...) should be set using
2316:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         dedicated functions
2317:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSyncMode\n
2318:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSyncMode\n
2319:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSyncMode\n
2320:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigSyncMode\n
2321:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSyncMode
2322:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2323:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2324:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2325:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSyncMode(USART_TypeDef *USARTx)
2326:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2327:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* In Synchronous mode, the following bits must be kept cleared:
2328:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
2329:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.
2330:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2331:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
2332:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
2333:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* set the UART/USART in Synchronous mode */
2334:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
2335:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2336:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2337:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2338:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in LIN Mode
2339:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   In LIN mode, the following bits must be kept cleared:
2340:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
2341:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2342:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2343:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2344:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         This function also set the UART/USART in LIN mode.
2345:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2346:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 83


2347:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2348:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2349:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2350:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2351:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2352:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2353:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Set LINEN in CR2 using @ref LL_USART_EnableLIN() function
2354:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Other remaining configurations items related to LIN Mode
2355:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (as Baud Rate, Word length, LIN Break Detection Length, ...) should be set using
2356:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         dedicated functions
2357:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_ConfigLINMode\n
2358:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigLINMode\n
2359:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          LINEN         LL_USART_ConfigLINMode\n
2360:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigLINMode\n
2361:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigLINMode\n
2362:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigLINMode
2363:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2364:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2365:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2366:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigLINMode(USART_TypeDef *USARTx)
2367:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2368:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* In LIN mode, the following bits must be kept cleared:
2369:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - STOP and CLKEN bits in the USART_CR2 register,
2370:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.
2371:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2372:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_CLKEN | USART_CR2_STOP));
2373:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_SCEN | USART_CR3_HDSEL));
2374:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* Set the UART/USART in LIN mode */
2375:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
2376:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2377:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2378:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2379:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Half Duplex Mode
2380:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   In Half Duplex mode, the following bits must be kept cleared:
2381:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2382:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2383:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2384:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2385:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         This function also sets the UART/USART in Half Duplex mode.
2386:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
2387:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
2388:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2389:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2390:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2391:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2392:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2393:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Set HDSEL in CR3 using @ref LL_USART_EnableHalfDuplex() function
2394:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Half Duplex Mode
2395:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2396:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         dedicated functions
2397:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigHalfDuplexMode\n
2398:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigHalfDuplexMode\n
2399:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigHalfDuplexMode\n
2400:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigHalfDuplexMode\n
2401:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigHalfDuplexMode
2402:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2403:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 84


2404:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2405:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigHalfDuplexMode(USART_TypeDef *USARTx)
2406:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2407:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* In Half Duplex mode, the following bits must be kept cleared:
2408:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
2409:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - SCEN and IREN bits in the USART_CR3 register.
2410:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2411:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
2412:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN));
2413:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* set the UART/USART in Half Duplex mode */
2414:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
2415:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2416:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2417:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2418:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Smartcard Mode
2419:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   In Smartcard mode, the following bits must be kept cleared:
2420:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2421:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2422:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2423:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         This function also configures Stop bits to 1.5 bits and
2424:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         sets the USART in Smartcard mode (SCEN bit).
2425:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Clock Output is also enabled (CLKEN).
2426:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2427:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2428:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2429:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2430:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2431:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2432:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2433:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
2434:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Set SCEN in CR3 using @ref LL_USART_EnableSmartcard() function
2435:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Smartcard Mode
2436:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
2437:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         dedicated functions
2438:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSmartcardMode\n
2439:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigSmartcardMode\n
2440:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSmartcardMode\n
2441:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSmartcardMode\n
2442:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSmartcardMode
2443:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2444:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2445:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2446:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSmartcardMode(USART_TypeDef *USARTx)
2447:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2448:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* In Smartcard mode, the following bits must be kept cleared:
2449:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
2450:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - IREN and HDSEL bits in the USART_CR3 register.
2451:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2452:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
2453:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
2454:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* Configure Stop bits to 1.5 bits */
2455:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* Synchronous mode is activated by default */
2456:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, (USART_CR2_STOP_0 | USART_CR2_STOP_1 | USART_CR2_CLKEN));
2457:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* set the UART/USART in Smartcard mode */
2458:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
2459:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2460:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 85


2461:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2462:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Irda Mode
2463:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   In IRDA mode, the following bits must be kept cleared:
2464:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2465:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
2466:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2467:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2468:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         This function also sets the UART/USART in IRDA mode (IREN bit).
2469:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
2470:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
2471:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2472:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2473:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2474:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2475:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
2476:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
2477:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Set IREN in CR3 using @ref LL_USART_EnableIrda() function
2478:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Irda Mode
2479:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (as Baud Rate, Word length, Power mode, ...) should be set using
2480:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         dedicated functions
2481:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigIrdaMode\n
2482:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigIrdaMode\n
2483:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigIrdaMode\n
2484:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigIrdaMode\n
2485:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigIrdaMode\n
2486:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigIrdaMode
2487:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2488:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2489:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2490:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigIrdaMode(USART_TypeDef *USARTx)
2491:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2492:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* In IRDA mode, the following bits must be kept cleared:
2493:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - LINEN, STOP and CLKEN bits in the USART_CR2 register,
2494:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - SCEN and HDSEL bits in the USART_CR3 register.
2495:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2496:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN | USART_CR2_STOP));
2497:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
2498:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* set the UART/USART in IRDA mode */
2499:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
2500:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2501:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2502:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2503:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Multi processor Mode
2504:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (several USARTs connected in a network, one of the USARTs can be the master,
2505:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         its TX output connected to the RX inputs of the other slaves USARTs).
2506:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   In MultiProcessor mode, the following bits must be kept cleared:
2507:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
2508:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
2509:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
2510:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
2511:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
2512:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
2513:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
2514:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
2515:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
2516:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
2517:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 86


2518:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Other remaining configurations items related to Multi processor Mode
2519:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         (as Baud Rate, Wake Up Method, Node address, ...) should be set using
2520:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         dedicated functions
2521:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigMultiProcessMode\n
2522:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigMultiProcessMode\n
2523:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigMultiProcessMode\n
2524:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigMultiProcessMode\n
2525:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigMultiProcessMode
2526:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2527:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2528:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2529:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigMultiProcessMode(USART_TypeDef *USARTx)
2530:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2531:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   /* In Multi Processor mode, the following bits must be kept cleared:
2532:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
2533:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.
2534:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2535:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
2536:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
2537:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2538:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2539:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2540:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
2541:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2542:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2543:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_FLAG_Management FLAG_Management
2544:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
2545:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2546:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2547:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2548:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Flag is set or not
2549:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          PE            LL_USART_IsActiveFlag_PE
2550:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2551:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2552:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2553:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_PE(USART_TypeDef *USARTx)
2554:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2555:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_PE) == (USART_ISR_PE)) ? 1UL : 0UL);
2556:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2557:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2558:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2559:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Framing Error Flag is set or not
2560:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          FE            LL_USART_IsActiveFlag_FE
2561:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2562:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2563:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2564:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_FE(USART_TypeDef *USARTx)
2565:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2566:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_FE) == (USART_ISR_FE)) ? 1UL : 0UL);
2567:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2568:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2569:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2570:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Noise error detected Flag is set or not
2571:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          NE            LL_USART_IsActiveFlag_NE
2572:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2573:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2574:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 87


2575:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_NE(USART_TypeDef *USARTx)
2576:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2577:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_NE) == (USART_ISR_NE)) ? 1UL : 0UL);
2578:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2579:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2580:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2581:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART OverRun Error Flag is set or not
2582:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          ORE           LL_USART_IsActiveFlag_ORE
2583:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2584:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2585:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2586:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ORE(USART_TypeDef *USARTx)
2587:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2588:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ORE) == (USART_ISR_ORE)) ? 1UL : 0UL);
2589:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2590:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2591:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2592:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART IDLE line detected Flag is set or not
2593:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          IDLE          LL_USART_IsActiveFlag_IDLE
2594:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2595:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2596:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2597:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_IDLE(USART_TypeDef *USARTx)
2598:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2599:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_IDLE) == (USART_ISR_IDLE)) ? 1UL : 0UL);
2600:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2601:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2602:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2603:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Read Data Register Not Empty Flag is set or not
2604:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          RXNE          LL_USART_IsActiveFlag_RXNE
2605:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2606:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2607:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2608:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE(USART_TypeDef *USARTx)
2609:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 474              		.loc 3 2609 1
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 8
 477              		@ frame_needed = 1, uses_anonymous_args = 0
 478 0000 80B5     		push	{r7, lr}
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 7, -8
 481              		.cfi_offset 14, -4
 482 0002 82B0     		sub	sp, sp, #8
 483              		.cfi_def_cfa_offset 16
 484 0004 00AF     		add	r7, sp, #0
 485              		.cfi_def_cfa_register 7
 486 0006 7860     		str	r0, [r7, #4]
2610:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RXNE) == (USART_ISR_RXNE)) ? 1UL : 0UL);
 487              		.loc 3 2610 12
 488 0008 7B68     		ldr	r3, [r7, #4]
 489 000a DB69     		ldr	r3, [r3, #28]
 490 000c 2022     		movs	r2, #32
 491 000e 1340     		ands	r3, r2
 492              		.loc 3 2610 77
 493 0010 202B     		cmp	r3, #32
 494 0012 01D1     		bne	.L23
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 88


 495              		.loc 3 2610 77 is_stmt 0 discriminator 1
 496 0014 0123     		movs	r3, #1
 497 0016 00E0     		b	.L25
 498              	.L23:
 499              		.loc 3 2610 77 discriminator 2
 500 0018 0023     		movs	r3, #0
 501              	.L25:
2611:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 502              		.loc 3 2611 1 is_stmt 1 discriminator 5
 503 001a 1800     		movs	r0, r3
 504 001c BD46     		mov	sp, r7
 505 001e 02B0     		add	sp, sp, #8
 506              		@ sp needed
 507 0020 80BD     		pop	{r7, pc}
 508              		.cfi_endproc
 509              	.LFE1097:
 511              		.section	.text.LL_USART_IsActiveFlag_TC,"ax",%progbits
 512              		.align	1
 513              		.syntax unified
 514              		.code	16
 515              		.thumb_func
 516              		.fpu softvfp
 518              	LL_USART_IsActiveFlag_TC:
 519              	.LFB1098:
2612:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2613:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2614:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Transmission Complete Flag is set or not
2615:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          TC            LL_USART_IsActiveFlag_TC
2616:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2617:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2618:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2619:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TC(USART_TypeDef *USARTx)
2620:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 520              		.loc 3 2620 1
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 8
 523              		@ frame_needed = 1, uses_anonymous_args = 0
 524 0000 80B5     		push	{r7, lr}
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 7, -8
 527              		.cfi_offset 14, -4
 528 0002 82B0     		sub	sp, sp, #8
 529              		.cfi_def_cfa_offset 16
 530 0004 00AF     		add	r7, sp, #0
 531              		.cfi_def_cfa_register 7
 532 0006 7860     		str	r0, [r7, #4]
2621:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TC) == (USART_ISR_TC)) ? 1UL : 0UL);
 533              		.loc 3 2621 12
 534 0008 7B68     		ldr	r3, [r7, #4]
 535 000a DB69     		ldr	r3, [r3, #28]
 536 000c 4022     		movs	r2, #64
 537 000e 1340     		ands	r3, r2
 538              		.loc 3 2621 73
 539 0010 402B     		cmp	r3, #64
 540 0012 01D1     		bne	.L27
 541              		.loc 3 2621 73 is_stmt 0 discriminator 1
 542 0014 0123     		movs	r3, #1
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 89


 543 0016 00E0     		b	.L29
 544              	.L27:
 545              		.loc 3 2621 73 discriminator 2
 546 0018 0023     		movs	r3, #0
 547              	.L29:
2622:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 548              		.loc 3 2622 1 is_stmt 1 discriminator 5
 549 001a 1800     		movs	r0, r3
 550 001c BD46     		mov	sp, r7
 551 001e 02B0     		add	sp, sp, #8
 552              		@ sp needed
 553 0020 80BD     		pop	{r7, pc}
 554              		.cfi_endproc
 555              	.LFE1098:
 557              		.section	.text.LL_USART_ClearFlag_NE,"ax",%progbits
 558              		.align	1
 559              		.syntax unified
 560              		.code	16
 561              		.thumb_func
 562              		.fpu softvfp
 564              	LL_USART_ClearFlag_NE:
 565              	.LFB1116:
2623:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2624:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2625:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Transmit Data Register Empty Flag is set or not
2626:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          TXE           LL_USART_IsActiveFlag_TXE
2627:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2628:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2629:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2630:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXE(USART_TypeDef *USARTx)
2631:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2632:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TXE) == (USART_ISR_TXE)) ? 1UL : 0UL);
2633:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2634:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2635:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2636:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART LIN Break Detection Flag is set or not
2637:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2638:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2639:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          LBDF          LL_USART_IsActiveFlag_LBD
2640:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2641:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2642:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2643:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_LBD(USART_TypeDef *USARTx)
2644:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2645:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_LBDF) == (USART_ISR_LBDF)) ? 1UL : 0UL);
2646:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2647:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2648:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2649:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART CTS interrupt Flag is set or not
2650:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
2651:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
2652:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          CTSIF         LL_USART_IsActiveFlag_nCTS
2653:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2654:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2655:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2656:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_nCTS(USART_TypeDef *USARTx)
2657:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 90


2658:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CTSIF) == (USART_ISR_CTSIF)) ? 1UL : 0UL);
2659:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2660:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2661:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2662:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART CTS Flag is set or not
2663:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
2664:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
2665:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          CTS           LL_USART_IsActiveFlag_CTS
2666:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2667:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2668:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2669:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_CTS(USART_TypeDef *USARTx)
2670:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2671:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CTS) == (USART_ISR_CTS)) ? 1UL : 0UL);
2672:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2673:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2674:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2675:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Receiver Time Out Flag is set or not
2676:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          RTOF          LL_USART_IsActiveFlag_RTO
2677:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2678:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2679:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2680:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RTO(USART_TypeDef *USARTx)
2681:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2682:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RTOF) == (USART_ISR_RTOF)) ? 1UL : 0UL);
2683:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2684:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2685:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2686:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART End Of Block Flag is set or not
2687:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2688:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2689:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          EOBF          LL_USART_IsActiveFlag_EOB
2690:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2691:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2692:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2693:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_EOB(USART_TypeDef *USARTx)
2694:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2695:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_EOBF) == (USART_ISR_EOBF)) ? 1UL : 0UL);
2696:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2697:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2698:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2699:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Auto-Baud Rate Error Flag is set or not
2700:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
2701:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
2702:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          ABRE          LL_USART_IsActiveFlag_ABRE
2703:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2704:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2705:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2706:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ABRE(USART_TypeDef *USARTx)
2707:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2708:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ABRE) == (USART_ISR_ABRE)) ? 1UL : 0UL);
2709:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2710:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2711:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2712:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Auto-Baud Rate Flag is set or not
2713:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whether or 
2714:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 91


2715:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          ABRF          LL_USART_IsActiveFlag_ABR
2716:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2717:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2718:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2719:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ABR(USART_TypeDef *USARTx)
2720:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2721:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_ABRF) == (USART_ISR_ABRF)) ? 1UL : 0UL);
2722:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2723:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2724:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2725:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Busy Flag is set or not
2726:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          BUSY          LL_USART_IsActiveFlag_BUSY
2727:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2728:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2729:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2730:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_BUSY(USART_TypeDef *USARTx)
2731:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2732:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_BUSY) == (USART_ISR_BUSY)) ? 1UL : 0UL);
2733:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2734:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2735:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2736:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Character Match Flag is set or not
2737:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          CMF           LL_USART_IsActiveFlag_CM
2738:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2739:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2740:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2741:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_CM(USART_TypeDef *USARTx)
2742:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2743:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_CMF) == (USART_ISR_CMF)) ? 1UL : 0UL);
2744:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2745:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2746:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2747:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Send Break Flag is set or not
2748:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          SBKF          LL_USART_IsActiveFlag_SBK
2749:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2750:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2751:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2752:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_SBK(USART_TypeDef *USARTx)
2753:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2754:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_SBKF) == (USART_ISR_SBKF)) ? 1UL : 0UL);
2755:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2756:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2757:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2758:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Receive Wake Up from mute mode Flag is set or not
2759:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          RWU           LL_USART_IsActiveFlag_RWU
2760:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2761:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2762:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2763:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RWU(USART_TypeDef *USARTx)
2764:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2765:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_RWU) == (USART_ISR_RWU)) ? 1UL : 0UL);
2766:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2767:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2768:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2769:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Wake Up from stop mode Flag is set or not
2770:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
2771:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 92


2772:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          WUF           LL_USART_IsActiveFlag_WKUP
2773:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2774:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2775:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2776:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_WKUP(USART_TypeDef *USARTx)
2777:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2778:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_WUF) == (USART_ISR_WUF)) ? 1UL : 0UL);
2779:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2780:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2781:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2782:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Transmit Enable Acknowledge Flag is set or not
2783:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          TEACK         LL_USART_IsActiveFlag_TEACK
2784:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2785:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2786:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2787:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TEACK(USART_TypeDef *USARTx)
2788:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2789:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
2790:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2791:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2792:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2793:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Receive Enable Acknowledge Flag is set or not
2794:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          REACK         LL_USART_IsActiveFlag_REACK
2795:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2796:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2797:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2798:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_REACK(USART_TypeDef *USARTx)
2799:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2800:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_REACK) == (USART_ISR_REACK)) ? 1UL : 0UL);
2801:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2802:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2803:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
2804:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Function available only on devices supporting Transmit Complete before Guard Time feature */
2805:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2806:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the Smartcard Transmission Complete Before Guard Time Flag is set or not
2807:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ISR          TCBGT         LL_USART_IsActiveFlag_TCBGT
2808:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2809:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
2810:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2811:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TCBGT(USART_TypeDef *USARTx)
2812:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2813:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->ISR, USART_ISR_TCBGT) == (USART_ISR_TCBGT)) ? 1UL : 0UL);
2814:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2815:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2816:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
2817:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2818:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Clear Parity Error Flag
2819:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ICR          PECF          LL_USART_ClearFlag_PE
2820:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2821:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2822:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2823:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_PE(USART_TypeDef *USARTx)
2824:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2825:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_PECF);
2826:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2827:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2828:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 93


2829:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Clear Framing Error Flag
2830:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ICR          FECF          LL_USART_ClearFlag_FE
2831:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2832:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2833:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2834:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_FE(USART_TypeDef *USARTx)
2835:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2836:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_FECF);
2837:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2838:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2839:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2840:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Clear Noise Error detected Flag
2841:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ICR          NCF           LL_USART_ClearFlag_NE
2842:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2843:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2844:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2845:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_NE(USART_TypeDef *USARTx)
2846:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 566              		.loc 3 2846 1
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 8
 569              		@ frame_needed = 1, uses_anonymous_args = 0
 570 0000 80B5     		push	{r7, lr}
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 7, -8
 573              		.cfi_offset 14, -4
 574 0002 82B0     		sub	sp, sp, #8
 575              		.cfi_def_cfa_offset 16
 576 0004 00AF     		add	r7, sp, #0
 577              		.cfi_def_cfa_register 7
 578 0006 7860     		str	r0, [r7, #4]
2847:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_NCF);
 579              		.loc 3 2847 3
 580 0008 7B68     		ldr	r3, [r7, #4]
 581 000a 0422     		movs	r2, #4
 582 000c 1A62     		str	r2, [r3, #32]
2848:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 583              		.loc 3 2848 1
 584 000e C046     		nop
 585 0010 BD46     		mov	sp, r7
 586 0012 02B0     		add	sp, sp, #8
 587              		@ sp needed
 588 0014 80BD     		pop	{r7, pc}
 589              		.cfi_endproc
 590              	.LFE1116:
 592              		.section	.text.LL_USART_ClearFlag_TC,"ax",%progbits
 593              		.align	1
 594              		.syntax unified
 595              		.code	16
 596              		.thumb_func
 597              		.fpu softvfp
 599              	LL_USART_ClearFlag_TC:
 600              	.LFB1119:
2849:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2850:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2851:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Clear OverRun Error Flag
2852:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ICR          ORECF         LL_USART_ClearFlag_ORE
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 94


2853:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2854:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2855:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2856:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_ORE(USART_TypeDef *USARTx)
2857:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2858:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_ORECF);
2859:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2860:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2861:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2862:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Clear IDLE line detected Flag
2863:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ICR          IDLECF        LL_USART_ClearFlag_IDLE
2864:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2865:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2866:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2867:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_IDLE(USART_TypeDef *USARTx)
2868:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2869:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_IDLECF);
2870:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2871:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2872:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2873:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Clear Transmission Complete Flag
2874:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ICR          TCCF          LL_USART_ClearFlag_TC
2875:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2876:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2877:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2878:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_TC(USART_TypeDef *USARTx)
2879:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 601              		.loc 3 2879 1
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 8
 604              		@ frame_needed = 1, uses_anonymous_args = 0
 605 0000 80B5     		push	{r7, lr}
 606              		.cfi_def_cfa_offset 8
 607              		.cfi_offset 7, -8
 608              		.cfi_offset 14, -4
 609 0002 82B0     		sub	sp, sp, #8
 610              		.cfi_def_cfa_offset 16
 611 0004 00AF     		add	r7, sp, #0
 612              		.cfi_def_cfa_register 7
 613 0006 7860     		str	r0, [r7, #4]
2880:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_TCCF);
 614              		.loc 3 2880 3
 615 0008 7B68     		ldr	r3, [r7, #4]
 616 000a 4022     		movs	r2, #64
 617 000c 1A62     		str	r2, [r3, #32]
2881:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 618              		.loc 3 2881 1
 619 000e C046     		nop
 620 0010 BD46     		mov	sp, r7
 621 0012 02B0     		add	sp, sp, #8
 622              		@ sp needed
 623 0014 80BD     		pop	{r7, pc}
 624              		.cfi_endproc
 625              	.LFE1119:
 627              		.section	.text.LL_USART_EnableIT_RXNE,"ax",%progbits
 628              		.align	1
 629              		.syntax unified
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 95


 630              		.code	16
 631              		.thumb_func
 632              		.fpu softvfp
 634              	LL_USART_EnableIT_RXNE:
 635              	.LFB1127:
2882:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2883:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
2884:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Function available only on devices supporting Transmit Complete before Guard Time feature */
2885:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2886:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Clear Smartcard Transmission Complete Before Guard Time Flag
2887:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ICR          TCBGTCF       LL_USART_ClearFlag_TCBGT
2888:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2889:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2890:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2891:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_TCBGT(USART_TypeDef *USARTx)
2892:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2893:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_TCBGTCF);
2894:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2895:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
2896:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2897:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2898:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Clear LIN Break Detection Flag
2899:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
2900:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
2901:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ICR          LBDCF         LL_USART_ClearFlag_LBD
2902:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2903:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2904:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2905:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_LBD(USART_TypeDef *USARTx)
2906:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2907:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_LBDCF);
2908:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2909:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2910:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2911:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Clear CTS Interrupt Flag
2912:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
2913:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
2914:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ICR          CTSCF         LL_USART_ClearFlag_nCTS
2915:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2916:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2917:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2918:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_nCTS(USART_TypeDef *USARTx)
2919:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2920:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_CTSCF);
2921:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2922:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2923:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2924:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Clear Receiver Time Out Flag
2925:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ICR          RTOCF         LL_USART_ClearFlag_RTO
2926:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2927:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2928:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2929:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_RTO(USART_TypeDef *USARTx)
2930:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2931:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_RTOCF);
2932:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2933:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 96


2934:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2935:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Clear End Of Block Flag
2936:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
2937:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
2938:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ICR          EOBCF         LL_USART_ClearFlag_EOB
2939:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2940:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2941:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2942:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_EOB(USART_TypeDef *USARTx)
2943:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2944:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_EOBCF);
2945:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2946:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2947:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2948:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Clear Character Match Flag
2949:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ICR          CMCF          LL_USART_ClearFlag_CM
2950:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2951:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2952:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2953:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_CM(USART_TypeDef *USARTx)
2954:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2955:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_CMCF);
2956:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2957:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2958:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2959:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Clear Wake Up from stop mode Flag
2960:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
2961:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
2962:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll ICR          WUCF          LL_USART_ClearFlag_WKUP
2963:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2964:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2965:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2966:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_WKUP(USART_TypeDef *USARTx)
2967:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2968:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   WRITE_REG(USARTx->ICR, USART_ICR_WUCF);
2969:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2970:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2971:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2972:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
2973:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2974:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2975:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_IT_Management IT_Management
2976:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
2977:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2978:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2979:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
2980:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable IDLE Interrupt
2981:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_EnableIT_IDLE
2982:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2983:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2984:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2985:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_IDLE(USART_TypeDef *USARTx)
2986:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
2987:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_IDLEIE);
2988:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
2989:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
2990:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 97


2991:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable RX Not Empty Interrupt
2992:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_EnableIT_RXNE
2993:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
2994:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
2995:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
2996:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RXNE(USART_TypeDef *USARTx)
2997:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 636              		.loc 3 2997 1
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 24
 639              		@ frame_needed = 1, uses_anonymous_args = 0
 640 0000 80B5     		push	{r7, lr}
 641              		.cfi_def_cfa_offset 8
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 86B0     		sub	sp, sp, #24
 645              		.cfi_def_cfa_offset 32
 646 0004 00AF     		add	r7, sp, #0
 647              		.cfi_def_cfa_register 7
 648 0006 7860     		str	r0, [r7, #4]
 649              	.LBB34:
 650              	.LBB35:
 651              	.LBB36:
 652              		.file 4 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 98


  34:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 99


  91:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 100


 148:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 101


 205:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 102


 262:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 103


 319:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 104


 376:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 653              		.loc 4 386 3
 654              		.syntax divided
 655              	@ 386 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 656 0008 EFF31083 		MRS r3, primask
 657              	@ 0 "" 2
 658              		.thumb
 659              		.syntax unified
 660 000c BB60     		str	r3, [r7, #8]
 387:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 661              		.loc 4 387 9
 662 000e BB68     		ldr	r3, [r7, #8]
 663              	.LBE36:
 664              	.LBE35:
2998:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RXNEIE);
 665              		.loc 3 2998 3
 666 0010 7B61     		str	r3, [r7, #20]
 667 0012 0123     		movs	r3, #1
 668 0014 FB60     		str	r3, [r7, #12]
 669              	.LBB37:
 670              	.LBB38:
 388:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 105


 414:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 671              		.loc 4 414 3
 672 0016 FB68     		ldr	r3, [r7, #12]
 673              		.syntax divided
 674              	@ 414 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 675 0018 83F31088 		MSR primask, r3
 676              	@ 0 "" 2
 415:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 677              		.loc 4 415 1
 678              		.thumb
 679              		.syntax unified
 680 001c C046     		nop
 681              	.LBE38:
 682              	.LBE37:
 683              		.loc 3 2998 3
 684 001e 7B68     		ldr	r3, [r7, #4]
 685 0020 1B68     		ldr	r3, [r3]
 686 0022 2022     		movs	r2, #32
 687 0024 1A43     		orrs	r2, r3
 688 0026 7B68     		ldr	r3, [r7, #4]
 689 0028 1A60     		str	r2, [r3]
 690 002a 7B69     		ldr	r3, [r7, #20]
 691 002c 3B61     		str	r3, [r7, #16]
 692              	.LBB39:
 693              	.LBB40:
 414:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 694              		.loc 4 414 3
 695 002e 3B69     		ldr	r3, [r7, #16]
 696              		.syntax divided
 697              	@ 414 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 698 0030 83F31088 		MSR primask, r3
 699              	@ 0 "" 2
 700              		.loc 4 415 1
 701              		.thumb
 702              		.syntax unified
 703 0034 C046     		nop
 704              	.LBE40:
 705              	.LBE39:
 706              	.LBE34:
2999:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 707              		.loc 3 2999 1
 708 0036 C046     		nop
 709 0038 BD46     		mov	sp, r7
 710 003a 06B0     		add	sp, sp, #24
 711              		@ sp needed
 712 003c 80BD     		pop	{r7, pc}
 713              		.cfi_endproc
 714              	.LFE1127:
 716              		.section	.text.LL_USART_EnableIT_TC,"ax",%progbits
 717              		.align	1
 718              		.syntax unified
 719              		.code	16
 720              		.thumb_func
 721              		.fpu softvfp
 723              	LL_USART_EnableIT_TC:
 724              	.LFB1128:
3000:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 106


3001:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3002:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Transmission Complete Interrupt
3003:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          TCIE          LL_USART_EnableIT_TC
3004:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3005:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3006:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3007:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TC(USART_TypeDef *USARTx)
3008:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 725              		.loc 3 3008 1
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 24
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729 0000 80B5     		push	{r7, lr}
 730              		.cfi_def_cfa_offset 8
 731              		.cfi_offset 7, -8
 732              		.cfi_offset 14, -4
 733 0002 86B0     		sub	sp, sp, #24
 734              		.cfi_def_cfa_offset 32
 735 0004 00AF     		add	r7, sp, #0
 736              		.cfi_def_cfa_register 7
 737 0006 7860     		str	r0, [r7, #4]
 738              	.LBB41:
 739              	.LBB42:
 740              	.LBB43:
 386:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 741              		.loc 4 386 3
 742              		.syntax divided
 743              	@ 386 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 744 0008 EFF31083 		MRS r3, primask
 745              	@ 0 "" 2
 746              		.thumb
 747              		.syntax unified
 748 000c BB60     		str	r3, [r7, #8]
 387:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 749              		.loc 4 387 9
 750 000e BB68     		ldr	r3, [r7, #8]
 751              	.LBE43:
 752              	.LBE42:
3009:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TCIE);
 753              		.loc 3 3009 3
 754 0010 7B61     		str	r3, [r7, #20]
 755 0012 0123     		movs	r3, #1
 756 0014 FB60     		str	r3, [r7, #12]
 757              	.LBB44:
 758              	.LBB45:
 414:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 759              		.loc 4 414 3
 760 0016 FB68     		ldr	r3, [r7, #12]
 761              		.syntax divided
 762              	@ 414 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 763 0018 83F31088 		MSR primask, r3
 764              	@ 0 "" 2
 765              		.loc 4 415 1
 766              		.thumb
 767              		.syntax unified
 768 001c C046     		nop
 769              	.LBE45:
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 107


 770              	.LBE44:
 771              		.loc 3 3009 3
 772 001e 7B68     		ldr	r3, [r7, #4]
 773 0020 1B68     		ldr	r3, [r3]
 774 0022 4022     		movs	r2, #64
 775 0024 1A43     		orrs	r2, r3
 776 0026 7B68     		ldr	r3, [r7, #4]
 777 0028 1A60     		str	r2, [r3]
 778 002a 7B69     		ldr	r3, [r7, #20]
 779 002c 3B61     		str	r3, [r7, #16]
 780              	.LBB46:
 781              	.LBB47:
 414:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 782              		.loc 4 414 3
 783 002e 3B69     		ldr	r3, [r7, #16]
 784              		.syntax divided
 785              	@ 414 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 786 0030 83F31088 		MSR primask, r3
 787              	@ 0 "" 2
 788              		.loc 4 415 1
 789              		.thumb
 790              		.syntax unified
 791 0034 C046     		nop
 792              	.LBE47:
 793              	.LBE46:
 794              	.LBE41:
3010:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 795              		.loc 3 3010 1
 796 0036 C046     		nop
 797 0038 BD46     		mov	sp, r7
 798 003a 06B0     		add	sp, sp, #24
 799              		@ sp needed
 800 003c 80BD     		pop	{r7, pc}
 801              		.cfi_endproc
 802              	.LFE1128:
 804              		.section	.text.LL_USART_ReceiveData8,"ax",%progbits
 805              		.align	1
 806              		.syntax unified
 807              		.code	16
 808              		.thumb_func
 809              		.fpu softvfp
 811              	LL_USART_ReceiveData8:
 812              	.LFB1172:
3011:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3012:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3013:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable TX Empty Interrupt
3014:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          TXEIE         LL_USART_EnableIT_TXE
3015:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3016:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3017:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3018:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TXE(USART_TypeDef *USARTx)
3019:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3020:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_TXEIE);
3021:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3022:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3023:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3024:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Parity Error Interrupt
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 108


3025:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          PEIE          LL_USART_EnableIT_PE
3026:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3027:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3028:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3029:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_PE(USART_TypeDef *USARTx)
3030:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3031:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_PEIE);
3032:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3033:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3034:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3035:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Character Match Interrupt
3036:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          CMIE          LL_USART_EnableIT_CM
3037:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3038:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3039:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3040:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_CM(USART_TypeDef *USARTx)
3041:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3042:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_CMIE);
3043:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3044:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3045:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3046:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Receiver Timeout Interrupt
3047:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          RTOIE         LL_USART_EnableIT_RTO
3048:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3049:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3050:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3051:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_RTO(USART_TypeDef *USARTx)
3052:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3053:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RTOIE);
3054:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3055:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3056:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3057:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable End Of Block Interrupt
3058:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3059:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3060:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          EOBIE         LL_USART_EnableIT_EOB
3061:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3062:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3063:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3064:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_EOB(USART_TypeDef *USARTx)
3065:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3066:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_EOBIE);
3067:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3068:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3069:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3070:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable LIN Break Detection Interrupt
3071:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3072:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3073:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LBDIE         LL_USART_EnableIT_LBD
3074:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3075:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3076:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3077:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_LBD(USART_TypeDef *USARTx)
3078:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3079:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LBDIE);
3080:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3081:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 109


3082:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3083:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Error Interrupt
3084:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   When set, Error Interrupt Enable Bit is enabling interrupt generation in case of a fram
3085:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         error, overrun error or noise flag (FE=1 or ORE=1 or NF=1 in the USARTx_ISR register).
3086:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           0: Interrupt is inhibited
3087:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           1: An interrupt is generated when FE=1 or ORE=1 or NF=1 in the USARTx_ISR register.
3088:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          EIE           LL_USART_EnableIT_ERROR
3089:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3090:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3091:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3092:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_ERROR(USART_TypeDef *USARTx)
3093:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3094:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_EIE);
3095:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3096:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3097:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3098:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable CTS Interrupt
3099:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3100:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3101:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          CTSIE         LL_USART_EnableIT_CTS
3102:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3103:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3104:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3105:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_CTS(USART_TypeDef *USARTx)
3106:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3107:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_CTSIE);
3108:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3109:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3110:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3111:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Wake Up from Stop Mode Interrupt
3112:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3113:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3114:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          WUFIE         LL_USART_EnableIT_WKUP
3115:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3116:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3117:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3118:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_WKUP(USART_TypeDef *USARTx)
3119:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3120:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_WUFIE);
3121:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3122:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3123:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
3124:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Function available only on devices supporting Transmit Complete before Guard Time feature */
3125:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3126:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable Smartcard Transmission Complete Before Guard Time Interrupt
3127:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3128:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3129:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          TCBGTIE       LL_USART_EnableIT_TCBGT
3130:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3131:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3132:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3133:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIT_TCBGT(USART_TypeDef *USARTx)
3134:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3135:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_TCBGTIE);
3136:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3137:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
3138:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 110


3139:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3140:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable IDLE Interrupt
3141:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_DisableIT_IDLE
3142:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3143:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3144:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3145:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_IDLE(USART_TypeDef *USARTx)
3146:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3147:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_IDLEIE);
3148:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3149:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3150:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3151:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable RX Not Empty Interrupt
3152:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_DisableIT_RXNE
3153:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3154:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3155:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3156:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_RXNE(USART_TypeDef *USARTx)
3157:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3158:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RXNEIE);
3159:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3160:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3161:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3162:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Transmission Complete Interrupt
3163:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          TCIE          LL_USART_DisableIT_TC
3164:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3165:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3166:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3167:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TC(USART_TypeDef *USARTx)
3168:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3169:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TCIE);
3170:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3171:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3172:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3173:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable TX Empty Interrupt
3174:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          TXEIE         LL_USART_DisableIT_TXE
3175:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3176:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3177:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3178:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TXE(USART_TypeDef *USARTx)
3179:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3180:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_TXEIE);
3181:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3182:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3183:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3184:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Parity Error Interrupt
3185:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          PEIE          LL_USART_DisableIT_PE
3186:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3187:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3188:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3189:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_PE(USART_TypeDef *USARTx)
3190:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3191:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_PEIE);
3192:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3193:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3194:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3195:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Character Match Interrupt
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 111


3196:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          CMIE          LL_USART_DisableIT_CM
3197:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3198:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3199:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3200:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_CM(USART_TypeDef *USARTx)
3201:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3202:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_CMIE);
3203:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3204:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3205:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3206:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Receiver Timeout Interrupt
3207:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          RTOIE         LL_USART_DisableIT_RTO
3208:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3209:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3210:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3211:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_RTO(USART_TypeDef *USARTx)
3212:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3213:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_RTOIE);
3214:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3215:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3216:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3217:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable End Of Block Interrupt
3218:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3219:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3220:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          EOBIE         LL_USART_DisableIT_EOB
3221:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3222:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3223:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3224:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_EOB(USART_TypeDef *USARTx)
3225:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3226:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR1, USART_CR1_EOBIE);
3227:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3228:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3229:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3230:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable LIN Break Detection Interrupt
3231:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3232:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3233:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LBDIE         LL_USART_DisableIT_LBD
3234:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3235:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3236:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3237:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_LBD(USART_TypeDef *USARTx)
3238:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3239:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LBDIE);
3240:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3241:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3242:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3243:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Error Interrupt
3244:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   When set, Error Interrupt Enable Bit is enabling interrupt generation in case of a fram
3245:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         error, overrun error or noise flag (FE=1 or ORE=1 or NF=1 in the USARTx_ISR register).
3246:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           0: Interrupt is inhibited
3247:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *           1: An interrupt is generated when FE=1 or ORE=1 or NF=1 in the USARTx_ISR register.
3248:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          EIE           LL_USART_DisableIT_ERROR
3249:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3250:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3251:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3252:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_ERROR(USART_TypeDef *USARTx)
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 112


3253:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3254:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_EIE);
3255:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3256:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3257:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3258:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable CTS Interrupt
3259:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3260:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3261:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          CTSIE         LL_USART_DisableIT_CTS
3262:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3263:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3264:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3265:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_CTS(USART_TypeDef *USARTx)
3266:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3267:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_CTSIE);
3268:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3269:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3270:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3271:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Wake Up from Stop Mode Interrupt
3272:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3273:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3274:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          WUFIE         LL_USART_DisableIT_WKUP
3275:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3276:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3277:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3278:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_WKUP(USART_TypeDef *USARTx)
3279:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3280:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_WUFIE);
3281:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3282:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3283:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
3284:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Function available only on devices supporting Transmit Complete before Guard Time feature */
3285:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3286:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable Smartcard Transmission Complete Before Guard Time Interrupt
3287:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3288:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3289:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          TCBGTIE       LL_USART_DisableIT_TCBGT
3290:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3291:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3292:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3293:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIT_TCBGT(USART_TypeDef *USARTx)
3294:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3295:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_TCBGTIE);
3296:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3297:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
3298:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3299:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3300:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART IDLE Interrupt  source is enabled or disabled.
3301:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          IDLEIE        LL_USART_IsEnabledIT_IDLE
3302:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3303:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3304:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3305:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_IDLE(USART_TypeDef *USARTx)
3306:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3307:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_IDLEIE) == (USART_CR1_IDLEIE)) ? 1UL : 0UL);
3308:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3309:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 113


3310:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3311:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART RX Not Empty Interrupt is enabled or disabled.
3312:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          RXNEIE        LL_USART_IsEnabledIT_RXNE
3313:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3314:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3315:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3316:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_RXNE(USART_TypeDef *USARTx)
3317:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3318:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_RXNEIE) == (USART_CR1_RXNEIE)) ? 1U : 0U);
3319:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3320:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3321:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3322:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Transmission Complete Interrupt is enabled or disabled.
3323:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          TCIE          LL_USART_IsEnabledIT_TC
3324:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3325:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3326:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3327:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_TC(USART_TypeDef *USARTx)
3328:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3329:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_TCIE) == (USART_CR1_TCIE)) ? 1UL : 0UL);
3330:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3331:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3332:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3333:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART TX Empty Interrupt is enabled or disabled.
3334:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          TXEIE         LL_USART_IsEnabledIT_TXE
3335:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3336:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3337:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3338:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_TXE(USART_TypeDef *USARTx)
3339:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3340:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_TXEIE) == (USART_CR1_TXEIE)) ? 1U : 0U);
3341:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3342:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3343:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3344:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Interrupt is enabled or disabled.
3345:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          PEIE          LL_USART_IsEnabledIT_PE
3346:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3347:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3348:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3349:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_PE(USART_TypeDef *USARTx)
3350:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3351:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_PEIE) == (USART_CR1_PEIE)) ? 1UL : 0UL);
3352:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3353:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3354:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3355:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Character Match Interrupt is enabled or disabled.
3356:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          CMIE          LL_USART_IsEnabledIT_CM
3357:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3358:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3359:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3360:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_CM(USART_TypeDef *USARTx)
3361:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3362:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_CMIE) == (USART_CR1_CMIE)) ? 1UL : 0UL);
3363:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3364:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3365:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3366:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Receiver Timeout Interrupt is enabled or disabled.
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 114


3367:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          RTOIE         LL_USART_IsEnabledIT_RTO
3368:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3369:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3370:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3371:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_RTO(USART_TypeDef *USARTx)
3372:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3373:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_RTOIE) == (USART_CR1_RTOIE)) ? 1UL : 0UL);
3374:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3375:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3376:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3377:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART End Of Block Interrupt is enabled or disabled.
3378:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3379:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3380:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR1          EOBIE         LL_USART_IsEnabledIT_EOB
3381:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3382:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3383:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3384:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_EOB(USART_TypeDef *USARTx)
3385:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3386:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_EOBIE) == (USART_CR1_EOBIE)) ? 1UL : 0UL);
3387:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3388:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3389:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3390:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART LIN Break Detection Interrupt is enabled or disabled.
3391:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
3392:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
3393:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR2          LBDIE         LL_USART_IsEnabledIT_LBD
3394:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3395:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3396:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3397:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_LBD(USART_TypeDef *USARTx)
3398:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3399:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_LBDIE) == (USART_CR2_LBDIE)) ? 1UL : 0UL);
3400:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3401:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3402:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3403:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Error Interrupt is enabled or disabled.
3404:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          EIE           LL_USART_IsEnabledIT_ERROR
3405:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3406:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3407:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3408:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_ERROR(USART_TypeDef *USARTx)
3409:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3410:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_EIE) == (USART_CR3_EIE)) ? 1UL : 0UL);
3411:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3412:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3413:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3414:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART CTS Interrupt is enabled or disabled.
3415:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
3416:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
3417:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          CTSIE         LL_USART_IsEnabledIT_CTS
3418:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3419:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3420:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3421:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_CTS(USART_TypeDef *USARTx)
3422:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3423:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_CTSIE) == (USART_CR3_CTSIE)) ? 1UL : 0UL);
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 115


3424:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3425:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3426:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3427:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the USART Wake Up from Stop Mode Interrupt is enabled or disabled.
3428:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
3429:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
3430:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          WUFIE         LL_USART_IsEnabledIT_WKUP
3431:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3432:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3433:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3434:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_WKUP(USART_TypeDef *USARTx)
3435:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3436:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_WUFIE) == (USART_CR3_WUFIE)) ? 1UL : 0UL);
3437:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3438:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3439:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #if defined(USART_TCBGT_SUPPORT)
3440:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /* Function available only on devices supporting Transmit Complete before Guard Time feature */
3441:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3442:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if the Smartcard Transmission Complete Before Guard Time Interrupt is enabled or 
3443:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @note   Macro IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
3444:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
3445:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          TCBGTIE       LL_USART_IsEnabledIT_TCBGT
3446:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3447:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3448:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3449:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIT_TCBGT(USART_TypeDef *USARTx)
3450:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3451:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_TCBGTIE) == (USART_CR3_TCBGTIE)) ? 1UL : 0UL);
3452:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3453:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** #endif /* USART_TCBGT_SUPPORT */
3454:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3455:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3456:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
3457:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3458:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3459:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_DMA_Management DMA_Management
3460:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
3461:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3462:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3463:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3464:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable DMA Mode for reception
3465:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DMAR          LL_USART_EnableDMAReq_RX
3466:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3467:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3468:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3469:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDMAReq_RX(USART_TypeDef *USARTx)
3470:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3471:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_DMAR);
3472:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3473:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3474:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3475:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable DMA Mode for reception
3476:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DMAR          LL_USART_DisableDMAReq_RX
3477:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3478:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3479:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3480:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDMAReq_RX(USART_TypeDef *USARTx)
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 116


3481:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3482:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_DMAR);
3483:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3484:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3485:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3486:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if DMA Mode is enabled for reception
3487:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DMAR          LL_USART_IsEnabledDMAReq_RX
3488:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3489:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3490:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3491:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDMAReq_RX(USART_TypeDef *USARTx)
3492:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3493:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DMAR) == (USART_CR3_DMAR)) ? 1UL : 0UL);
3494:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3495:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3496:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3497:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable DMA Mode for transmission
3498:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DMAT          LL_USART_EnableDMAReq_TX
3499:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3500:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3501:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3502:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDMAReq_TX(USART_TypeDef *USARTx)
3503:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3504:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_SET_BIT(USARTx->CR3, USART_CR3_DMAT);
3505:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3506:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3507:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3508:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable DMA Mode for transmission
3509:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DMAT          LL_USART_DisableDMAReq_TX
3510:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3511:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3512:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3513:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDMAReq_TX(USART_TypeDef *USARTx)
3514:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3515:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   ATOMIC_CLEAR_BIT(USARTx->CR3, USART_CR3_DMAT);
3516:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3517:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3518:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3519:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Check if DMA Mode is enabled for transmission
3520:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DMAT          LL_USART_IsEnabledDMAReq_TX
3521:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3522:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3523:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3524:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDMAReq_TX(USART_TypeDef *USARTx)
3525:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3526:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DMAT) == (USART_CR3_DMAT)) ? 1UL : 0UL);
3527:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3528:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3529:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3530:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Enable DMA Disabling on Reception Error
3531:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DDRE          LL_USART_EnableDMADeactOnRxErr
3532:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3533:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3534:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3535:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDMADeactOnRxErr(USART_TypeDef *USARTx)
3536:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3537:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_DDRE);
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 117


3538:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3539:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3540:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3541:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Disable DMA Disabling on Reception Error
3542:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DDRE          LL_USART_DisableDMADeactOnRxErr
3543:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3544:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3545:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3546:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDMADeactOnRxErr(USART_TypeDef *USARTx)
3547:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3548:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_DDRE);
3549:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3550:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3551:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3552:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Indicate if DMA Disabling on Reception Error is disabled
3553:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll CR3          DDRE          LL_USART_IsEnabledDMADeactOnRxErr
3554:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3555:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
3556:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3557:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledDMADeactOnRxErr(USART_TypeDef *USARTx)
3558:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3559:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_DDRE) == (USART_CR3_DDRE)) ? 1UL : 0UL);
3560:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3561:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3562:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3563:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Get the data register address used for DMA transfer
3564:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll RDR          RDR           LL_USART_DMA_GetRegAddr\n
3565:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll TDR          TDR           LL_USART_DMA_GetRegAddr
3566:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3567:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Direction This parameter can be one of the following values:
3568:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DMA_REG_DATA_TRANSMIT
3569:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   *         @arg @ref LL_USART_DMA_REG_DATA_RECEIVE
3570:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Address of data register
3571:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3572:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_DMA_GetRegAddr(USART_TypeDef *USARTx, uint32_t Direction)
3573:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3574:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   uint32_t data_reg_addr;
3575:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3576:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   if (Direction == LL_USART_DMA_REG_DATA_TRANSMIT)
3577:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   {
3578:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     /* return address of TDR register */
3579:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     data_reg_addr = (uint32_t) &(USARTx->TDR);
3580:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   }
3581:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   else
3582:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   {
3583:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     /* return address of RDR register */
3584:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****     data_reg_addr = (uint32_t) &(USARTx->RDR);
3585:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   }
3586:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3587:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return data_reg_addr;
3588:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3589:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3590:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3591:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @}
3592:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3593:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3594:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Data_Management Data_Management
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 118


3595:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @{
3596:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3597:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3598:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3599:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Read Receiver Data register (Receive Data value, 8 bits)
3600:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll RDR          RDR           LL_USART_ReceiveData8
3601:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3602:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
3603:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3604:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint8_t LL_USART_ReceiveData8(USART_TypeDef *USARTx)
3605:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 813              		.loc 3 3605 1
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 8
 816              		@ frame_needed = 1, uses_anonymous_args = 0
 817 0000 80B5     		push	{r7, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 82B0     		sub	sp, sp, #8
 822              		.cfi_def_cfa_offset 16
 823 0004 00AF     		add	r7, sp, #0
 824              		.cfi_def_cfa_register 7
 825 0006 7860     		str	r0, [r7, #4]
3606:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint8_t)(READ_BIT(USARTx->RDR, USART_RDR_RDR) & 0xFFU);
 826              		.loc 3 3606 20
 827 0008 7B68     		ldr	r3, [r7, #4]
 828 000a 5B6A     		ldr	r3, [r3, #36]
 829              		.loc 3 3606 10
 830 000c DBB2     		uxtb	r3, r3
3607:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 831              		.loc 3 3607 1
 832 000e 1800     		movs	r0, r3
 833 0010 BD46     		mov	sp, r7
 834 0012 02B0     		add	sp, sp, #8
 835              		@ sp needed
 836 0014 80BD     		pop	{r7, pc}
 837              		.cfi_endproc
 838              	.LFE1172:
 840              		.section	.text.LL_USART_TransmitData8,"ax",%progbits
 841              		.align	1
 842              		.syntax unified
 843              		.code	16
 844              		.thumb_func
 845              		.fpu softvfp
 847              	LL_USART_TransmitData8:
 848              	.LFB1174:
3608:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3609:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3610:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Read Receiver Data register (Receive Data value, 9 bits)
3611:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll RDR          RDR           LL_USART_ReceiveData9
3612:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3613:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x1FF
3614:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3615:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE uint16_t LL_USART_ReceiveData9(USART_TypeDef *USARTx)
3616:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
3617:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   return (uint16_t)(READ_BIT(USARTx->RDR, USART_RDR_RDR));
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 119


3618:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
3619:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** 
3620:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** /**
3621:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @brief  Write in Transmitter Data Register (Transmit Data value, 8 bits)
3622:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @rmtoll TDR          TDR           LL_USART_TransmitData8
3623:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  USARTx USART Instance
3624:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @param  Value between Min_Data=0x00 and Max_Data=0xFF
3625:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   * @retval None
3626:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   */
3627:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_TransmitData8(USART_TypeDef *USARTx, uint8_t Value)
3628:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** {
 849              		.loc 3 3628 1
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 8
 852              		@ frame_needed = 1, uses_anonymous_args = 0
 853 0000 80B5     		push	{r7, lr}
 854              		.cfi_def_cfa_offset 8
 855              		.cfi_offset 7, -8
 856              		.cfi_offset 14, -4
 857 0002 82B0     		sub	sp, sp, #8
 858              		.cfi_def_cfa_offset 16
 859 0004 00AF     		add	r7, sp, #0
 860              		.cfi_def_cfa_register 7
 861 0006 7860     		str	r0, [r7, #4]
 862 0008 0A00     		movs	r2, r1
 863 000a FB1C     		adds	r3, r7, #3
 864 000c 1A70     		strb	r2, [r3]
3629:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h ****   USARTx->TDR = Value;
 865              		.loc 3 3629 15
 866 000e FB1C     		adds	r3, r7, #3
 867 0010 1A78     		ldrb	r2, [r3]
 868 0012 7B68     		ldr	r3, [r7, #4]
 869 0014 9A62     		str	r2, [r3, #40]
3630:../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_usart.h **** }
 870              		.loc 3 3630 1
 871 0016 C046     		nop
 872 0018 BD46     		mov	sp, r7
 873 001a 02B0     		add	sp, sp, #8
 874              		@ sp needed
 875 001c 80BD     		pop	{r7, pc}
 876              		.cfi_endproc
 877              	.LFE1174:
 879              		.section	.bss.rx_buffer,"aw",%nobits
 880              		.align	2
 883              	rx_buffer:
 884 0000 00000000 		.space	512
 884      00000000 
 884      00000000 
 884      00000000 
 884      00000000 
 885              		.section	.bss.tx_buffer,"aw",%nobits
 886              		.align	2
 889              	tx_buffer:
 890 0000 00000000 		.space	512
 890      00000000 
 890      00000000 
 890      00000000 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 120


 890      00000000 
 891              		.section	.bss.rx_fifo,"aw",%nobits
 892              		.align	2
 895              	rx_fifo:
 896 0000 00000000 		.space	20
 896      00000000 
 896      00000000 
 896      00000000 
 896      00000000 
 897              		.section	.bss.tx_fifo,"aw",%nobits
 898              		.align	2
 901              	tx_fifo:
 902 0000 00000000 		.space	20
 902      00000000 
 902      00000000 
 902      00000000 
 902      00000000 
 903              		.section	.bss.writing,"aw",%nobits
 906              	writing:
 907 0000 00       		.space	1
 908              		.section	.text.hw_init,"ax",%progbits
 909              		.align	1
 910              		.syntax unified
 911              		.code	16
 912              		.thumb_func
 913              		.fpu softvfp
 915              	hw_init:
 916              	.LFB1186:
 917              		.file 5 "log_uart.c"
   1:log_uart.c    **** #include "log_uart.h"
   2:log_uart.c    **** 
   3:log_uart.c    **** #include "board.h"
   4:log_uart.c    **** #include "common.h"
   5:log_uart.c    **** #include "fifo.h"
   6:log_uart.c    **** 
   7:log_uart.c    **** #include <stdint.h>
   8:log_uart.c    **** #include <stdbool.h>
   9:log_uart.c    **** #include <string.h>
  10:log_uart.c    **** 
  11:log_uart.c    **** static uint8_t rx_buffer[LOG_UART_RX_BUFFER_SIZE];
  12:log_uart.c    **** static uint8_t tx_buffer[LOG_UART_TX_BUFFER_SIZE];
  13:log_uart.c    **** 
  14:log_uart.c    **** static fifo_t rx_fifo;
  15:log_uart.c    **** static fifo_t tx_fifo;
  16:log_uart.c    **** 
  17:log_uart.c    **** static bool writing = false;
  18:log_uart.c    **** 
  19:log_uart.c    **** static void hw_init(void)
  20:log_uart.c    **** {
 918              		.loc 5 20 1
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 56
 921              		@ frame_needed = 1, uses_anonymous_args = 0
 922 0000 90B5     		push	{r4, r7, lr}
 923              		.cfi_def_cfa_offset 12
 924              		.cfi_offset 4, -12
 925              		.cfi_offset 7, -8
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 121


 926              		.cfi_offset 14, -4
 927 0002 8FB0     		sub	sp, sp, #60
 928              		.cfi_def_cfa_offset 72
 929 0004 00AF     		add	r7, sp, #0
 930              		.cfi_def_cfa_register 7
  21:log_uart.c    ****   LL_USART_InitTypeDef uart_config = { 0 };
 931              		.loc 5 21 24
 932 0006 1C24     		movs	r4, #28
 933 0008 3B19     		adds	r3, r7, r4
 934 000a 1800     		movs	r0, r3
 935 000c 1C23     		movs	r3, #28
 936 000e 1A00     		movs	r2, r3
 937 0010 0021     		movs	r1, #0
 938 0012 FFF7FEFF 		bl	memset
  22:log_uart.c    ****   LL_GPIO_InitTypeDef gpio_config = { 0 };
 939              		.loc 5 22 23
 940 0016 3B1D     		adds	r3, r7, #4
 941 0018 1800     		movs	r0, r3
 942 001a 1823     		movs	r3, #24
 943 001c 1A00     		movs	r2, r3
 944 001e 0021     		movs	r1, #0
 945 0020 FFF7FEFF 		bl	memset
  23:log_uart.c    **** 
  24:log_uart.c    ****   LOG_UART_CLK_EN();
 946              		.loc 5 24 3
 947 0024 8023     		movs	r3, #128
 948 0026 9B02     		lsls	r3, r3, #10
 949 0028 1800     		movs	r0, r3
 950 002a FFF7FEFF 		bl	LL_APB1_GRP1_EnableClock
  25:log_uart.c    ****   LOG_UART_GPIO_CLK_EN();
 951              		.loc 5 25 3
 952 002e 0120     		movs	r0, #1
 953 0030 FFF7FEFF 		bl	LL_IOP_GRP1_EnableClock
  26:log_uart.c    **** 
  27:log_uart.c    ****   gpio_config.Pin = LOG_UART_RX_PIN | LOG_UART_TX_PIN;
 954              		.loc 5 27 19
 955 0034 3B1D     		adds	r3, r7, #4
 956 0036 0C22     		movs	r2, #12
 957 0038 1A60     		str	r2, [r3]
  28:log_uart.c    ****   gpio_config.Mode = LL_GPIO_MODE_ALTERNATE;
 958              		.loc 5 28 20
 959 003a 3B1D     		adds	r3, r7, #4
 960 003c 0222     		movs	r2, #2
 961 003e 5A60     		str	r2, [r3, #4]
  29:log_uart.c    ****   gpio_config.Speed = LL_GPIO_SPEED_FREQ_VERY_HIGH;
 962              		.loc 5 29 21
 963 0040 3B1D     		adds	r3, r7, #4
 964 0042 0322     		movs	r2, #3
 965 0044 9A60     		str	r2, [r3, #8]
  30:log_uart.c    ****   gpio_config.OutputType = LL_GPIO_OUTPUT_PUSHPULL;
 966              		.loc 5 30 26
 967 0046 3B1D     		adds	r3, r7, #4
 968 0048 0022     		movs	r2, #0
 969 004a DA60     		str	r2, [r3, #12]
  31:log_uart.c    ****   gpio_config.Pull = LL_GPIO_PULL_NO;
 970              		.loc 5 31 20
 971 004c 3B1D     		adds	r3, r7, #4
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 122


 972 004e 0022     		movs	r2, #0
 973 0050 1A61     		str	r2, [r3, #16]
  32:log_uart.c    ****   gpio_config.Alternate = LOG_UART_GPIO_AF;
 974              		.loc 5 32 25
 975 0052 3B1D     		adds	r3, r7, #4
 976 0054 0422     		movs	r2, #4
 977 0056 5A61     		str	r2, [r3, #20]
  33:log_uart.c    ****   LL_GPIO_Init(LOG_UART_GPIO_PORT, &gpio_config);
 978              		.loc 5 33 3
 979 0058 3A1D     		adds	r2, r7, #4
 980 005a A023     		movs	r3, #160
 981 005c DB05     		lsls	r3, r3, #23
 982 005e 1100     		movs	r1, r2
 983 0060 1800     		movs	r0, r3
 984 0062 FFF7FEFF 		bl	LL_GPIO_Init
  34:log_uart.c    **** 
  35:log_uart.c    ****   uart_config.BaudRate = LOG_UART_BAUDRATE;
 985              		.loc 5 35 24
 986 0066 3B19     		adds	r3, r7, r4
 987 0068 E122     		movs	r2, #225
 988 006a 5202     		lsls	r2, r2, #9
 989 006c 1A60     		str	r2, [r3]
  36:log_uart.c    ****   uart_config.DataWidth = LL_USART_DATAWIDTH_8B;
 990              		.loc 5 36 25
 991 006e 2100     		movs	r1, r4
 992 0070 7B18     		adds	r3, r7, r1
 993 0072 0022     		movs	r2, #0
 994 0074 5A60     		str	r2, [r3, #4]
  37:log_uart.c    ****   uart_config.StopBits = LL_USART_STOPBITS_1;
 995              		.loc 5 37 24
 996 0076 7B18     		adds	r3, r7, r1
 997 0078 0022     		movs	r2, #0
 998 007a 9A60     		str	r2, [r3, #8]
  38:log_uart.c    ****   uart_config.Parity = LL_USART_PARITY_NONE;
 999              		.loc 5 38 22
 1000 007c 7B18     		adds	r3, r7, r1
 1001 007e 0022     		movs	r2, #0
 1002 0080 DA60     		str	r2, [r3, #12]
  39:log_uart.c    ****   uart_config.TransferDirection = LL_USART_DIRECTION_TX_RX;
 1003              		.loc 5 39 33
 1004 0082 7B18     		adds	r3, r7, r1
 1005 0084 0C22     		movs	r2, #12
 1006 0086 1A61     		str	r2, [r3, #16]
  40:log_uart.c    ****   uart_config.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 1007              		.loc 5 40 35
 1008 0088 7B18     		adds	r3, r7, r1
 1009 008a 0022     		movs	r2, #0
 1010 008c 5A61     		str	r2, [r3, #20]
  41:log_uart.c    ****   uart_config.OverSampling = LL_USART_OVERSAMPLING_16;
 1011              		.loc 5 41 28
 1012 008e 7B18     		adds	r3, r7, r1
 1013 0090 0022     		movs	r2, #0
 1014 0092 9A61     		str	r2, [r3, #24]
  42:log_uart.c    **** 
  43:log_uart.c    ****   LL_USART_Init(LOG_UART, &uart_config);
 1015              		.loc 5 43 3
 1016 0094 7B18     		adds	r3, r7, r1
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 123


 1017 0096 104A     		ldr	r2, .L40
 1018 0098 1900     		movs	r1, r3
 1019 009a 1000     		movs	r0, r2
 1020 009c FFF7FEFF 		bl	LL_USART_Init
  44:log_uart.c    **** 
  45:log_uart.c    ****   LL_USART_ConfigAsyncMode(LOG_UART);
 1021              		.loc 5 45 3
 1022 00a0 0D4B     		ldr	r3, .L40
 1023 00a2 1800     		movs	r0, r3
 1024 00a4 FFF7FEFF 		bl	LL_USART_ConfigAsyncMode
  46:log_uart.c    ****   LL_USART_Enable(LOG_UART);
 1025              		.loc 5 46 3
 1026 00a8 0B4B     		ldr	r3, .L40
 1027 00aa 1800     		movs	r0, r3
 1028 00ac FFF7FEFF 		bl	LL_USART_Enable
  47:log_uart.c    **** 
  48:log_uart.c    ****   LL_USART_EnableIT_RXNE(LOG_UART);
 1029              		.loc 5 48 3
 1030 00b0 094B     		ldr	r3, .L40
 1031 00b2 1800     		movs	r0, r3
 1032 00b4 FFF7FEFF 		bl	LL_USART_EnableIT_RXNE
  49:log_uart.c    ****   LL_USART_EnableIT_TC(LOG_UART);
 1033              		.loc 5 49 3
 1034 00b8 074B     		ldr	r3, .L40
 1035 00ba 1800     		movs	r0, r3
 1036 00bc FFF7FEFF 		bl	LL_USART_EnableIT_TC
  50:log_uart.c    **** 
  51:log_uart.c    ****   NVIC_SetPriority(LOG_UART_IRQn, LOG_UART_PRIORITY);
 1037              		.loc 5 51 3
 1038 00c0 0A21     		movs	r1, #10
 1039 00c2 1C20     		movs	r0, #28
 1040 00c4 FFF7FEFF 		bl	__NVIC_SetPriority
  52:log_uart.c    ****   NVIC_EnableIRQ(LOG_UART_IRQn);
 1041              		.loc 5 52 3
 1042 00c8 1C20     		movs	r0, #28
 1043 00ca FFF7FEFF 		bl	__NVIC_EnableIRQ
  53:log_uart.c    **** }
 1044              		.loc 5 53 1
 1045 00ce C046     		nop
 1046 00d0 BD46     		mov	sp, r7
 1047 00d2 0FB0     		add	sp, sp, #60
 1048              		@ sp needed
 1049 00d4 90BD     		pop	{r4, r7, pc}
 1050              	.L41:
 1051 00d6 C046     		.align	2
 1052              	.L40:
 1053 00d8 00440040 		.word	1073759232
 1054              		.cfi_endproc
 1055              	.LFE1186:
 1057              		.section	.text.tx,"ax",%progbits
 1058              		.align	1
 1059              		.syntax unified
 1060              		.code	16
 1061              		.thumb_func
 1062              		.fpu softvfp
 1064              	tx:
 1065              	.LFB1187:
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 124


  54:log_uart.c    **** 
  55:log_uart.c    **** static inline void tx(void)
  56:log_uart.c    **** {
 1066              		.loc 5 56 1
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 8
 1069              		@ frame_needed = 1, uses_anonymous_args = 0
 1070 0000 80B5     		push	{r7, lr}
 1071              		.cfi_def_cfa_offset 8
 1072              		.cfi_offset 7, -8
 1073              		.cfi_offset 14, -4
 1074 0002 82B0     		sub	sp, sp, #8
 1075              		.cfi_def_cfa_offset 16
 1076 0004 00AF     		add	r7, sp, #0
 1077              		.cfi_def_cfa_register 7
  57:log_uart.c    ****   uint8_t write_byte;
  58:log_uart.c    **** 
  59:log_uart.c    ****   if (fifo_pop(&tx_fifo, &write_byte, 1) == 1) {
 1078              		.loc 5 59 7
 1079 0006 F91D     		adds	r1, r7, #7
 1080 0008 0A4B     		ldr	r3, .L45
 1081 000a 0122     		movs	r2, #1
 1082 000c 1800     		movs	r0, r3
 1083 000e FFF7FEFF 		bl	fifo_pop
 1084 0012 0300     		movs	r3, r0
 1085              		.loc 5 59 6
 1086 0014 012B     		cmp	r3, #1
 1087 0016 09D1     		bne	.L44
  60:log_uart.c    ****     LL_USART_TransmitData8(LOG_UART, write_byte);
 1088              		.loc 5 60 5
 1089 0018 FB1D     		adds	r3, r7, #7
 1090 001a 1B78     		ldrb	r3, [r3]
 1091 001c 064A     		ldr	r2, .L45+4
 1092 001e 1900     		movs	r1, r3
 1093 0020 1000     		movs	r0, r2
 1094 0022 FFF7FEFF 		bl	LL_USART_TransmitData8
  61:log_uart.c    ****     writing = true;
 1095              		.loc 5 61 13
 1096 0026 054B     		ldr	r3, .L45+8
 1097 0028 0122     		movs	r2, #1
 1098 002a 1A70     		strb	r2, [r3]
 1099              	.L44:
  62:log_uart.c    ****   }
  63:log_uart.c    **** }
 1100              		.loc 5 63 1
 1101 002c C046     		nop
 1102 002e BD46     		mov	sp, r7
 1103 0030 02B0     		add	sp, sp, #8
 1104              		@ sp needed
 1105 0032 80BD     		pop	{r7, pc}
 1106              	.L46:
 1107              		.align	2
 1108              	.L45:
 1109 0034 00000000 		.word	tx_fifo
 1110 0038 00440040 		.word	1073759232
 1111 003c 00000000 		.word	writing
 1112              		.cfi_endproc
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 125


 1113              	.LFE1187:
 1115              		.section	.text.log_uart_is_writing,"ax",%progbits
 1116              		.align	1
 1117              		.global	log_uart_is_writing
 1118              		.syntax unified
 1119              		.code	16
 1120              		.thumb_func
 1121              		.fpu softvfp
 1123              	log_uart_is_writing:
 1124              	.LFB1188:
  64:log_uart.c    **** 
  65:log_uart.c    **** bool log_uart_is_writing(void)
  66:log_uart.c    **** {
 1125              		.loc 5 66 1
 1126              		.cfi_startproc
 1127              		@ args = 0, pretend = 0, frame = 0
 1128              		@ frame_needed = 1, uses_anonymous_args = 0
 1129 0000 80B5     		push	{r7, lr}
 1130              		.cfi_def_cfa_offset 8
 1131              		.cfi_offset 7, -8
 1132              		.cfi_offset 14, -4
 1133 0002 00AF     		add	r7, sp, #0
 1134              		.cfi_def_cfa_register 7
  67:log_uart.c    ****   return writing;
 1135              		.loc 5 67 10
 1136 0004 024B     		ldr	r3, .L49
 1137 0006 1B78     		ldrb	r3, [r3]
  68:log_uart.c    **** }
 1138              		.loc 5 68 1
 1139 0008 1800     		movs	r0, r3
 1140 000a BD46     		mov	sp, r7
 1141              		@ sp needed
 1142 000c 80BD     		pop	{r7, pc}
 1143              	.L50:
 1144 000e C046     		.align	2
 1145              	.L49:
 1146 0010 00000000 		.word	writing
 1147              		.cfi_endproc
 1148              	.LFE1188:
 1150              		.section	.text.log_uart_write,"ax",%progbits
 1151              		.align	1
 1152              		.global	log_uart_write
 1153              		.syntax unified
 1154              		.code	16
 1155              		.thumb_func
 1156              		.fpu softvfp
 1158              	log_uart_write:
 1159              	.LFB1189:
  69:log_uart.c    **** 
  70:log_uart.c    **** void log_uart_write(uint8_t *data, uint32_t length)
  71:log_uart.c    **** {
 1160              		.loc 5 71 1
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 16
 1163              		@ frame_needed = 1, uses_anonymous_args = 0
 1164 0000 80B5     		push	{r7, lr}
 1165              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 126


 1166              		.cfi_offset 7, -8
 1167              		.cfi_offset 14, -4
 1168 0002 84B0     		sub	sp, sp, #16
 1169              		.cfi_def_cfa_offset 24
 1170 0004 00AF     		add	r7, sp, #0
 1171              		.cfi_def_cfa_register 7
 1172 0006 7860     		str	r0, [r7, #4]
 1173 0008 3960     		str	r1, [r7]
 1174              	.LBB48:
 1175              	.LBB49:
 386:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1176              		.loc 4 386 3
 1177              		.syntax divided
 1178              	@ 386 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1179 000a EFF31083 		MRS r3, primask
 1180              	@ 0 "" 2
 1181              		.thumb
 1182              		.syntax unified
 1183 000e BB60     		str	r3, [r7, #8]
 387:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1184              		.loc 4 387 9
 1185 0010 BB68     		ldr	r3, [r7, #8]
 1186              	.LBE49:
 1187              	.LBE48:
  72:log_uart.c    ****   DISABLE_IRQ();
 1188              		.loc 5 72 3
 1189 0012 FB60     		str	r3, [r7, #12]
 1190              	.LBB50:
 1191              	.LBB51:
 142:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1192              		.loc 4 142 3
 1193              		.syntax divided
 1194              	@ 142 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1195 0014 72B6     		cpsid i
 1196              	@ 0 "" 2
 143:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1197              		.loc 4 143 1
 1198              		.thumb
 1199              		.syntax unified
 1200 0016 C046     		nop
 1201              	.LBE51:
 1202              	.LBE50:
  73:log_uart.c    ****   fifo_push(&tx_fifo, data, length);
 1203              		.loc 5 73 3
 1204 0018 3A68     		ldr	r2, [r7]
 1205 001a 7968     		ldr	r1, [r7, #4]
 1206 001c 0A4B     		ldr	r3, .L56
 1207 001e 1800     		movs	r0, r3
 1208 0020 FFF7FEFF 		bl	fifo_push
  74:log_uart.c    ****   if (!writing) {
 1209              		.loc 5 74 7
 1210 0024 094B     		ldr	r3, .L56+4
 1211 0026 1B78     		ldrb	r3, [r3]
 1212 0028 0122     		movs	r2, #1
 1213 002a 5340     		eors	r3, r2
 1214 002c DBB2     		uxtb	r3, r3
 1215              		.loc 5 74 6
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 127


 1216 002e 002B     		cmp	r3, #0
 1217 0030 01D0     		beq	.L53
  75:log_uart.c    ****     tx();
 1218              		.loc 5 75 5
 1219 0032 FFF7FEFF 		bl	tx
 1220              	.L53:
  76:log_uart.c    ****   }
  77:log_uart.c    ****   ENABLE_IRQ();
 1221              		.loc 5 77 3
 1222 0036 FB68     		ldr	r3, [r7, #12]
 1223 0038 002B     		cmp	r3, #0
 1224 003a 01D1     		bne	.L55
 1225              	.LBB52:
 1226              	.LBB53:
 131:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1227              		.loc 4 131 3
 1228              		.syntax divided
 1229              	@ 131 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1230 003c 62B6     		cpsie i
 1231              	@ 0 "" 2
 132:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1232              		.loc 4 132 1
 1233              		.thumb
 1234              		.syntax unified
 1235 003e C046     		nop
 1236              	.L55:
 1237              	.LBE53:
 1238              	.LBE52:
  78:log_uart.c    **** }
 1239              		.loc 5 78 1
 1240 0040 C046     		nop
 1241 0042 BD46     		mov	sp, r7
 1242 0044 04B0     		add	sp, sp, #16
 1243              		@ sp needed
 1244 0046 80BD     		pop	{r7, pc}
 1245              	.L57:
 1246              		.align	2
 1247              	.L56:
 1248 0048 00000000 		.word	tx_fifo
 1249 004c 00000000 		.word	writing
 1250              		.cfi_endproc
 1251              	.LFE1189:
 1253              		.section	.text.log_uart_read,"ax",%progbits
 1254              		.align	1
 1255              		.global	log_uart_read
 1256              		.syntax unified
 1257              		.code	16
 1258              		.thumb_func
 1259              		.fpu softvfp
 1261              	log_uart_read:
 1262              	.LFB1190:
  79:log_uart.c    **** 
  80:log_uart.c    **** int log_uart_read(uint8_t *data, uint32_t length)
  81:log_uart.c    **** {
 1263              		.loc 5 81 1
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 128


 1266              		@ frame_needed = 1, uses_anonymous_args = 0
 1267 0000 80B5     		push	{r7, lr}
 1268              		.cfi_def_cfa_offset 8
 1269              		.cfi_offset 7, -8
 1270              		.cfi_offset 14, -4
 1271 0002 86B0     		sub	sp, sp, #24
 1272              		.cfi_def_cfa_offset 32
 1273 0004 00AF     		add	r7, sp, #0
 1274              		.cfi_def_cfa_register 7
 1275 0006 7860     		str	r0, [r7, #4]
 1276 0008 3960     		str	r1, [r7]
 1277              	.LBB54:
 1278              	.LBB55:
 386:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1279              		.loc 4 386 3
 1280              		.syntax divided
 1281              	@ 386 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1282 000a EFF31083 		MRS r3, primask
 1283              	@ 0 "" 2
 1284              		.thumb
 1285              		.syntax unified
 1286 000e FB60     		str	r3, [r7, #12]
 387:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1287              		.loc 4 387 9
 1288 0010 FB68     		ldr	r3, [r7, #12]
 1289              	.LBE55:
 1290              	.LBE54:
  82:log_uart.c    ****   DISABLE_IRQ();
 1291              		.loc 5 82 3
 1292 0012 7B61     		str	r3, [r7, #20]
 1293              	.LBB56:
 1294              	.LBB57:
 142:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1295              		.loc 4 142 3
 1296              		.syntax divided
 1297              	@ 142 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1298 0014 72B6     		cpsid i
 1299              	@ 0 "" 2
 143:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1300              		.loc 4 143 1
 1301              		.thumb
 1302              		.syntax unified
 1303 0016 C046     		nop
 1304              	.LBE57:
 1305              	.LBE56:
  83:log_uart.c    ****   int ret = fifo_pop(&rx_fifo, data, length);
 1306              		.loc 5 83 13
 1307 0018 3A68     		ldr	r2, [r7]
 1308 001a 7968     		ldr	r1, [r7, #4]
 1309 001c 074B     		ldr	r3, .L62
 1310 001e 1800     		movs	r0, r3
 1311 0020 FFF7FEFF 		bl	fifo_pop
 1312 0024 0300     		movs	r3, r0
 1313 0026 3B61     		str	r3, [r7, #16]
  84:log_uart.c    ****   ENABLE_IRQ();
 1314              		.loc 5 84 3
 1315 0028 7B69     		ldr	r3, [r7, #20]
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 129


 1316 002a 002B     		cmp	r3, #0
 1317 002c 01D1     		bne	.L60
 1318              	.LBB58:
 1319              	.LBB59:
 131:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1320              		.loc 4 131 3
 1321              		.syntax divided
 1322              	@ 131 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1323 002e 62B6     		cpsie i
 1324              	@ 0 "" 2
 132:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1325              		.loc 4 132 1
 1326              		.thumb
 1327              		.syntax unified
 1328 0030 C046     		nop
 1329              	.L60:
 1330              	.LBE59:
 1331              	.LBE58:
  85:log_uart.c    ****   return ret;
 1332              		.loc 5 85 10
 1333 0032 3B69     		ldr	r3, [r7, #16]
  86:log_uart.c    **** }
 1334              		.loc 5 86 1
 1335 0034 1800     		movs	r0, r3
 1336 0036 BD46     		mov	sp, r7
 1337 0038 06B0     		add	sp, sp, #24
 1338              		@ sp needed
 1339 003a 80BD     		pop	{r7, pc}
 1340              	.L63:
 1341              		.align	2
 1342              	.L62:
 1343 003c 00000000 		.word	rx_fifo
 1344              		.cfi_endproc
 1345              	.LFE1190:
 1347              		.section	.text.log_uart_init,"ax",%progbits
 1348              		.align	1
 1349              		.global	log_uart_init
 1350              		.syntax unified
 1351              		.code	16
 1352              		.thumb_func
 1353              		.fpu softvfp
 1355              	log_uart_init:
 1356              	.LFB1191:
  87:log_uart.c    **** 
  88:log_uart.c    **** void log_uart_init(void)
  89:log_uart.c    **** {
 1357              		.loc 5 89 1
 1358              		.cfi_startproc
 1359              		@ args = 0, pretend = 0, frame = 0
 1360              		@ frame_needed = 1, uses_anonymous_args = 0
 1361 0000 80B5     		push	{r7, lr}
 1362              		.cfi_def_cfa_offset 8
 1363              		.cfi_offset 7, -8
 1364              		.cfi_offset 14, -4
 1365 0002 00AF     		add	r7, sp, #0
 1366              		.cfi_def_cfa_register 7
  90:log_uart.c    ****   hw_init();
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 130


 1367              		.loc 5 90 3
 1368 0004 FFF7FEFF 		bl	hw_init
  91:log_uart.c    ****   fifo_init(&rx_fifo, rx_buffer, LOG_UART_RX_BUFFER_SIZE);
 1369              		.loc 5 91 3
 1370 0008 8023     		movs	r3, #128
 1371 000a 9A00     		lsls	r2, r3, #2
 1372 000c 0749     		ldr	r1, .L65
 1373 000e 084B     		ldr	r3, .L65+4
 1374 0010 1800     		movs	r0, r3
 1375 0012 FFF7FEFF 		bl	fifo_init
  92:log_uart.c    ****   fifo_init(&tx_fifo, tx_buffer, LOG_UART_TX_BUFFER_SIZE);
 1376              		.loc 5 92 3
 1377 0016 8023     		movs	r3, #128
 1378 0018 9A00     		lsls	r2, r3, #2
 1379 001a 0649     		ldr	r1, .L65+8
 1380 001c 064B     		ldr	r3, .L65+12
 1381 001e 1800     		movs	r0, r3
 1382 0020 FFF7FEFF 		bl	fifo_init
  93:log_uart.c    **** }
 1383              		.loc 5 93 1
 1384 0024 C046     		nop
 1385 0026 BD46     		mov	sp, r7
 1386              		@ sp needed
 1387 0028 80BD     		pop	{r7, pc}
 1388              	.L66:
 1389 002a C046     		.align	2
 1390              	.L65:
 1391 002c 00000000 		.word	rx_buffer
 1392 0030 00000000 		.word	rx_fifo
 1393 0034 00000000 		.word	tx_buffer
 1394 0038 00000000 		.word	tx_fifo
 1395              		.cfi_endproc
 1396              	.LFE1191:
 1398              		.section	.text.USART2_IRQHandler,"ax",%progbits
 1399              		.align	1
 1400              		.global	USART2_IRQHandler
 1401              		.syntax unified
 1402              		.code	16
 1403              		.thumb_func
 1404              		.fpu softvfp
 1406              	USART2_IRQHandler:
 1407              	.LFB1192:
  94:log_uart.c    **** 
  95:log_uart.c    **** void LOG_UART_IRQHandler(void)
  96:log_uart.c    **** {
 1408              		.loc 5 96 1
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 16
 1411              		@ frame_needed = 1, uses_anonymous_args = 0
 1412 0000 80B5     		push	{r7, lr}
 1413              		.cfi_def_cfa_offset 8
 1414              		.cfi_offset 7, -8
 1415              		.cfi_offset 14, -4
 1416 0002 84B0     		sub	sp, sp, #16
 1417              		.cfi_def_cfa_offset 24
 1418 0004 00AF     		add	r7, sp, #0
 1419              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 131


 1420              	.LBB60:
 1421              	.LBB61:
 386:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1422              		.loc 4 386 3
 1423              		.syntax divided
 1424              	@ 386 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1425 0006 EFF31083 		MRS r3, primask
 1426              	@ 0 "" 2
 1427              		.thumb
 1428              		.syntax unified
 1429 000a BB60     		str	r3, [r7, #8]
 387:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1430              		.loc 4 387 9
 1431 000c BB68     		ldr	r3, [r7, #8]
 1432              	.LBE61:
 1433              	.LBE60:
  97:log_uart.c    ****   DISABLE_IRQ();
 1434              		.loc 5 97 3
 1435 000e FB60     		str	r3, [r7, #12]
 1436              	.LBB62:
 1437              	.LBB63:
 142:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1438              		.loc 4 142 3
 1439              		.syntax divided
 1440              	@ 142 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1441 0010 72B6     		cpsid i
 1442              	@ 0 "" 2
 143:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1443              		.loc 4 143 1
 1444              		.thumb
 1445              		.syntax unified
 1446 0012 C046     		nop
 1447              	.LBE63:
 1448              	.LBE62:
  98:log_uart.c    ****   uint8_t data;
  99:log_uart.c    ****   if (LL_USART_IsActiveFlag_RXNE(LOG_UART)) {
 1449              		.loc 5 99 7
 1450 0014 174B     		ldr	r3, .L73
 1451 0016 1800     		movs	r0, r3
 1452 0018 FFF7FEFF 		bl	LL_USART_IsActiveFlag_RXNE
 1453 001c 031E     		subs	r3, r0, #0
 1454              		.loc 5 99 6
 1455 001e 11D0     		beq	.L69
 100:log_uart.c    ****     data = LL_USART_ReceiveData8(LOG_UART);
 1456              		.loc 5 100 12
 1457 0020 144B     		ldr	r3, .L73
 1458 0022 1800     		movs	r0, r3
 1459 0024 FFF7FEFF 		bl	LL_USART_ReceiveData8
 1460 0028 0300     		movs	r3, r0
 1461 002a 1A00     		movs	r2, r3
 1462              		.loc 5 100 10
 1463 002c FB1D     		adds	r3, r7, #7
 1464 002e 1A70     		strb	r2, [r3]
 101:log_uart.c    ****     // TODO: make sure this is correct flag to clear
 102:log_uart.c    ****     LL_USART_ClearFlag_NE(LOG_UART);
 1465              		.loc 5 102 5
 1466 0030 104B     		ldr	r3, .L73
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 132


 1467 0032 1800     		movs	r0, r3
 1468 0034 FFF7FEFF 		bl	LL_USART_ClearFlag_NE
 103:log_uart.c    ****     fifo_push(&rx_fifo, &data, 1);
 1469              		.loc 5 103 5
 1470 0038 F91D     		adds	r1, r7, #7
 1471 003a 0F4B     		ldr	r3, .L73+4
 1472 003c 0122     		movs	r2, #1
 1473 003e 1800     		movs	r0, r3
 1474 0040 FFF7FEFF 		bl	fifo_push
 1475              	.L69:
 104:log_uart.c    ****   }
 105:log_uart.c    ****   if (LL_USART_IsActiveFlag_TC(LOG_UART)) {
 1476              		.loc 5 105 7
 1477 0044 0B4B     		ldr	r3, .L73
 1478 0046 1800     		movs	r0, r3
 1479 0048 FFF7FEFF 		bl	LL_USART_IsActiveFlag_TC
 1480 004c 031E     		subs	r3, r0, #0
 1481              		.loc 5 105 6
 1482 004e 08D0     		beq	.L70
 106:log_uart.c    ****     writing = false;
 1483              		.loc 5 106 13
 1484 0050 0A4B     		ldr	r3, .L73+8
 1485 0052 0022     		movs	r2, #0
 1486 0054 1A70     		strb	r2, [r3]
 107:log_uart.c    ****     LL_USART_ClearFlag_TC(LOG_UART);
 1487              		.loc 5 107 5
 1488 0056 074B     		ldr	r3, .L73
 1489 0058 1800     		movs	r0, r3
 1490 005a FFF7FEFF 		bl	LL_USART_ClearFlag_TC
 108:log_uart.c    ****     tx();
 1491              		.loc 5 108 5
 1492 005e FFF7FEFF 		bl	tx
 1493              	.L70:
 109:log_uart.c    ****   }
 110:log_uart.c    ****   ENABLE_IRQ();
 1494              		.loc 5 110 3
 1495 0062 FB68     		ldr	r3, [r7, #12]
 1496 0064 002B     		cmp	r3, #0
 1497 0066 01D1     		bne	.L72
 1498              	.LBB64:
 1499              	.LBB65:
 131:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1500              		.loc 4 131 3
 1501              		.syntax divided
 1502              	@ 131 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1503 0068 62B6     		cpsie i
 1504              	@ 0 "" 2
 132:../../dependencies/STM32CubeL0/Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1505              		.loc 4 132 1
 1506              		.thumb
 1507              		.syntax unified
 1508 006a C046     		nop
 1509              	.L72:
 1510              	.LBE65:
 1511              	.LBE64:
 111:log_uart.c    **** }
 1512              		.loc 5 111 1
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 133


 1513 006c C046     		nop
 1514 006e BD46     		mov	sp, r7
 1515 0070 04B0     		add	sp, sp, #16
 1516              		@ sp needed
 1517 0072 80BD     		pop	{r7, pc}
 1518              	.L74:
 1519              		.align	2
 1520              	.L73:
 1521 0074 00440040 		.word	1073759232
 1522 0078 00000000 		.word	rx_fifo
 1523 007c 00000000 		.word	writing
 1524              		.cfi_endproc
 1525              	.LFE1192:
 1527              		.text
 1528              	.Letext0:
 1529              		.file 6 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 1530              		.file 7 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 1531              		.file 8 "../../dependencies/STM32CubeL0/Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l053xx.h"
 1532              		.file 9 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_gpio.h"
 1533              		.file 10 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_dma.h"
 1534              		.file 11 "../../dependencies/STM32CubeL0/Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_ll_tim.h"
 1535              		.file 12 "../../libraries/fast_fifo/fifo.h"
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 134


DEFINED SYMBOLS
                            *ABS*:0000000000000000 log_uart.c
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:16     .text.__NVIC_EnableIRQ:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:23     .text.__NVIC_EnableIRQ:0000000000000000 __NVIC_EnableIRQ
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:70     .text.__NVIC_EnableIRQ:0000000000000030 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:75     .text.__NVIC_SetPriority:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:81     .text.__NVIC_SetPriority:0000000000000000 __NVIC_SetPriority
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:238    .text.__NVIC_SetPriority:00000000000000d4 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:244    .text.LL_APB1_GRP1_EnableClock:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:250    .text.LL_APB1_GRP1_EnableClock:0000000000000000 LL_APB1_GRP1_EnableClock
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:291    .text.LL_APB1_GRP1_EnableClock:0000000000000028 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:296    .text.LL_IOP_GRP1_EnableClock:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:302    .text.LL_IOP_GRP1_EnableClock:0000000000000000 LL_IOP_GRP1_EnableClock
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:342    .text.LL_IOP_GRP1_EnableClock:0000000000000028 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:347    .rodata.CHANNEL_OFFSET_TAB:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:350    .rodata.CHANNEL_OFFSET_TAB:0000000000000000 CHANNEL_OFFSET_TAB
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:353    .rodata.OFFSET_TAB_CCMRx:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:356    .rodata.OFFSET_TAB_CCMRx:0000000000000000 OFFSET_TAB_CCMRx
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:359    .rodata.SHIFT_TAB_OCxx:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:362    .rodata.SHIFT_TAB_OCxx:0000000000000000 SHIFT_TAB_OCxx
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:365    .rodata.SHIFT_TAB_ICxx:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:368    .rodata.SHIFT_TAB_ICxx:0000000000000000 SHIFT_TAB_ICxx
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:371    .rodata.SHIFT_TAB_CCxP:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:374    .rodata.SHIFT_TAB_CCxP:0000000000000000 SHIFT_TAB_CCxP
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:377    .text.LL_USART_Enable:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:383    .text.LL_USART_Enable:0000000000000000 LL_USART_Enable
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:416    .text.LL_USART_ConfigAsyncMode:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:422    .text.LL_USART_ConfigAsyncMode:0000000000000000 LL_USART_ConfigAsyncMode
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:461    .text.LL_USART_ConfigAsyncMode:000000000000002c $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:466    .text.LL_USART_IsActiveFlag_RXNE:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:472    .text.LL_USART_IsActiveFlag_RXNE:0000000000000000 LL_USART_IsActiveFlag_RXNE
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:512    .text.LL_USART_IsActiveFlag_TC:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:518    .text.LL_USART_IsActiveFlag_TC:0000000000000000 LL_USART_IsActiveFlag_TC
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:558    .text.LL_USART_ClearFlag_NE:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:564    .text.LL_USART_ClearFlag_NE:0000000000000000 LL_USART_ClearFlag_NE
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:593    .text.LL_USART_ClearFlag_TC:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:599    .text.LL_USART_ClearFlag_TC:0000000000000000 LL_USART_ClearFlag_TC
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:628    .text.LL_USART_EnableIT_RXNE:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:634    .text.LL_USART_EnableIT_RXNE:0000000000000000 LL_USART_EnableIT_RXNE
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:717    .text.LL_USART_EnableIT_TC:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:723    .text.LL_USART_EnableIT_TC:0000000000000000 LL_USART_EnableIT_TC
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:805    .text.LL_USART_ReceiveData8:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:811    .text.LL_USART_ReceiveData8:0000000000000000 LL_USART_ReceiveData8
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:841    .text.LL_USART_TransmitData8:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:847    .text.LL_USART_TransmitData8:0000000000000000 LL_USART_TransmitData8
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:880    .bss.rx_buffer:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:883    .bss.rx_buffer:0000000000000000 rx_buffer
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:886    .bss.tx_buffer:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:889    .bss.tx_buffer:0000000000000000 tx_buffer
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:892    .bss.rx_fifo:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:895    .bss.rx_fifo:0000000000000000 rx_fifo
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:898    .bss.tx_fifo:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:901    .bss.tx_fifo:0000000000000000 tx_fifo
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:906    .bss.writing:0000000000000000 writing
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:907    .bss.writing:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:909    .text.hw_init:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:915    .text.hw_init:0000000000000000 hw_init
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 135


/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1053   .text.hw_init:00000000000000d8 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1058   .text.tx:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1064   .text.tx:0000000000000000 tx
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1109   .text.tx:0000000000000034 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1116   .text.log_uart_is_writing:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1123   .text.log_uart_is_writing:0000000000000000 log_uart_is_writing
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1146   .text.log_uart_is_writing:0000000000000010 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1151   .text.log_uart_write:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1158   .text.log_uart_write:0000000000000000 log_uart_write
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1248   .text.log_uart_write:0000000000000048 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1254   .text.log_uart_read:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1261   .text.log_uart_read:0000000000000000 log_uart_read
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1343   .text.log_uart_read:000000000000003c $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1348   .text.log_uart_init:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1355   .text.log_uart_init:0000000000000000 log_uart_init
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1391   .text.log_uart_init:000000000000002c $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1399   .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1406   .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s:1521   .text.USART2_IRQHandler:0000000000000074 $d
                           .group:0000000000000000 wm4.0.a3d41f74abc56016cdc4c153f9dbdba1
                           .group:0000000000000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:0000000000000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.stdbool.h.29.07dce69c3b78884144b7f7bd19483461
                           .group:0000000000000000 wm4.log_uart.h.7.66d446d64feacee5b32ce31b9df1e791
                           .group:0000000000000000 wm4.stm32l0xx.h.41.7b64cc93e03e8878c239b019b0203858
                           .group:0000000000000000 wm4.stm32l053xx.h.37.ca2b7421d255c88f6356eb3a3a2ee1bf
                           .group:0000000000000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:0000000000000000 wm4.core_cm0plus.h.66.bb83319bcb10b4c5f12c477f85f2aa51
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.60b910ef2cf8eb62703f669ce6a864b2
                           .group:0000000000000000 wm4.core_cm0plus.h.127.cfee784d07c850b645554dc8add78e69
                           .group:0000000000000000 wm4.mpu_armv7.h.32.27b4593cb2f8d3152ca5d97a9d72b321
                           .group:0000000000000000 wm4.stm32l053xx.h.614.694649dd621f0085702f358f34f2e881
                           .group:0000000000000000 wm4.stm32l0xx.h.181.12fc143042e31117baaa7481c9b3a4da
                           .group:0000000000000000 wm4.stm32l0xx_ll_adc.h.53.91d59053932c36ec7ab0113730073858
                           .group:0000000000000000 wm4.stm32l0xx_ll_bus.h.39.0510174e5f715ad27b7a3ab14a00f67f
                           .group:0000000000000000 wm4.stm32l0xx_ll_cortex.h.36.79806d0582701c757eec56b9283c8db9
                           .group:0000000000000000 wm4.stm32l0xx_ll_dma.h.22.2c7ed561e963f82ffce8c2bce65b6553
                           .group:0000000000000000 wm4.stm32l0xx_ll_exti.h.22.40dada7a5d00275d94259df1c6059451
                           .group:0000000000000000 wm4.stm32l0xx_ll_gpio.h.22.2d480da0be320d9dd6c23b35850d228e
                           .group:0000000000000000 wm4.stm32l0xx_ll_i2c.h.22.725accc0a52325f50ab3a978af524a24
                           .group:0000000000000000 wm4.stm32l0xx_ll_lpuart.h.22.6020d530b61d554b81cf28e59330a90d
                           .group:0000000000000000 wm4.stm32l0xx_ll_pwr.h.22.37f0d8ce0f44f5122f24332e7c6edbd0
                           .group:0000000000000000 wm4.stm32l0xx_ll_rcc.h.22.3a6b3922d12b176ce51cb12e1f8867c4
                           .group:0000000000000000 wm4.stm32l0xx_ll_system.h.34.d04c425d3668e616038a98754635b261
                           .group:0000000000000000 wm4.stm32l0xx_ll_tim.h.22.59fb8166bd8c25f1f07b60ae6d7944da
                           .group:0000000000000000 wm4.stm32l0xx_ll_usart.h.22.15bd106c8b738649c65f9703ee30f935
                           .group:0000000000000000 wm4.stm32l0xx_ll_utils.h.34.15360273e66a16baad8d70fb7aab35d9
                           .group:0000000000000000 wm4.nucleo_board.h.19.f6441dc91cbcd2926d0150e5b2fb8daf
                           .group:0000000000000000 wm4.common.h.9.9862d16395f6d712cb62bb1aea663ff0
                           .group:0000000000000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:0000000000000000 wm4.ieeefp.h.77.f33a4dce62116f6f5175ff8bae57a54c
                           .group:0000000000000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:0000000000000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccdvgjV4.s 			page 136


                           .group:0000000000000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:0000000000000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:0000000000000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:0000000000000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:0000000000000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:0000000000000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:0000000000000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:0000000000000000 wm4.cdefs.h.49.75c8cf0da02add7669d4e6b77e254feb
                           .group:0000000000000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29

UNDEFINED SYMBOLS
memset
LL_GPIO_Init
LL_USART_Init
fifo_pop
fifo_push
fifo_init
